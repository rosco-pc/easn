%% Generated by the Erlang ASN.1 compiler version:1.7
%% Purpose: Erlang record definitions for each named and unnamed
%% SEQUENCE and SET, and macro definitions for each value
%% definition,in module CDRCCN



-record('UsedServiceUnitCreditControlDataTypes',{
tariffChangeUsage = asn1_NOVALUE, timeUnit = asn1_NOVALUE, moneyUnit = asn1_NOVALUE, totalOctetsUnit = asn1_NOVALUE, uplinkOctetsUnit = asn1_NOVALUE, downlinkOctetsUnit = asn1_NOVALUE, serviceSpecificUnit = asn1_NOVALUE}). % with extension mark

-record('TreeDefinedField',{
parameterID, parameterValue}).

-record('Time',{
sec, tz}).

-record('SubDedicatedAccount',{
dedicatedAccountID, dedicatedAccountValueBefore = asn1_NOVALUE, dedicatedAccountValueAfter = asn1_NOVALUE, dedicatedAccountChange = asn1_NOVALUE, accountExpiryDateAfter = asn1_NOVALUE, accountStartDateAfter = asn1_NOVALUE, dedicatedAccountUnitsBefore = asn1_NOVALUE, dedicatedAccountUnitsAfter = asn1_NOVALUE, dedicatedAccountUnitsChange = asn1_NOVALUE}). % with extension mark

-record('ServiceUnits',{
timeUnit = asn1_NOVALUE, moneyUnit = asn1_NOVALUE, totalOctetsUnit = asn1_NOVALUE, uplinkOctetsUnit = asn1_NOVALUE, downlinkOctetsUnit = asn1_NOVALUE, serviceSpecificUnit = asn1_NOVALUE}). % with extension mark

-record('SelectionTreeParameter',{
selectionTreeID, selectionTreeVersion, selectionTreeType}). % with extension mark

-record('RatedUnitsValues',{
ratedTimeUnits = asn1_NOVALUE, ratedTotalOctetsUnits = asn1_NOVALUE, ratedUplinkOctetsUnits = asn1_NOVALUE, ratedDownlinkOctetsUnits = asn1_NOVALUE, ratedServiceSpecificUnits = asn1_NOVALUE}). % with extension mark

-record('RatedUnits',{
debitUnits = asn1_NOVALUE, creditUnits = asn1_NOVALUE, freeUnits = asn1_NOVALUE}). % with extension mark

-record('MonetaryUnitsCreditControlDataTypes',{
amount, decimals, currency}).

-record('LifeCycleInformation',{
supervisionExpDateBefore = asn1_NOVALUE, supervisionExpDateAfter = asn1_NOVALUE, creditClearancePeriodBefore = asn1_NOVALUE, creditClearancePeriodAfter = asn1_NOVALUE, servFeeExpDateBefore = asn1_NOVALUE, servFeeExpDateAfter = asn1_NOVALUE, serviceRemovalPeriodBefore = asn1_NOVALUE, serviceRemovalPeriodAfter = asn1_NOVALUE, accountFlagsBefore = asn1_NOVALUE, accountFlagsAfter = asn1_NOVALUE}). % with extension mark

-record('IndividualPriceFactorHistoryCreditControlDataTypes',{
individualPriceFactor, units}). % with extension mark

-record('DedicatedAccount',{
dedicatedAccountID, dedicatedAccountValueBefore = asn1_NOVALUE, dedicatedAccountValueAfter = asn1_NOVALUE, dedicatedAccountChange = asn1_NOVALUE, dedicatedAccountCampaignID = asn1_NOVALUE, accountExpiryDateBefore = asn1_NOVALUE, accountExpiryDateAfter = asn1_NOVALUE, accountStartDateBefore = asn1_NOVALUE, accountStartDateAfter = asn1_NOVALUE, realMoney = asn1_NOVALUE, offerID = asn1_NOVALUE, dedicatedAccountUnitsBefore = asn1_NOVALUE, dedicatedAccountUnitsAfter = asn1_NOVALUE, dedicatedAccountUnitsChange = asn1_NOVALUE, accountUnitType = asn1_NOVALUE, subDedicatedAccounts = asn1_NOVALUE}). % with extension mark

-record('ContextParameter',{
parameterID, parameterValue}).

-record('CommunityInformation',{
selectedCommunityID = asn1_NOVALUE, servedCommunityIDs = asn1_NOVALUE, nonServedCommunityIDs = asn1_NOVALUE, nonServedCommunityIDNA = asn1_NOVALUE, nonServedCommunityNo = asn1_NOVALUE}). % with extension mark

-record('CommunityIDs',{
communityID1 = asn1_NOVALUE, communityID2 = asn1_NOVALUE, communityID3 = asn1_NOVALUE}). % with extension mark

-record('CCAccountData',{
servedAccount, serviceClassID, accountGroupID, accountValueBefore = asn1_NOVALUE, accountValueAfter = asn1_NOVALUE, communityInformation = asn1_NOVALUE, accumulators = asn1_NOVALUE, dedicatedAccounts = asn1_NOVALUE, familyAndFriendsID = asn1_NOVALUE, familyAndFriendsNo = asn1_NOVALUE, serviceOfferings, accumulatedCost = asn1_NOVALUE, accountValueUsed = asn1_NOVALUE, accountValueDeducted, aggregatedValueBefore = asn1_NOVALUE, aggregatedValueAfter = asn1_NOVALUE, accumulatedUnits = asn1_NOVALUE, accountUnitsUsed = asn1_NOVALUE, accountUnitsDeducted = asn1_NOVALUE}). % with extension mark

-record('BonusAdjustment',{
accountValueBefore = asn1_NOVALUE, accountValueAfter = asn1_NOVALUE, bonusAmount = asn1_NOVALUE, accumulators = asn1_NOVALUE, dedicatedAccounts = asn1_NOVALUE, lifeCycleInformation = asn1_NOVALUE, aggregatedValueBefore = asn1_NOVALUE, aggregatedValueAfter = asn1_NOVALUE}). % with extension mark

-record('Accumulator',{
accumulatorID, accumulatorBefore = asn1_NOVALUE, accumulatorChange, accumulatorAfter, accumulatorBeforeSession = asn1_NOVALUE}). % with extension mark

-record('CreditControlRecord',{
serviceIdentifier, usedServiceUnits = asn1_NOVALUE, eventTime, triggerTime, serviceScenario, serviceExtension = asn1_NOVALUE, roamingPosition = asn1_NOVALUE, tariffInfo = asn1_NOVALUE, cCAccountData, chargingContextSpecific = asn1_NOVALUE, treeDefinedFields = asn1_NOVALUE, bonusAdjustment = asn1_NOVALUE, serviceSetupResult = asn1_NOVALUE, terminationCause = asn1_NOVALUE, ratedUnits = asn1_NOVALUE, individualPriceFactorHistory = asn1_NOVALUE}). % with extension mark

-record('UsedServiceUnitCDRCCN',{
tariffChangeUsage = asn1_NOVALUE, timeUnit = asn1_NOVALUE, moneyUnit = asn1_NOVALUE, totalOctetsUnit = asn1_NOVALUE, uplinkOctetsUnit = asn1_NOVALUE, downlinkOctetsUnit = asn1_NOVALUE, serviceSpecificUnit = asn1_NOVALUE}). % with extension mark

-record('Units',{
duration = asn1_NOVALUE, numberOfEvents = asn1_NOVALUE}). % with extension mark

-record('SubscriptionID',{
subscriptionIDType, subscriptionIDValue}).

-record('StartOfUsageInfo',{
serviceClass, startOfUsage}).

-record('ServiceClassInfo',{
serviceClass, volumeULAccumulated, volumeDLAccumulated}).

-record('ServiceClassExtendedInfo',{
serviceClass, timeAccumulated}). % with extension mark

-record('RecoveryServiceClassInfo',{
serviceClass, deltaTime = asn1_NOVALUE, deltaVolumeUL = asn1_NOVALUE, deltaVolumeDL = asn1_NOVALUE}). % with extension mark

-record('RecoveryRecord',{
ccnTimeStamp, accumulatorModificationDate, recoveryState, globalDeltaVolumeUL = asn1_NOVALUE, globalDeltaVolumeDL = asn1_NOVALUE, serviceClassDeltaValueList = asn1_NOVALUE}). % with extension mark

-record('RatedDurations',{
debitDuration = asn1_NOVALUE, creditDuration = asn1_NOVALUE, freeDuration = asn1_NOVALUE}). % with extension mark

-record('OriginInfo',{
originRealm = asn1_NOVALUE, originHost = asn1_NOVALUE}). % with extension mark

-record('MonetaryUnitsCDRCCN',{
amount, decimals, currency}).

-record('IndividualPriceFactorHistoryCDRCCN',{
individualPriceFactor1 = asn1_NOVALUE, individualPriceFactor2 = asn1_NOVALUE, individualPriceFactor1Units = asn1_NOVALUE}). % with extension mark

-record('DedicatedAccountInfo',{
identity = asn1_NOVALUE, valueBefore = asn1_NOVALUE, valueAfter = asn1_NOVALUE, campaignIdentifier = asn1_NOVALUE, accumulatedDuration = asn1_NOVALUE}). % with extension mark

-record('DccCorrelationID',{
acctMultiSessionID = asn1_NOVALUE, ccCorrelationId = asn1_NOVALUE, sessionId = asn1_NOVALUE, ccRequestNumber = asn1_NOVALUE}). % with extension mark

-record('CommunityDataInfo',{
selectedCommunityIndicator = asn1_NOVALUE, communityIDCharged = asn1_NOVALUE, communityIDNonCharged = asn1_NOVALUE, communityDataNonChargedNotAvailable = asn1_NOVALUE}). % with extension mark

-record('CategorizationInformation',{
categoryType1 = asn1_NOVALUE, categoryType2 = asn1_NOVALUE, categoryType3 = asn1_NOVALUE, categoryType4 = asn1_NOVALUE}). % with extension mark

-record('AuthorizedQoS',{
triggerTime, qoSClassIdentifier = asn1_NOVALUE, maxRequestedBandwidthUL = asn1_NOVALUE, maxRequestedBandwidthDL = asn1_NOVALUE, priorityLevel = asn1_NOVALUE, preEmptionCapability = asn1_NOVALUE, preEmptionVulnerability = asn1_NOVALUE}). % with extension mark

-record('AccumulatorValueInfo',{
accumulatorID = asn1_NOVALUE, accumulatorValue = asn1_NOVALUE, accumulatorDeltaValue = asn1_NOVALUE}). % with extension mark

-record('OnlineCreditControlRecord',{
resultCode, resultCodeExtension = asn1_NOVALUE, triggerTime, nodeName, serviceContextID, chargingContextID, serviceSessionID, recordIdentificationNumber, partialSequenceNumber = asn1_NOVALUE, lastPartialOutput = asn1_NOVALUE, servedSubscriptionID = asn1_NOVALUE, correlationID = asn1_NOVALUE, servingElement = asn1_NOVALUE, creditControlRecords = asn1_NOVALUE, usedUnchargedServiceUnits = asn1_NOVALUE, chargedDuration = asn1_NOVALUE, usedStartPulses = asn1_NOVALUE, chargingSuppressionAtForwarding = asn1_NOVALUE, authorizedQoS = asn1_NOVALUE}). % with extension mark

-record('RTCCreditControlRecord',{
cdrReason, nodeID, recordSequenceNumber, lastPartialOutput, trafficCase = asn1_NOVALUE, teleServiceCode = asn1_NOVALUE, subscriberID = asn1_NOVALUE, callingPartyNumber = asn1_NOVALUE, calledPartyNumber = asn1_NOVALUE, triggerTime = asn1_NOVALUE, chargedDuration = asn1_NOVALUE, servedIMSI = asn1_NOVALUE, numberOfEvents = asn1_NOVALUE, finalCharge = asn1_NOVALUE, accountValueBefore = asn1_NOVALUE, accountValueAfter = asn1_NOVALUE, accountingCorrelationID, numberOfSDPInterrogations, serviceClass = asn1_NOVALUE, accountNumber = asn1_NOVALUE, localSequenceNumber, familyAndFriendsIndicator = asn1_NOVALUE, currencyType = asn1_NOVALUE, accumulatorValueInfo = asn1_NOVALUE, dedicatedAccountInfo = asn1_NOVALUE, redirectingPartyNumber = asn1_NOVALUE, originatingLocationInfo = asn1_NOVALUE, terminatingLocationInfo = asn1_NOVALUE, networkID = asn1_NOVALUE, subscriptionType = asn1_NOVALUE, calledPartyNumber2 = asn1_NOVALUE, calledPartyNumber3 = asn1_NOVALUE, accountGroupID = asn1_NOVALUE, serviceOfferings = asn1_NOVALUE, communityDataInfo = asn1_NOVALUE, serviceCenter = asn1_NOVALUE, startOfCharging = asn1_NOVALUE, callSetUpResultCode = asn1_NOVALUE, usedUnchargedDuration = asn1_NOVALUE, usedUnchargedEvent = asn1_NOVALUE, categorizationInformation = asn1_NOVALUE, ratedDurations = asn1_NOVALUE, individualPriceFactorHistory = asn1_NOVALUE}). % with extension mark

-record('FBCRatingRecord',{
serviceClassInfo, ggsnAddressUsed, chargingID, timeStamp, volumeULAccumulatedTotal, volumeDLAccumulatedTotal, subscriberGroup, nodeID, localSequenceNumber, servedIMSI = asn1_NOVALUE, servedMSISDN = asn1_NOVALUE, userName = asn1_NOVALUE, recoveryData = asn1_NOVALUE, serviceClassExtendedInfo = asn1_NOVALUE, ratingRequested = asn1_NOVALUE, ratingSuccessful = asn1_NOVALUE, startOfUsageInfo = asn1_NOVALUE}). % with extension mark

-record('DiameterCreditControlRecord',{
cdrReason, nodeID, recordSequenceNumber, lastPartialOutput, trafficCase = asn1_NOVALUE, teleServiceCode = asn1_NOVALUE, subscriberID = asn1_NOVALUE, callingPartyNumber = asn1_NOVALUE, calledPartyNumber = asn1_NOVALUE, triggerTime = asn1_NOVALUE, chargedDuration = asn1_NOVALUE, dataVolume = asn1_NOVALUE, numberOfEvents = asn1_NOVALUE, finalCharge = asn1_NOVALUE, accountValueBefore = asn1_NOVALUE, accountValueAfter = asn1_NOVALUE, sessionID, userName = asn1_NOVALUE, numberOfSDPInterrogations, originRealm = asn1_NOVALUE, originHost = asn1_NOVALUE, serviceClass = asn1_NOVALUE, accountNumber = asn1_NOVALUE, localSequenceNumber, familyAndFriendsIndicator = asn1_NOVALUE, currencyType = asn1_NOVALUE, accumulatorValueInfo = asn1_NOVALUE, dedicatedAccountInfo = asn1_NOVALUE, serviceProviderID = asn1_NOVALUE, extInt1 = asn1_NOVALUE, extInt2 = asn1_NOVALUE, extInt3 = asn1_NOVALUE, extInt4 = asn1_NOVALUE, extText = asn1_NOVALUE, gprsQoS = asn1_NOVALUE, redirectingPartyNumber = asn1_NOVALUE, originatingLocationInfo = asn1_NOVALUE, terminatingLocationInfo = asn1_NOVALUE, networkID = asn1_NOVALUE, subscriptionType = asn1_NOVALUE, smsDeliveryStatus = asn1_NOVALUE, calledPartyNumber2 = asn1_NOVALUE, calledPartyNumber3 = asn1_NOVALUE, radiusSessionID = asn1_NOVALUE, multiSessionID = asn1_NOVALUE, originalSubscriptionIDData = asn1_NOVALUE, originalSubscriptionIDType = asn1_NOVALUE, accountingCorrelationID = asn1_NOVALUE, abnormalTerminationReason = asn1_NOVALUE, accountGroupID = asn1_NOVALUE, serviceOfferings = asn1_NOVALUE, communityDataInfo = asn1_NOVALUE, usedAmountLastInterval = asn1_NOVALUE, deductedAmountLastInterval = asn1_NOVALUE, categorizationInformation = asn1_NOVALUE, ratedDurations = asn1_NOVALUE}). % with extension mark

-record('SCFSMSMORecord',{
servedIMSI, servedMSISDN, serviceCenter, nodeID, localSequenceNumber, trafficCase = asn1_NOVALUE, serviceClass = asn1_NOVALUE, accountValueBefore = asn1_NOVALUE, accountValueAfter = asn1_NOVALUE, finalCharge = asn1_NOVALUE, cdrReason, teleServiceCode = asn1_NOVALUE, startOfChargingOfEvent = asn1_NOVALUE, familyAndFriendsIndicator = asn1_NOVALUE, numberOfSDPInterrogations, currencyType = asn1_NOVALUE, originatingLocationInfo = asn1_NOVALUE, accountNumber = asn1_NOVALUE, destinationNumber, accumulatorValueInfo = asn1_NOVALUE, dedicatedAccountInfo = asn1_NOVALUE, eventTimeStamp, networkID = asn1_NOVALUE, smsReferenceNumber = asn1_NOVALUE, mscAddress = asn1_NOVALUE, 'sgsn-Number' = asn1_NOVALUE, accountGroupID = asn1_NOVALUE, serviceOfferings = asn1_NOVALUE, communityDataInfo = asn1_NOVALUE, calledPartyNumber = asn1_NOVALUE, cellID = asn1_NOVALUE, locationAreaID = asn1_NOVALUE, categorizationInformation = asn1_NOVALUE, ratedDurations = asn1_NOVALUE, individualPriceFactorHistory = asn1_NOVALUE}). % with extension mark

-record('SCFPDPRecord',{
chargingID, ggsnAddressUsed, accessPointName = asn1_NOVALUE, recordSequenceNumber, nodeID, localSequenceNumber, lastPartialOutput, trafficCase = asn1_NOVALUE, subscriberNumber = asn1_NOVALUE, serviceClass = asn1_NOVALUE, accountValueBefore = asn1_NOVALUE, accountValueAfter = asn1_NOVALUE, finalCharge = asn1_NOVALUE, chargedDuration = asn1_NOVALUE, cdrReason, teleServiceCode = asn1_NOVALUE, startOfChargingOfContext = asn1_NOVALUE, familyAndFriendsIndicator = asn1_NOVALUE, numberOfSDPInterrogations, dataVolume = asn1_NOVALUE, currencyType = asn1_NOVALUE, callingPartyNumber = asn1_NOVALUE, originatingLocationInfo = asn1_NOVALUE, accountNumber = asn1_NOVALUE, terminatingLocationInfo = asn1_NOVALUE, calledPartyNumber = asn1_NOVALUE, accumulatorValueInfo = asn1_NOVALUE, dedicatedAccountInfo = asn1_NOVALUE, accountGroupID = asn1_NOVALUE, serviceOfferings = asn1_NOVALUE, communityDataInfo = asn1_NOVALUE, triggerTime = asn1_NOVALUE, cellID = asn1_NOVALUE, locationAreaID = asn1_NOVALUE, categorizationInformation = asn1_NOVALUE, ratedDurations = asn1_NOVALUE, servedIMSI = asn1_NOVALUE}). % with extension mark

