%% Generated by the Erlang ASN.1 BER-compiler version:1.7
%% Purpose: encoder and decoder to the types in mod SDPOUTPUTCDR

-module('SDPOUTPUTCDR').
-include("SDPOUTPUTCDR.hrl").
-define('RT_BER',asn1rt_ber_bin).
-asn1_info([{vsn,'1.7'},
            {module,'SDPOUTPUTCDR'},
            {options,[ber,undec_rest,{i,[46]},{i,[47,104,111,109,101,47,108,111,98,111,47,83,111,117,114,99,101,47,97,115,110,46,49,47,101,97,115,110,47,97,115,110]}]}]).

-export([encoding_rule/0]).
-export([
'enc_SDPCallDataRecord'/2,
'enc_CDRProcessed'/2,
'enc_AccountAdjustment'/2,
'enc_NegativeBalance'/2,
'enc_BonusAdjustment'/2,
'enc_ServiceFeeDeduction'/2,
'enc_LifeCycleChange'/2,
'enc_NegativeBalanceBarred'/2,
'enc_ValueVoucherExpiry'/2,
'enc_PeriodicAdjustment'/2,
'enc_PeriodicReset'/2,
'enc_TemporaryBlock'/2,
'enc_AccountFlags'/2,
'enc_AccountGroupID'/2,
'enc_AccountHomeRegion'/2,
'enc_AccountUnitType'/2,
'enc_AccumulatorID'/2,
'enc_AccumulatorValue'/2,
'enc_AdjustmentAction'/2,
'enc_AdjustmentAccumulator'/2,
'enc_AdjustmentDedicatedAccount'/2,
'enc_AdjustmentFaF'/2,
'enc_AdjustmentOffer'/2,
'enc_AdjustmentRecordType'/2,
'enc_AdjustmentSubDedicatedAccount'/2,
'enc_AggregatedBalanceDedicatedAccount'/2,
'enc_AggregatedBalanceSubDedicatedAccount'/2,
'enc_BonusAccumulator'/2,
'enc_BonusDedicatedAccount'/2,
'enc_CampaignIdentifier'/2,
'enc_CategoryValue'/2,
'enc_CategorizationInformation'/2,
'enc_CDRProcAccumulator'/2,
'enc_CDRProcDedicatedAccount'/2,
'enc_ChargingSuccessCode'/2,
'enc_ClearedAccumulator'/2,
'enc_ClearedDedicatedAccount'/2,
'enc_ClearedSubDedicatedAccount'/2,
'enc_CommunityID'/2,
'enc_CounterDelta'/2,
'enc_CounterValue'/2,
'enc_CurrencyType'/2,
'enc_Date'/2,
'enc_DedicatedAccountID'/2,
'enc_DisconnectionCode'/2,
'enc_Duration'/2,
'enc_FamilyAndFriendsAction'/2,
'enc_FamilyAndFriendsIndicator'/2,
'enc_IDString'/2,
'enc_IndividualPriceFactorHistory'/2,
'enc_Integer32'/2,
'enc_Integer64'/2,
'enc_Language'/2,
'enc_LifeCycleInformation'/2,
'enc_MonetaryUnits'/2,
'enc_MoneyAmount'/2,
'enc_NodeID'/2,
'enc_NodeType'/2,
'enc_NumberString'/2,
'enc_OfferID'/2,
'enc_Owner'/2,
'enc_Percent'/2,
'enc_Period'/2,
'enc_PeriodicResetID'/2,
'enc_PeriodType'/2,
'enc_PreActReasonCode'/2,
'enc_PromotionPlan'/2,
'enc_RatedDurations'/2,
'enc_Reason'/2,
'enc_RecordSequenceNumberString'/2,
'enc_RecordType'/2,
'enc_RelatedNumberString'/2,
'enc_RemovedFaF'/2,
'enc_RemovedOffer'/2,
'enc_ReplenishmentID'/2,
'enc_SelectedCommunityIndicator'/2,
'enc_ServFeeDeductSuccessCode'/2,
'enc_ServiceClass'/2,
'enc_ServiceFeeType'/2,
'enc_ServiceOfferings'/2,
'enc_ServiceUnits'/2,
'enc_SubscriberNumberString'/2,
'enc_TimeStamp'/2,
'enc_TransactionCode'/2,
'enc_TransactionID'/2,
'enc_TransactionType'/2,
'enc_Unsigned32'/2,
'enc_Unsigned64'/2
]).

-export([
'dec_SDPCallDataRecord'/2,
'dec_CDRProcessed'/2,
'dec_AccountAdjustment'/2,
'dec_NegativeBalance'/2,
'dec_BonusAdjustment'/2,
'dec_ServiceFeeDeduction'/2,
'dec_LifeCycleChange'/2,
'dec_NegativeBalanceBarred'/2,
'dec_ValueVoucherExpiry'/2,
'dec_PeriodicAdjustment'/2,
'dec_PeriodicReset'/2,
'dec_TemporaryBlock'/2,
'dec_AccountFlags'/2,
'dec_AccountGroupID'/2,
'dec_AccountHomeRegion'/2,
'dec_AccountUnitType'/2,
'dec_AccumulatorID'/2,
'dec_AccumulatorValue'/2,
'dec_AdjustmentAction'/2,
'dec_AdjustmentAccumulator'/2,
'dec_AdjustmentDedicatedAccount'/2,
'dec_AdjustmentFaF'/2,
'dec_AdjustmentOffer'/2,
'dec_AdjustmentRecordType'/2,
'dec_AdjustmentSubDedicatedAccount'/2,
'dec_AggregatedBalanceDedicatedAccount'/2,
'dec_AggregatedBalanceSubDedicatedAccount'/2,
'dec_BonusAccumulator'/2,
'dec_BonusDedicatedAccount'/2,
'dec_CampaignIdentifier'/2,
'dec_CategoryValue'/2,
'dec_CategorizationInformation'/2,
'dec_CDRProcAccumulator'/2,
'dec_CDRProcDedicatedAccount'/2,
'dec_ChargingSuccessCode'/2,
'dec_ClearedAccumulator'/2,
'dec_ClearedDedicatedAccount'/2,
'dec_ClearedSubDedicatedAccount'/2,
'dec_CommunityID'/2,
'dec_CounterDelta'/2,
'dec_CounterValue'/2,
'dec_CurrencyType'/2,
'dec_Date'/2,
'dec_DedicatedAccountID'/2,
'dec_DisconnectionCode'/2,
'dec_Duration'/2,
'dec_FamilyAndFriendsAction'/2,
'dec_FamilyAndFriendsIndicator'/2,
'dec_IDString'/2,
'dec_IndividualPriceFactorHistory'/2,
'dec_Integer32'/2,
'dec_Integer64'/2,
'dec_Language'/2,
'dec_LifeCycleInformation'/2,
'dec_MonetaryUnits'/2,
'dec_MoneyAmount'/2,
'dec_NodeID'/2,
'dec_NodeType'/2,
'dec_NumberString'/2,
'dec_OfferID'/2,
'dec_Owner'/2,
'dec_Percent'/2,
'dec_Period'/2,
'dec_PeriodicResetID'/2,
'dec_PeriodType'/2,
'dec_PreActReasonCode'/2,
'dec_PromotionPlan'/2,
'dec_RatedDurations'/2,
'dec_Reason'/2,
'dec_RecordSequenceNumberString'/2,
'dec_RecordType'/2,
'dec_RelatedNumberString'/2,
'dec_RemovedFaF'/2,
'dec_RemovedOffer'/2,
'dec_ReplenishmentID'/2,
'dec_SelectedCommunityIndicator'/2,
'dec_ServFeeDeductSuccessCode'/2,
'dec_ServiceClass'/2,
'dec_ServiceFeeType'/2,
'dec_ServiceOfferings'/2,
'dec_ServiceUnits'/2,
'dec_SubscriberNumberString'/2,
'dec_TimeStamp'/2,
'dec_TransactionCode'/2,
'dec_TransactionID'/2,
'dec_TransactionType'/2,
'dec_Unsigned32'/2,
'dec_Unsigned64'/2
]).

-export([
'dec_SDPCallDataRecord'/3,
'dec_CDRProcessed'/3,
'dec_AccountAdjustment'/3,
'dec_NegativeBalance'/3,
'dec_BonusAdjustment'/3,
'dec_ServiceFeeDeduction'/3,
'dec_LifeCycleChange'/3,
'dec_NegativeBalanceBarred'/3,
'dec_ValueVoucherExpiry'/3,
'dec_PeriodicAdjustment'/3,
'dec_PeriodicReset'/3,
'dec_TemporaryBlock'/3,
'dec_AccountFlags'/3,
'dec_AccountGroupID'/3,
'dec_AccountHomeRegion'/3,
'dec_AccountUnitType'/3,
'dec_AccumulatorID'/3,
'dec_AccumulatorValue'/3,
'dec_AdjustmentAction'/3,
'dec_AdjustmentAccumulator'/3,
'dec_AdjustmentDedicatedAccount'/3,
'dec_AdjustmentFaF'/3,
'dec_AdjustmentOffer'/3,
'dec_AdjustmentRecordType'/3,
'dec_AdjustmentSubDedicatedAccount'/3,
'dec_AggregatedBalanceDedicatedAccount'/3,
'dec_AggregatedBalanceSubDedicatedAccount'/3,
'dec_BonusAccumulator'/3,
'dec_BonusDedicatedAccount'/3,
'dec_CampaignIdentifier'/3,
'dec_CategoryValue'/3,
'dec_CategorizationInformation'/3,
'dec_CDRProcAccumulator'/3,
'dec_CDRProcDedicatedAccount'/3,
'dec_ChargingSuccessCode'/3,
'dec_ClearedAccumulator'/3,
'dec_ClearedDedicatedAccount'/3,
'dec_ClearedSubDedicatedAccount'/3,
'dec_CommunityID'/3,
'dec_CounterDelta'/3,
'dec_CounterValue'/3,
'dec_CurrencyType'/3,
'dec_Date'/3,
'dec_DedicatedAccountID'/3,
'dec_DisconnectionCode'/3,
'dec_Duration'/3,
'dec_FamilyAndFriendsAction'/3,
'dec_FamilyAndFriendsIndicator'/3,
'dec_IDString'/3,
'dec_IndividualPriceFactorHistory'/3,
'dec_Integer32'/3,
'dec_Integer64'/3,
'dec_Language'/3,
'dec_LifeCycleInformation'/3,
'dec_MonetaryUnits'/3,
'dec_MoneyAmount'/3,
'dec_NodeID'/3,
'dec_NodeType'/3,
'dec_NumberString'/3,
'dec_OfferID'/3,
'dec_Owner'/3,
'dec_Percent'/3,
'dec_Period'/3,
'dec_PeriodicResetID'/3,
'dec_PeriodType'/3,
'dec_PreActReasonCode'/3,
'dec_PromotionPlan'/3,
'dec_RatedDurations'/3,
'dec_Reason'/3,
'dec_RecordSequenceNumberString'/3,
'dec_RecordType'/3,
'dec_RelatedNumberString'/3,
'dec_RemovedFaF'/3,
'dec_RemovedOffer'/3,
'dec_ReplenishmentID'/3,
'dec_SelectedCommunityIndicator'/3,
'dec_ServFeeDeductSuccessCode'/3,
'dec_ServiceClass'/3,
'dec_ServiceFeeType'/3,
'dec_ServiceOfferings'/3,
'dec_ServiceUnits'/3,
'dec_SubscriberNumberString'/3,
'dec_TimeStamp'/3,
'dec_TransactionCode'/3,
'dec_TransactionID'/3,
'dec_TransactionType'/3,
'dec_Unsigned32'/3,
'dec_Unsigned64'/3
]).

-export([info/0]).


-export([encode/2,decode/2,encode_disp/2,decode_disp/2]).

encoding_rule() ->
   ber.

encode(Type,Data) ->
case catch encode_disp(Type,Data) of
  {'EXIT',{error,Reason}} ->
    {error,Reason};
  {'EXIT',Reason} ->
    {error,{asn1,Reason}};
  {Bytes,_Len} ->
    {ok,wrap_encode(Bytes)};
  Bytes ->
    {ok,wrap_encode(Bytes)}
end.

decode(Type,Data) ->
case catch decode_disp(Type,wrap_decode(Data)) of
  {'EXIT',{error,Reason}} ->
    {error,Reason};
  {'EXIT',Reason} ->
    {error,{asn1,Reason}};
  {X,Rest} ->
    {ok,X,Rest};
  {X,Rest,_Len} ->
    {ok,X,Rest}
end.

encode_disp('SDPCallDataRecord',Data) -> 'enc_SDPCallDataRecord'(Data,[]);
encode_disp('CDRProcessed',Data) -> 'enc_CDRProcessed'(Data,[]);
encode_disp('AccountAdjustment',Data) -> 'enc_AccountAdjustment'(Data,[]);
encode_disp('NegativeBalance',Data) -> 'enc_NegativeBalance'(Data,[]);
encode_disp('BonusAdjustment',Data) -> 'enc_BonusAdjustment'(Data,[]);
encode_disp('ServiceFeeDeduction',Data) -> 'enc_ServiceFeeDeduction'(Data,[]);
encode_disp('LifeCycleChange',Data) -> 'enc_LifeCycleChange'(Data,[]);
encode_disp('NegativeBalanceBarred',Data) -> 'enc_NegativeBalanceBarred'(Data,[]);
encode_disp('ValueVoucherExpiry',Data) -> 'enc_ValueVoucherExpiry'(Data,[]);
encode_disp('PeriodicAdjustment',Data) -> 'enc_PeriodicAdjustment'(Data,[]);
encode_disp('PeriodicReset',Data) -> 'enc_PeriodicReset'(Data,[]);
encode_disp('TemporaryBlock',Data) -> 'enc_TemporaryBlock'(Data,[]);
encode_disp('AccountFlags',Data) -> 'enc_AccountFlags'(Data,[]);
encode_disp('AccountGroupID',Data) -> 'enc_AccountGroupID'(Data,[]);
encode_disp('AccountHomeRegion',Data) -> 'enc_AccountHomeRegion'(Data,[]);
encode_disp('AccountUnitType',Data) -> 'enc_AccountUnitType'(Data,[]);
encode_disp('AccumulatorID',Data) -> 'enc_AccumulatorID'(Data,[]);
encode_disp('AccumulatorValue',Data) -> 'enc_AccumulatorValue'(Data,[]);
encode_disp('AdjustmentAction',Data) -> 'enc_AdjustmentAction'(Data,[]);
encode_disp('AdjustmentAccumulator',Data) -> 'enc_AdjustmentAccumulator'(Data,[]);
encode_disp('AdjustmentDedicatedAccount',Data) -> 'enc_AdjustmentDedicatedAccount'(Data,[]);
encode_disp('AdjustmentFaF',Data) -> 'enc_AdjustmentFaF'(Data,[]);
encode_disp('AdjustmentOffer',Data) -> 'enc_AdjustmentOffer'(Data,[]);
encode_disp('AdjustmentRecordType',Data) -> 'enc_AdjustmentRecordType'(Data,[]);
encode_disp('AdjustmentSubDedicatedAccount',Data) -> 'enc_AdjustmentSubDedicatedAccount'(Data,[]);
encode_disp('AggregatedBalanceDedicatedAccount',Data) -> 'enc_AggregatedBalanceDedicatedAccount'(Data,[]);
encode_disp('AggregatedBalanceSubDedicatedAccount',Data) -> 'enc_AggregatedBalanceSubDedicatedAccount'(Data,[]);
encode_disp('BonusAccumulator',Data) -> 'enc_BonusAccumulator'(Data,[]);
encode_disp('BonusDedicatedAccount',Data) -> 'enc_BonusDedicatedAccount'(Data,[]);
encode_disp('CampaignIdentifier',Data) -> 'enc_CampaignIdentifier'(Data,[]);
encode_disp('CategoryValue',Data) -> 'enc_CategoryValue'(Data,[]);
encode_disp('CategorizationInformation',Data) -> 'enc_CategorizationInformation'(Data,[]);
encode_disp('CDRProcAccumulator',Data) -> 'enc_CDRProcAccumulator'(Data,[]);
encode_disp('CDRProcDedicatedAccount',Data) -> 'enc_CDRProcDedicatedAccount'(Data,[]);
encode_disp('ChargingSuccessCode',Data) -> 'enc_ChargingSuccessCode'(Data,[]);
encode_disp('ClearedAccumulator',Data) -> 'enc_ClearedAccumulator'(Data,[]);
encode_disp('ClearedDedicatedAccount',Data) -> 'enc_ClearedDedicatedAccount'(Data,[]);
encode_disp('ClearedSubDedicatedAccount',Data) -> 'enc_ClearedSubDedicatedAccount'(Data,[]);
encode_disp('CommunityID',Data) -> 'enc_CommunityID'(Data,[]);
encode_disp('CounterDelta',Data) -> 'enc_CounterDelta'(Data,[]);
encode_disp('CounterValue',Data) -> 'enc_CounterValue'(Data,[]);
encode_disp('CurrencyType',Data) -> 'enc_CurrencyType'(Data,[]);
encode_disp('Date',Data) -> 'enc_Date'(Data,[]);
encode_disp('DedicatedAccountID',Data) -> 'enc_DedicatedAccountID'(Data,[]);
encode_disp('DisconnectionCode',Data) -> 'enc_DisconnectionCode'(Data,[]);
encode_disp('Duration',Data) -> 'enc_Duration'(Data,[]);
encode_disp('FamilyAndFriendsAction',Data) -> 'enc_FamilyAndFriendsAction'(Data,[]);
encode_disp('FamilyAndFriendsIndicator',Data) -> 'enc_FamilyAndFriendsIndicator'(Data,[]);
encode_disp('IDString',Data) -> 'enc_IDString'(Data,[]);
encode_disp('IndividualPriceFactorHistory',Data) -> 'enc_IndividualPriceFactorHistory'(Data,[]);
encode_disp('Integer32',Data) -> 'enc_Integer32'(Data,[]);
encode_disp('Integer64',Data) -> 'enc_Integer64'(Data,[]);
encode_disp('Language',Data) -> 'enc_Language'(Data,[]);
encode_disp('LifeCycleInformation',Data) -> 'enc_LifeCycleInformation'(Data,[]);
encode_disp('MonetaryUnits',Data) -> 'enc_MonetaryUnits'(Data,[]);
encode_disp('MoneyAmount',Data) -> 'enc_MoneyAmount'(Data,[]);
encode_disp('NodeID',Data) -> 'enc_NodeID'(Data,[]);
encode_disp('NodeType',Data) -> 'enc_NodeType'(Data,[]);
encode_disp('NumberString',Data) -> 'enc_NumberString'(Data,[]);
encode_disp('OfferID',Data) -> 'enc_OfferID'(Data,[]);
encode_disp('Owner',Data) -> 'enc_Owner'(Data,[]);
encode_disp('Percent',Data) -> 'enc_Percent'(Data,[]);
encode_disp('Period',Data) -> 'enc_Period'(Data,[]);
encode_disp('PeriodicResetID',Data) -> 'enc_PeriodicResetID'(Data,[]);
encode_disp('PeriodType',Data) -> 'enc_PeriodType'(Data,[]);
encode_disp('PreActReasonCode',Data) -> 'enc_PreActReasonCode'(Data,[]);
encode_disp('PromotionPlan',Data) -> 'enc_PromotionPlan'(Data,[]);
encode_disp('RatedDurations',Data) -> 'enc_RatedDurations'(Data,[]);
encode_disp('Reason',Data) -> 'enc_Reason'(Data,[]);
encode_disp('RecordSequenceNumberString',Data) -> 'enc_RecordSequenceNumberString'(Data,[]);
encode_disp('RecordType',Data) -> 'enc_RecordType'(Data,[]);
encode_disp('RelatedNumberString',Data) -> 'enc_RelatedNumberString'(Data,[]);
encode_disp('RemovedFaF',Data) -> 'enc_RemovedFaF'(Data,[]);
encode_disp('RemovedOffer',Data) -> 'enc_RemovedOffer'(Data,[]);
encode_disp('ReplenishmentID',Data) -> 'enc_ReplenishmentID'(Data,[]);
encode_disp('SelectedCommunityIndicator',Data) -> 'enc_SelectedCommunityIndicator'(Data,[]);
encode_disp('ServFeeDeductSuccessCode',Data) -> 'enc_ServFeeDeductSuccessCode'(Data,[]);
encode_disp('ServiceClass',Data) -> 'enc_ServiceClass'(Data,[]);
encode_disp('ServiceFeeType',Data) -> 'enc_ServiceFeeType'(Data,[]);
encode_disp('ServiceOfferings',Data) -> 'enc_ServiceOfferings'(Data,[]);
encode_disp('ServiceUnits',Data) -> 'enc_ServiceUnits'(Data,[]);
encode_disp('SubscriberNumberString',Data) -> 'enc_SubscriberNumberString'(Data,[]);
encode_disp('TimeStamp',Data) -> 'enc_TimeStamp'(Data,[]);
encode_disp('TransactionCode',Data) -> 'enc_TransactionCode'(Data,[]);
encode_disp('TransactionID',Data) -> 'enc_TransactionID'(Data,[]);
encode_disp('TransactionType',Data) -> 'enc_TransactionType'(Data,[]);
encode_disp('Unsigned32',Data) -> 'enc_Unsigned32'(Data,[]);
encode_disp('Unsigned64',Data) -> 'enc_Unsigned64'(Data,[]);
encode_disp(Type,_Data) -> exit({error,{asn1,{undefined_type,Type}}}).


decode_disp('SDPCallDataRecord',Data) -> 'dec_SDPCallDataRecord'(Data,mandatory);
decode_disp('CDRProcessed',Data) -> 'dec_CDRProcessed'(Data,mandatory);
decode_disp('AccountAdjustment',Data) -> 'dec_AccountAdjustment'(Data,mandatory);
decode_disp('NegativeBalance',Data) -> 'dec_NegativeBalance'(Data,mandatory);
decode_disp('BonusAdjustment',Data) -> 'dec_BonusAdjustment'(Data,mandatory);
decode_disp('ServiceFeeDeduction',Data) -> 'dec_ServiceFeeDeduction'(Data,mandatory);
decode_disp('LifeCycleChange',Data) -> 'dec_LifeCycleChange'(Data,mandatory);
decode_disp('NegativeBalanceBarred',Data) -> 'dec_NegativeBalanceBarred'(Data,mandatory);
decode_disp('ValueVoucherExpiry',Data) -> 'dec_ValueVoucherExpiry'(Data,mandatory);
decode_disp('PeriodicAdjustment',Data) -> 'dec_PeriodicAdjustment'(Data,mandatory);
decode_disp('PeriodicReset',Data) -> 'dec_PeriodicReset'(Data,mandatory);
decode_disp('TemporaryBlock',Data) -> 'dec_TemporaryBlock'(Data,mandatory);
decode_disp('AccountFlags',Data) -> 'dec_AccountFlags'(Data,mandatory);
decode_disp('AccountGroupID',Data) -> 'dec_AccountGroupID'(Data,mandatory);
decode_disp('AccountHomeRegion',Data) -> 'dec_AccountHomeRegion'(Data,mandatory);
decode_disp('AccountUnitType',Data) -> 'dec_AccountUnitType'(Data,mandatory);
decode_disp('AccumulatorID',Data) -> 'dec_AccumulatorID'(Data,mandatory);
decode_disp('AccumulatorValue',Data) -> 'dec_AccumulatorValue'(Data,mandatory);
decode_disp('AdjustmentAction',Data) -> 'dec_AdjustmentAction'(Data,mandatory);
decode_disp('AdjustmentAccumulator',Data) -> 'dec_AdjustmentAccumulator'(Data,mandatory);
decode_disp('AdjustmentDedicatedAccount',Data) -> 'dec_AdjustmentDedicatedAccount'(Data,mandatory);
decode_disp('AdjustmentFaF',Data) -> 'dec_AdjustmentFaF'(Data,mandatory);
decode_disp('AdjustmentOffer',Data) -> 'dec_AdjustmentOffer'(Data,mandatory);
decode_disp('AdjustmentRecordType',Data) -> 'dec_AdjustmentRecordType'(Data,mandatory);
decode_disp('AdjustmentSubDedicatedAccount',Data) -> 'dec_AdjustmentSubDedicatedAccount'(Data,mandatory);
decode_disp('AggregatedBalanceDedicatedAccount',Data) -> 'dec_AggregatedBalanceDedicatedAccount'(Data,mandatory);
decode_disp('AggregatedBalanceSubDedicatedAccount',Data) -> 'dec_AggregatedBalanceSubDedicatedAccount'(Data,mandatory);
decode_disp('BonusAccumulator',Data) -> 'dec_BonusAccumulator'(Data,mandatory);
decode_disp('BonusDedicatedAccount',Data) -> 'dec_BonusDedicatedAccount'(Data,mandatory);
decode_disp('CampaignIdentifier',Data) -> 'dec_CampaignIdentifier'(Data,mandatory);
decode_disp('CategoryValue',Data) -> 'dec_CategoryValue'(Data,mandatory);
decode_disp('CategorizationInformation',Data) -> 'dec_CategorizationInformation'(Data,mandatory);
decode_disp('CDRProcAccumulator',Data) -> 'dec_CDRProcAccumulator'(Data,mandatory);
decode_disp('CDRProcDedicatedAccount',Data) -> 'dec_CDRProcDedicatedAccount'(Data,mandatory);
decode_disp('ChargingSuccessCode',Data) -> 'dec_ChargingSuccessCode'(Data,mandatory);
decode_disp('ClearedAccumulator',Data) -> 'dec_ClearedAccumulator'(Data,mandatory);
decode_disp('ClearedDedicatedAccount',Data) -> 'dec_ClearedDedicatedAccount'(Data,mandatory);
decode_disp('ClearedSubDedicatedAccount',Data) -> 'dec_ClearedSubDedicatedAccount'(Data,mandatory);
decode_disp('CommunityID',Data) -> 'dec_CommunityID'(Data,mandatory);
decode_disp('CounterDelta',Data) -> 'dec_CounterDelta'(Data,mandatory);
decode_disp('CounterValue',Data) -> 'dec_CounterValue'(Data,mandatory);
decode_disp('CurrencyType',Data) -> 'dec_CurrencyType'(Data,mandatory);
decode_disp('Date',Data) -> 'dec_Date'(Data,mandatory);
decode_disp('DedicatedAccountID',Data) -> 'dec_DedicatedAccountID'(Data,mandatory);
decode_disp('DisconnectionCode',Data) -> 'dec_DisconnectionCode'(Data,mandatory);
decode_disp('Duration',Data) -> 'dec_Duration'(Data,mandatory);
decode_disp('FamilyAndFriendsAction',Data) -> 'dec_FamilyAndFriendsAction'(Data,mandatory);
decode_disp('FamilyAndFriendsIndicator',Data) -> 'dec_FamilyAndFriendsIndicator'(Data,mandatory);
decode_disp('IDString',Data) -> 'dec_IDString'(Data,mandatory);
decode_disp('IndividualPriceFactorHistory',Data) -> 'dec_IndividualPriceFactorHistory'(Data,mandatory);
decode_disp('Integer32',Data) -> 'dec_Integer32'(Data,mandatory);
decode_disp('Integer64',Data) -> 'dec_Integer64'(Data,mandatory);
decode_disp('Language',Data) -> 'dec_Language'(Data,mandatory);
decode_disp('LifeCycleInformation',Data) -> 'dec_LifeCycleInformation'(Data,mandatory);
decode_disp('MonetaryUnits',Data) -> 'dec_MonetaryUnits'(Data,mandatory);
decode_disp('MoneyAmount',Data) -> 'dec_MoneyAmount'(Data,mandatory);
decode_disp('NodeID',Data) -> 'dec_NodeID'(Data,mandatory);
decode_disp('NodeType',Data) -> 'dec_NodeType'(Data,mandatory);
decode_disp('NumberString',Data) -> 'dec_NumberString'(Data,mandatory);
decode_disp('OfferID',Data) -> 'dec_OfferID'(Data,mandatory);
decode_disp('Owner',Data) -> 'dec_Owner'(Data,mandatory);
decode_disp('Percent',Data) -> 'dec_Percent'(Data,mandatory);
decode_disp('Period',Data) -> 'dec_Period'(Data,mandatory);
decode_disp('PeriodicResetID',Data) -> 'dec_PeriodicResetID'(Data,mandatory);
decode_disp('PeriodType',Data) -> 'dec_PeriodType'(Data,mandatory);
decode_disp('PreActReasonCode',Data) -> 'dec_PreActReasonCode'(Data,mandatory);
decode_disp('PromotionPlan',Data) -> 'dec_PromotionPlan'(Data,mandatory);
decode_disp('RatedDurations',Data) -> 'dec_RatedDurations'(Data,mandatory);
decode_disp('Reason',Data) -> 'dec_Reason'(Data,mandatory);
decode_disp('RecordSequenceNumberString',Data) -> 'dec_RecordSequenceNumberString'(Data,mandatory);
decode_disp('RecordType',Data) -> 'dec_RecordType'(Data,mandatory);
decode_disp('RelatedNumberString',Data) -> 'dec_RelatedNumberString'(Data,mandatory);
decode_disp('RemovedFaF',Data) -> 'dec_RemovedFaF'(Data,mandatory);
decode_disp('RemovedOffer',Data) -> 'dec_RemovedOffer'(Data,mandatory);
decode_disp('ReplenishmentID',Data) -> 'dec_ReplenishmentID'(Data,mandatory);
decode_disp('SelectedCommunityIndicator',Data) -> 'dec_SelectedCommunityIndicator'(Data,mandatory);
decode_disp('ServFeeDeductSuccessCode',Data) -> 'dec_ServFeeDeductSuccessCode'(Data,mandatory);
decode_disp('ServiceClass',Data) -> 'dec_ServiceClass'(Data,mandatory);
decode_disp('ServiceFeeType',Data) -> 'dec_ServiceFeeType'(Data,mandatory);
decode_disp('ServiceOfferings',Data) -> 'dec_ServiceOfferings'(Data,mandatory);
decode_disp('ServiceUnits',Data) -> 'dec_ServiceUnits'(Data,mandatory);
decode_disp('SubscriberNumberString',Data) -> 'dec_SubscriberNumberString'(Data,mandatory);
decode_disp('TimeStamp',Data) -> 'dec_TimeStamp'(Data,mandatory);
decode_disp('TransactionCode',Data) -> 'dec_TransactionCode'(Data,mandatory);
decode_disp('TransactionID',Data) -> 'dec_TransactionID'(Data,mandatory);
decode_disp('TransactionType',Data) -> 'dec_TransactionType'(Data,mandatory);
decode_disp('Unsigned32',Data) -> 'dec_Unsigned32'(Data,mandatory);
decode_disp('Unsigned64',Data) -> 'dec_Unsigned64'(Data,mandatory);
decode_disp(Type,_Data) -> exit({error,{asn1,{undefined_type,Type}}}).



wrap_encode(Bytes) when is_list(Bytes) ->
   binary_to_list(list_to_binary(Bytes));
wrap_encode(Bytes) when is_binary(Bytes) ->
   binary_to_list(Bytes);
wrap_encode(Bytes) -> Bytes.

wrap_decode(Bytes) when is_list(Bytes) ->
   list_to_binary(Bytes);
wrap_decode(Bytes) -> Bytes.


info() ->
   case ?MODULE:module_info() of
      MI when is_list(MI) ->
         case lists:keysearch(attributes,1,MI) of
            {value,{_,Attributes}} when is_list(Attributes) ->
               case lists:keysearch(asn1_info,1,Attributes) of
                  {value,{_,Info}} when is_list(Info) ->
                     Info;
                  _ ->
                     []
               end;
            _ ->
               []
         end
   end.


%%================================
%%  SDPCallDataRecord
%%================================

'enc_SDPCallDataRecord'({'SDPCallDataRecord',Val}, TagIn) ->
   'enc_SDPCallDataRecord'(Val, TagIn);

'enc_SDPCallDataRecord'(Val, TagIn) ->
   {EncBytes,EncLen} = case element(1,Val) of
      cDRProcessed ->
         'enc_CDRProcessed'(element(2,Val), [{tag,128,1,'IMPLICIT',32}]);
      accountAdjustment ->
         'enc_AccountAdjustment'(element(2,Val), [{tag,128,2,'IMPLICIT',32}]);
      negativeBalance ->
         'enc_NegativeBalance'(element(2,Val), [{tag,128,3,'IMPLICIT',32}]);
      bonusAdjustment ->
         'enc_BonusAdjustment'(element(2,Val), [{tag,128,4,'IMPLICIT',32}]);
      serviceFeeDeduction ->
         'enc_ServiceFeeDeduction'(element(2,Val), [{tag,128,5,'IMPLICIT',32}]);
      lifeCycleChange ->
         'enc_LifeCycleChange'(element(2,Val), [{tag,128,6,'IMPLICIT',32}]);
      negativeBalanceBarred ->
         'enc_NegativeBalanceBarred'(element(2,Val), [{tag,128,7,'IMPLICIT',32}]);
      valueVoucherExpiry ->
         'enc_ValueVoucherExpiry'(element(2,Val), [{tag,128,8,'IMPLICIT',32}]);
      periodicAdjustment ->
         'enc_PeriodicAdjustment'(element(2,Val), [{tag,128,9,'IMPLICIT',32}]);
      periodicReset ->
         'enc_PeriodicReset'(element(2,Val), [{tag,128,10,'IMPLICIT',32}]);
      temporaryBlock ->
         'enc_TemporaryBlock'(element(2,Val), [{tag,128,11,'IMPLICIT',32}]);
      Else -> 
         exit({error,{asn1,{invalid_choice_type,Else}}})
   end,

?RT_BER:encode_tags(TagIn ++[], EncBytes, EncLen).




'dec_SDPCallDataRecord'(Bytes, OptOrMand) ->
   'dec_SDPCallDataRecord'(Bytes, OptOrMand, []).

'dec_SDPCallDataRecord'(Bytes, OptOrMand, TagIn) ->
   {{_,Len},Bytes1, RbExp} = ?RT_BER:check_tags(TagIn++[], Bytes, OptOrMand),
   IndefEndBytes = fun(indefinite,<<0,0,R/binary>>)-> R; (_,B)-> B end,
   IndefEndRb = fun(indefinite,<<0,0,_R/binary>>)-> 2; (_,_)-> 0 end,
   case Bytes1 of

%% 'cDRProcessed'
      <<2:2,_:1,1:5,_/binary>> ->
         {Dec, Rest, RbCho} = 'dec_CDRProcessed'(Bytes1, mandatory, [{tag,128,1,'IMPLICIT',32}]),
         {{cDRProcessed, Dec}, IndefEndBytes(Len,Rest), RbExp + RbCho + IndefEndRb(Len,Rest)};


%% 'accountAdjustment'
      <<2:2,_:1,2:5,_/binary>> ->
         {Dec, Rest, RbCho} = 'dec_AccountAdjustment'(Bytes1, mandatory, [{tag,128,2,'IMPLICIT',32}]),
         {{accountAdjustment, Dec}, IndefEndBytes(Len,Rest), RbExp + RbCho + IndefEndRb(Len,Rest)};


%% 'negativeBalance'
      <<2:2,_:1,3:5,_/binary>> ->
         {Dec, Rest, RbCho} = 'dec_NegativeBalance'(Bytes1, mandatory, [{tag,128,3,'IMPLICIT',32}]),
         {{negativeBalance, Dec}, IndefEndBytes(Len,Rest), RbExp + RbCho + IndefEndRb(Len,Rest)};


%% 'bonusAdjustment'
      <<2:2,_:1,4:5,_/binary>> ->
         {Dec, Rest, RbCho} = 'dec_BonusAdjustment'(Bytes1, mandatory, [{tag,128,4,'IMPLICIT',32}]),
         {{bonusAdjustment, Dec}, IndefEndBytes(Len,Rest), RbExp + RbCho + IndefEndRb(Len,Rest)};


%% 'serviceFeeDeduction'
      <<2:2,_:1,5:5,_/binary>> ->
         {Dec, Rest, RbCho} = 'dec_ServiceFeeDeduction'(Bytes1, mandatory, [{tag,128,5,'IMPLICIT',32}]),
         {{serviceFeeDeduction, Dec}, IndefEndBytes(Len,Rest), RbExp + RbCho + IndefEndRb(Len,Rest)};


%% 'lifeCycleChange'
      <<2:2,_:1,6:5,_/binary>> ->
         {Dec, Rest, RbCho} = 'dec_LifeCycleChange'(Bytes1, mandatory, [{tag,128,6,'IMPLICIT',32}]),
         {{lifeCycleChange, Dec}, IndefEndBytes(Len,Rest), RbExp + RbCho + IndefEndRb(Len,Rest)};


%% 'negativeBalanceBarred'
      <<2:2,_:1,7:5,_/binary>> ->
         {Dec, Rest, RbCho} = 'dec_NegativeBalanceBarred'(Bytes1, mandatory, [{tag,128,7,'IMPLICIT',32}]),
         {{negativeBalanceBarred, Dec}, IndefEndBytes(Len,Rest), RbExp + RbCho + IndefEndRb(Len,Rest)};


%% 'valueVoucherExpiry'
      <<2:2,_:1,8:5,_/binary>> ->
         {Dec, Rest, RbCho} = 'dec_ValueVoucherExpiry'(Bytes1, mandatory, [{tag,128,8,'IMPLICIT',32}]),
         {{valueVoucherExpiry, Dec}, IndefEndBytes(Len,Rest), RbExp + RbCho + IndefEndRb(Len,Rest)};


%% 'periodicAdjustment'
      <<2:2,_:1,9:5,_/binary>> ->
         {Dec, Rest, RbCho} = 'dec_PeriodicAdjustment'(Bytes1, mandatory, [{tag,128,9,'IMPLICIT',32}]),
         {{periodicAdjustment, Dec}, IndefEndBytes(Len,Rest), RbExp + RbCho + IndefEndRb(Len,Rest)};


%% 'periodicReset'
      <<2:2,_:1,10:5,_/binary>> ->
         {Dec, Rest, RbCho} = 'dec_PeriodicReset'(Bytes1, mandatory, [{tag,128,10,'IMPLICIT',32}]),
         {{periodicReset, Dec}, IndefEndBytes(Len,Rest), RbExp + RbCho + IndefEndRb(Len,Rest)};


%% 'temporaryBlock'
      <<2:2,_:1,11:5,_/binary>> ->
         {Dec, Rest, RbCho} = 'dec_TemporaryBlock'(Bytes1, mandatory, [{tag,128,11,'IMPLICIT',32}]),
         {{temporaryBlock, Dec}, IndefEndBytes(Len,Rest), RbExp + RbCho + IndefEndRb(Len,Rest)};

      Else -> 
         case OptOrMand of
            mandatory ->exit({error,{asn1,{invalid_choice_tag,Else}}});
            _ ->exit({error,{asn1,{no_optional_tag,Else}}})
         end
   end.


%%================================
%%  CDRProcessed
%%================================
'enc_CDRProcessed'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type ENUMERATED
%%-------------------------------------------------
   {EncBytes1,EncLen1} = case (case ?RT_BER:cindex(2,Val,recordType) of {_,Enumval1}->Enumval1;_->?RT_BER:cindex(2,Val,recordType) end) of
mobileOriginating -> ?RT_BER:encode_enumerated(1,[{tag,128,1,'IMPLICIT',32}]);
mobileTerminating -> ?RT_BER:encode_enumerated(2,[{tag,128,1,'IMPLICIT',32}]);
callForwarding -> ?RT_BER:encode_enumerated(3,[{tag,128,1,'IMPLICIT',32}]);
mobileOriginatingSMSinSMSC -> ?RT_BER:encode_enumerated(4,[{tag,128,1,'IMPLICIT',32}]);
mobileTerminatingSMSinSMSC -> ?RT_BER:encode_enumerated(5,[{tag,128,1,'IMPLICIT',32}]);
gprsCDR -> ?RT_BER:encode_enumerated(6,[{tag,128,1,'IMPLICIT',32}]);
mobileOriginatingSMSinGPRS -> ?RT_BER:encode_enumerated(7,[{tag,128,1,'IMPLICIT',32}]);
mobileTerminatingSMSinGPRS -> ?RT_BER:encode_enumerated(8,[{tag,128,1,'IMPLICIT',32}]);
chargeEventCDR -> ?RT_BER:encode_enumerated(10,[{tag,128,1,'IMPLICIT',32}]);
Enumval2 -> exit({error,{asn1, {enumerated_not_in_range,Enumval2}}})
end,

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {EncBytes2,EncLen2} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(3,Val,sdpID), 22, [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,cdrID), 22, [{tag,128,3,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes4,EncLen4} =  case ?RT_BER:cindex(5,Val,originalCdrNodeID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,originalCdrNodeID), 22, [{tag,128,4,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes5,EncLen5} =  case ?RT_BER:cindex(6,Val,originalCdrID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,originalCdrID), 22, [{tag,128,5,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 6 with type IA5String
%%-------------------------------------------------
   {EncBytes6,EncLen6} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(7,Val,subscriberNumber), 22, [{tag,128,6,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 7 with type IA5String
%%-------------------------------------------------
   {EncBytes7,EncLen7} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(8,Val,relatedNumber), 22, [{tag,128,7,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes8,EncLen8} =  case ?RT_BER:cindex(9,Val,originalCdrTimeStamp) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(9,Val,originalCdrTimeStamp), 22, [{tag,128,8,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String
%%-------------------------------------------------
   {EncBytes9,EncLen9} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(10,Val,cDRProcessingTimeStamp), 22, [{tag,128,9,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 10 with type IA5String
%%-------------------------------------------------
   {EncBytes10,EncLen10} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(11,Val,balanceBeforeCDRProc), 22, [{tag,128,10,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 11 with type IA5String
%%-------------------------------------------------
   {EncBytes11,EncLen11} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(12,Val,balanceAfterCDRProc), 22, [{tag,128,11,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 12 with type IA5String
%%-------------------------------------------------
   {EncBytes12,EncLen12} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(13,Val,eventCost), 22, [{tag,128,12,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 13 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes13,EncLen13} =  case ?RT_BER:cindex(14,Val,surplusDebit) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(14,Val,surplusDebit), 22, [{tag,128,13,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 14 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes14,EncLen14} =  case ?RT_BER:cindex(15,Val,familyAndFriendsIndicator) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(15,Val,familyAndFriendsIndicator), [{tag,128,14,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 15 with type INTEGER
%%-------------------------------------------------
   {EncBytes15,EncLen15} = ?RT_BER:encode_integer([], ?RT_BER:cindex(16,Val,serviceClassId), [{tag,128,15,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 16 with type INTEGER
%%-------------------------------------------------
   {EncBytes16,EncLen16} = ?RT_BER:encode_integer([], ?RT_BER:cindex(17,Val,currencyType), [{local,0},{euro,1}], [{tag,128,16,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 17 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes17,EncLen17} =  case ?RT_BER:cindex(18,Val,tempBlocked) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(18,Val,tempBlocked), [{tag,128,17,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 18 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes18,EncLen18} =  case ?RT_BER:cindex(19,Val,accountNumber) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(19,Val,accountNumber), 22, [{tag,128,18,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 19 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes19,EncLen19} =  case ?RT_BER:cindex(20,Val,accountGroupID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(20,Val,accountGroupID), [{tag,128,19,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 20 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes20,EncLen20} =  case ?RT_BER:cindex(21,Val,serviceOfferings) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(21,Val,serviceOfferings), [{tag,128,20,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 21 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes21,EncLen21} =  case ?RT_BER:cindex(22,Val,selectedCommunityIndicator) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(22,Val,selectedCommunityIndicator), [{tag,128,21,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 22 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes22,EncLen22} =  case ?RT_BER:cindex(23,Val,communityID1Charged) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(23,Val,communityID1Charged), [{tag,128,22,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 23 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes23,EncLen23} =  case ?RT_BER:cindex(24,Val,communityID2Charged) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(24,Val,communityID2Charged), [{tag,128,23,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 24 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes24,EncLen24} =  case ?RT_BER:cindex(25,Val,communityID3Charged) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(25,Val,communityID3Charged), [{tag,128,24,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 25 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes25,EncLen25} =  case ?RT_BER:cindex(26,Val,communityID1NonCharged) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(26,Val,communityID1NonCharged), [{tag,128,25,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 26 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes26,EncLen26} =  case ?RT_BER:cindex(27,Val,communityID2NonCharged) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(27,Val,communityID2NonCharged), [{tag,128,26,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 27 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes27,EncLen27} =  case ?RT_BER:cindex(28,Val,communityID3NonCharged) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(28,Val,communityID3NonCharged), [{tag,128,27,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 28 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes28,EncLen28} =  case ?RT_BER:cindex(29,Val,communityDataNonChargedNotAvailable) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(29,Val,communityDataNonChargedNotAvailable), [{tag,128,28,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 29 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes29,EncLen29} =  case ?RT_BER:cindex(30,Val,subscriberConvergent) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(30,Val,subscriberConvergent), [{tag,128,29,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 30 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes30,EncLen30} =  case ?RT_BER:cindex(31,Val,updatedAccumulatorID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(31,Val,updatedAccumulatorID), [{tag,128,30,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 31 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes31,EncLen31} =  case ?RT_BER:cindex(32,Val,cdrProcDedicatedAccounts) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_CDRProcessed_cdrProcDedicatedAccounts'(?RT_BER:cindex(32,Val,cdrProcDedicatedAccounts), [{tag,128,31,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 32 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes32,EncLen32} =  case ?RT_BER:cindex(33,Val,cdrProcAccumulators) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_CDRProcessed_cdrProcAccumulators'(?RT_BER:cindex(33,Val,cdrProcAccumulators), [{tag,128,32,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 33   External SDPOUTPUTCDR:CategorizationInformation OPTIONAL
%%-------------------------------------------------
   {EncBytes33,EncLen33} =  case ?RT_BER:cindex(34,Val,categorizationInformation) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_CategorizationInformation'(?RT_BER:cindex(34,Val,categorizationInformation), [{tag,128,33,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 34   External SDPOUTPUTCDR:RatedDurations OPTIONAL
%%-------------------------------------------------
   {EncBytes34,EncLen34} =  case ?RT_BER:cindex(35,Val,ratedDurations) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_RatedDurations'(?RT_BER:cindex(35,Val,ratedDurations), [{tag,128,34,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 35 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes35,EncLen35} =  case ?RT_BER:cindex(36,Val,individualPriceFactorHistory) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_CDRProcessed_individualPriceFactorHistory'(?RT_BER:cindex(36,Val,individualPriceFactorHistory), [{tag,128,35,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9, EncBytes10, EncBytes11, EncBytes12, EncBytes13, EncBytes14, EncBytes15, EncBytes16, EncBytes17, EncBytes18, EncBytes19, EncBytes20, EncBytes21, EncBytes22, EncBytes23, EncBytes24, EncBytes25, EncBytes26, EncBytes27, EncBytes28, EncBytes29, EncBytes30, EncBytes31, EncBytes32, EncBytes33, EncBytes34, EncBytes35],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9 + EncLen10 + EncLen11 + EncLen12 + EncLen13 + EncLen14 + EncLen15 + EncLen16 + EncLen17 + EncLen18 + EncLen19 + EncLen20 + EncLen21 + EncLen22 + EncLen23 + EncLen24 + EncLen25 + EncLen26 + EncLen27 + EncLen28 + EncLen29 + EncLen30 + EncLen31 + EncLen32 + EncLen33 + EncLen34 + EncLen35,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).



%%================================
%%  CDRProcessed_cdrProcDedicatedAccounts
%%================================

'enc_CDRProcessed_cdrProcDedicatedAccounts'({'CDRProcessed_cdrProcDedicatedAccounts',Val}, TagIn) ->
   'enc_CDRProcessed_cdrProcDedicatedAccounts'(Val, TagIn);

'enc_CDRProcessed_cdrProcDedicatedAccounts'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_CDRProcessed_cdrProcDedicatedAccounts_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_CDRProcessed_cdrProcDedicatedAccounts_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_CDRProcessed_cdrProcDedicatedAccounts_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_CDRProcDedicatedAccount'(H, []),
   'enc_CDRProcessed_cdrProcDedicatedAccounts_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_CDRProcessed_cdrProcDedicatedAccounts'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_CDRProcDedicatedAccount'/3, [], []).





%%================================
%%  CDRProcessed_cdrProcAccumulators
%%================================

'enc_CDRProcessed_cdrProcAccumulators'({'CDRProcessed_cdrProcAccumulators',Val}, TagIn) ->
   'enc_CDRProcessed_cdrProcAccumulators'(Val, TagIn);

'enc_CDRProcessed_cdrProcAccumulators'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_CDRProcessed_cdrProcAccumulators_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_CDRProcessed_cdrProcAccumulators_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_CDRProcessed_cdrProcAccumulators_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_CDRProcAccumulator'(H, []),
   'enc_CDRProcessed_cdrProcAccumulators_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_CDRProcessed_cdrProcAccumulators'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_CDRProcAccumulator'/3, [], []).





%%================================
%%  CDRProcessed_individualPriceFactorHistory
%%================================

'enc_CDRProcessed_individualPriceFactorHistory'({'CDRProcessed_individualPriceFactorHistory',Val}, TagIn) ->
   'enc_CDRProcessed_individualPriceFactorHistory'(Val, TagIn);

'enc_CDRProcessed_individualPriceFactorHistory'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_CDRProcessed_individualPriceFactorHistory_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_CDRProcessed_individualPriceFactorHistory_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_CDRProcessed_individualPriceFactorHistory_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_IndividualPriceFactorHistory'(H, []),
   'enc_CDRProcessed_individualPriceFactorHistory_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_CDRProcessed_individualPriceFactorHistory'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_IndividualPriceFactorHistory'/3, [], []).




'dec_CDRProcessed'(Bytes, OptOrMand) ->
   'dec_CDRProcessed'(Bytes, OptOrMand, []).

'dec_CDRProcessed'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type ENUMERATED
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_enumerated(Bytes2,[],[{mobileOriginating,1},{mobileTerminating,2},{callForwarding,3},{mobileOriginatingSMSinSMSC,4},{mobileTerminatingSMSinSMSC,5},{gprsCDR,6},{mobileOriginatingSMSinGPRS,7},{mobileTerminatingSMSinGPRS,8},{chargeEventCDR,10}],[{tag,128,1,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_restricted_string(Bytes3,{1,20},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_restricted_string(Bytes4,{1,20},22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 4 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = case Bytes5 of
<<2:2,_:1,4:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes5,{1,20},22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes5, 0 }
end,

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = case Bytes6 of
<<2:2,_:1,5:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes6,{1,20},22,[{tag,128,5,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes6, 0 }
end,

%%-------------------------------------------------
%% attribute number 6 with type IA5String
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = ?RT_BER:decode_restricted_string(Bytes7,{0,30},22,[{tag,128,6,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 7 with type IA5String
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = ?RT_BER:decode_restricted_string(Bytes8,{0,63},22,[{tag,128,7,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = case Bytes9 of
<<2:2,_:1,8:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes9,19,22,[{tag,128,8,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes9, 0 }
end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = ?RT_BER:decode_restricted_string(Bytes10,19,22,[{tag,128,9,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 10 with type IA5String
%%-------------------------------------------------
   {Term10,Bytes12,Rb11} = ?RT_BER:decode_restricted_string(Bytes11,{1,17},22,[{tag,128,10,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 11 with type IA5String
%%-------------------------------------------------
   {Term11,Bytes13,Rb12} = ?RT_BER:decode_restricted_string(Bytes12,{1,17},22,[{tag,128,11,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 12 with type IA5String
%%-------------------------------------------------
   {Term12,Bytes14,Rb13} = ?RT_BER:decode_restricted_string(Bytes13,{1,17},22,[{tag,128,12,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 13 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term13,Bytes15,Rb14} = case Bytes14 of
<<2:2,_:1,13:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes14,{1,17},22,[{tag,128,13,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes14, 0 }
end,

%%-------------------------------------------------
%% attribute number 14 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term14,Bytes16,Rb15} = case Bytes15 of
<<2:2,_:1,14:5,_/binary>> ->
?RT_BER:decode_integer(Bytes15,{1,65535},[{tag,128,14,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes15, 0 }
end,

%%-------------------------------------------------
%% attribute number 15 with type INTEGER
%%-------------------------------------------------
   {Term15,Bytes17,Rb16} = ?RT_BER:decode_integer(Bytes16,{0,9999},[{tag,128,15,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 16 with type INTEGER
%%-------------------------------------------------
   {Term16,Bytes18,Rb17} = ?RT_BER:decode_integer(Bytes17,[],[{local,0},{euro,1}],[{tag,128,16,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 17 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term17,Bytes19,Rb18} = case Bytes18 of
<<2:2,_:1,17:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes18,[{tag,128,17,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes18, 0 }
end,

%%-------------------------------------------------
%% attribute number 18 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term18,Bytes20,Rb19} = case Bytes19 of
<<2:2,_:1,18:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes19,{1,30},22,[{tag,128,18,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes19, 0 }
end,

%%-------------------------------------------------
%% attribute number 19 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term19,Bytes21,Rb20} = case Bytes20 of
<<2:2,_:1,19:5,_/binary>> ->
?RT_BER:decode_integer(Bytes20,{0,2147483647},[{tag,128,19,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes20, 0 }
end,

%%-------------------------------------------------
%% attribute number 20 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term20,Bytes22,Rb21} = case Bytes21 of
<<2:2,_:1,20:5,_/binary>> ->
?RT_BER:decode_integer(Bytes21,{0,2147483647},[{tag,128,20,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes21, 0 }
end,

%%-------------------------------------------------
%% attribute number 21 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term21,Bytes23,Rb22} = case Bytes22 of
<<2:2,_:1,21:5,_/binary>> ->
?RT_BER:decode_integer(Bytes22,{0,9999999},[{tag,128,21,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes22, 0 }
end,

%%-------------------------------------------------
%% attribute number 22 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term22,Bytes24,Rb23} = case Bytes23 of
<<2:2,_:1,22:5,_/binary>> ->
?RT_BER:decode_integer(Bytes23,{0,9999999},[{tag,128,22,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes23, 0 }
end,

%%-------------------------------------------------
%% attribute number 23 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term23,Bytes25,Rb24} = case Bytes24 of
<<2:2,_:1,23:5,_/binary>> ->
?RT_BER:decode_integer(Bytes24,{0,9999999},[{tag,128,23,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes24, 0 }
end,

%%-------------------------------------------------
%% attribute number 24 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term24,Bytes26,Rb25} = case Bytes25 of
<<2:2,_:1,24:5,_/binary>> ->
?RT_BER:decode_integer(Bytes25,{0,9999999},[{tag,128,24,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes25, 0 }
end,

%%-------------------------------------------------
%% attribute number 25 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term25,Bytes27,Rb26} = case Bytes26 of
<<2:2,_:1,25:5,_/binary>> ->
?RT_BER:decode_integer(Bytes26,{0,9999999},[{tag,128,25,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes26, 0 }
end,

%%-------------------------------------------------
%% attribute number 26 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term26,Bytes28,Rb27} = case Bytes27 of
<<2:2,_:1,26:5,_/binary>> ->
?RT_BER:decode_integer(Bytes27,{0,9999999},[{tag,128,26,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes27, 0 }
end,

%%-------------------------------------------------
%% attribute number 27 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term27,Bytes29,Rb28} = case Bytes28 of
<<2:2,_:1,27:5,_/binary>> ->
?RT_BER:decode_integer(Bytes28,{0,9999999},[{tag,128,27,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes28, 0 }
end,

%%-------------------------------------------------
%% attribute number 28 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term28,Bytes30,Rb29} = case Bytes29 of
<<2:2,_:1,28:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes29,[{tag,128,28,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes29, 0 }
end,

%%-------------------------------------------------
%% attribute number 29 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term29,Bytes31,Rb30} = case Bytes30 of
<<2:2,_:1,29:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes30,[{tag,128,29,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes30, 0 }
end,

%%-------------------------------------------------
%% attribute number 30 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term30,Bytes32,Rb31} = case Bytes31 of
<<2:2,_:1,30:5,_/binary>> ->
?RT_BER:decode_integer(Bytes31,{1,2147483647},[{tag,128,30,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes31, 0 }
end,

%%-------------------------------------------------
%% attribute number 31 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term31,Bytes33,Rb32} = case Bytes32 of
<<2:2,_:1,31:5,31,_/binary>> ->
'dec_CDRProcessed_cdrProcDedicatedAccounts'(Bytes32, opt_or_default, [{tag,128,31,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes32, 0 }
end,

%%-------------------------------------------------
%% attribute number 32 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term32,Bytes34,Rb33} = case Bytes33 of
<<2:2,_:1,31:5,32,_/binary>> ->
'dec_CDRProcessed_cdrProcAccumulators'(Bytes33, opt_or_default, [{tag,128,32,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes33, 0 }
end,

%%-------------------------------------------------
%% attribute number 33   External SDPOUTPUTCDR:CategorizationInformation OPTIONAL
%%-------------------------------------------------
   {Term33,Bytes35,Rb34} = case Bytes34 of
<<2:2,_:1,31:5,33,_/binary>> ->
'dec_CategorizationInformation'(Bytes34, opt_or_default, [{tag,128,33,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes34, 0 }
end,

%%-------------------------------------------------
%% attribute number 34   External SDPOUTPUTCDR:RatedDurations OPTIONAL
%%-------------------------------------------------
   {Term34,Bytes36,Rb35} = case Bytes35 of
<<2:2,_:1,31:5,34,_/binary>> ->
'dec_RatedDurations'(Bytes35, opt_or_default, [{tag,128,34,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes35, 0 }
end,

%%-------------------------------------------------
%% attribute number 35 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term35,Bytes37,Rb36} = case Bytes36 of
<<2:2,_:1,31:5,35,_/binary>> ->
'dec_CDRProcessed_individualPriceFactorHistory'(Bytes36, opt_or_default, [{tag,128,35,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes36, 0 }
end,

   {Bytes38,Rb37} = ?RT_BER:restbytes2(RemBytes, Bytes37,ext),
   {{'CDRProcessed', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9, Term10, Term11, Term12, Term13, Term14, Term15, Term16, Term17, Term18, Term19, Term20, Term21, Term22, Term23, Term24, Term25, Term26, Term27, Term28, Term29, Term30, Term31, Term32, Term33, Term34, Term35}, Bytes38, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11+Rb12+Rb13+Rb14+Rb15+Rb16+Rb17+Rb18+Rb19+Rb20+Rb21+Rb22+Rb23+Rb24+Rb25+Rb26+Rb27+Rb28+Rb29+Rb30+Rb31+Rb32+Rb33+Rb34+Rb35+Rb36+Rb37}.


%%================================
%%  AccountAdjustment
%%================================
'enc_AccountAdjustment'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type ENUMERATED
%%-------------------------------------------------
   {EncBytes1,EncLen1} = case (case ?RT_BER:cindex(2,Val,adjustmentRecordType) of {_,Enumval1}->Enumval1;_->?RT_BER:cindex(2,Val,adjustmentRecordType) end) of
refillCDR -> ?RT_BER:encode_enumerated(1,[{tag,128,1,'IMPLICIT',32}]);
notDefined -> ?RT_BER:encode_enumerated(2,[{tag,128,1,'IMPLICIT',32}]);
linkageOfSubordinateSubscriber -> ?RT_BER:encode_enumerated(3,[{tag,128,1,'IMPLICIT',32}]);
removalOfSubordinateSubscriber -> ?RT_BER:encode_enumerated(4,[{tag,128,1,'IMPLICIT',32}]);
chargedEnquiry -> ?RT_BER:encode_enumerated(5,[{tag,128,1,'IMPLICIT',32}]);
chargedServiceClassChange -> ?RT_BER:encode_enumerated(6,[{tag,128,1,'IMPLICIT',32}]);
notUsed -> ?RT_BER:encode_enumerated(7,[{tag,128,1,'IMPLICIT',32}]);
changedFamilyAndFriendsList -> ?RT_BER:encode_enumerated(8,[{tag,128,1,'IMPLICIT',32}]);
clearedDedicatedAccount -> ?RT_BER:encode_enumerated(9,[{tag,128,1,'IMPLICIT',32}]);
premiumRefill -> ?RT_BER:encode_enumerated(10,[{tag,128,1,'IMPLICIT',32}]);
provisioningUaDa -> ?RT_BER:encode_enumerated(11,[{tag,128,1,'IMPLICIT',32}]);
Enumval2 -> exit({error,{asn1, {enumerated_not_in_range,Enumval2}}})
end,

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {EncBytes2,EncLen2} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(3,Val,sdpID), 22, [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,cdrID), 22, [{tag,128,3,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {EncBytes4,EncLen4} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,accountNumber), 22, [{tag,128,4,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 5 with type IA5String
%%-------------------------------------------------
   {EncBytes5,EncLen5} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,subscriberNumber), 22, [{tag,128,5,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 6 with type IA5String
%%-------------------------------------------------
   {EncBytes6,EncLen6} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(7,Val,adjustmentTimeStamp), 22, [{tag,128,6,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 7 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes7,EncLen7} =  case ?RT_BER:cindex(8,Val,adjustmentAction) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(8,Val,adjustmentAction) of {_,Enumval8}->Enumval8;_->?RT_BER:cindex(8,Val,adjustmentAction) end) of
set -> ?RT_BER:encode_enumerated(0,[{tag,128,7,'IMPLICIT',32}]);
add -> ?RT_BER:encode_enumerated(1,[{tag,128,7,'IMPLICIT',32}]);
subtract -> ?RT_BER:encode_enumerated(2,[{tag,128,7,'IMPLICIT',32}]);
reset -> ?RT_BER:encode_enumerated(3,[{tag,128,7,'IMPLICIT',32}]);
remove -> ?RT_BER:encode_enumerated(4,[{tag,128,7,'IMPLICIT',32}]);
create -> ?RT_BER:encode_enumerated(5,[{tag,128,7,'IMPLICIT',32}]);
Enumval9 -> exit({error,{asn1, {enumerated_not_in_range,Enumval9}}})
end
       end,

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes8,EncLen8} =  case ?RT_BER:cindex(9,Val,balanceBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(9,Val,balanceBefore), 22, [{tag,128,8,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes9,EncLen9} =  case ?RT_BER:cindex(10,Val,balanceAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(10,Val,balanceAfter), 22, [{tag,128,9,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes10,EncLen10} =  case ?RT_BER:cindex(11,Val,adjustmentAmount) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(11,Val,adjustmentAmount), 22, [{tag,128,10,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 11 with type INTEGER
%%-------------------------------------------------
   {EncBytes11,EncLen11} = ?RT_BER:encode_integer([], ?RT_BER:cindex(12,Val,serviceClassId), [{tag,128,11,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 12 with type INTEGER
%%-------------------------------------------------
   {EncBytes12,EncLen12} = ?RT_BER:encode_integer([], ?RT_BER:cindex(13,Val,currencyType), [{local,0},{euro,1}], [{tag,128,12,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 13 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes13,EncLen13} =  case ?RT_BER:cindex(14,Val,originalAdjustmentAmount) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(14,Val,originalAdjustmentAmount), 22, [{tag,128,13,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 14 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes14,EncLen14} =  case ?RT_BER:cindex(15,Val,originalCurrencyType) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(15,Val,originalCurrencyType), [{local,0},{euro,1}], [{tag,128,14,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 15 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes15,EncLen15} =  case ?RT_BER:cindex(16,Val,originNodeType) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(16,Val,originNodeType), 22, [{tag,128,15,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 16 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes16,EncLen16} =  case ?RT_BER:cindex(17,Val,originNodeId) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(17,Val,originNodeId), 22, [{tag,128,16,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 17 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes17,EncLen17} =  case ?RT_BER:cindex(18,Val,origTransactionID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(18,Val,origTransactionID), 22, [{tag,128,17,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 18 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes18,EncLen18} =  case ?RT_BER:cindex(19,Val,origTransactionTimeStamp) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(19,Val,origTransactionTimeStamp), 22, [{tag,128,18,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 19 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes19,EncLen19} =  case ?RT_BER:cindex(20,Val,transactionType) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(20,Val,transactionType), 22, [{tag,128,19,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 20 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes20,EncLen20} =  case ?RT_BER:cindex(21,Val,transactionCode) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(21,Val,transactionCode), 22, [{tag,128,20,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 21 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes21,EncLen21} =  case ?RT_BER:cindex(22,Val,originOperatorId) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(22,Val,originOperatorId), 22, [{tag,128,21,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 22 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes22,EncLen22} =  case ?RT_BER:cindex(23,Val,supervisionExpDateBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(23,Val,supervisionExpDateBefore), 22, [{tag,128,22,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 23 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes23,EncLen23} =  case ?RT_BER:cindex(24,Val,supervisionExpDateAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(24,Val,supervisionExpDateAfter), 22, [{tag,128,23,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 24 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes24,EncLen24} =  case ?RT_BER:cindex(25,Val,creditClearancePeriodBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(25,Val,creditClearancePeriodBefore), [{tag,128,24,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 25 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes25,EncLen25} =  case ?RT_BER:cindex(26,Val,creditClearancePeriodAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(26,Val,creditClearancePeriodAfter), [{tag,128,25,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 26 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes26,EncLen26} =  case ?RT_BER:cindex(27,Val,servFeeExpDateBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(27,Val,servFeeExpDateBefore), 22, [{tag,128,26,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 27 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes27,EncLen27} =  case ?RT_BER:cindex(28,Val,servFeeExpDateAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(28,Val,servFeeExpDateAfter), 22, [{tag,128,27,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 28 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes28,EncLen28} =  case ?RT_BER:cindex(29,Val,serviceRemovalPeriodBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(29,Val,serviceRemovalPeriodBefore), [{tag,128,28,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 29 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes29,EncLen29} =  case ?RT_BER:cindex(30,Val,serviceRemovalPeriodAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(30,Val,serviceRemovalPeriodAfter), [{tag,128,29,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 30 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes30,EncLen30} =  case ?RT_BER:cindex(31,Val,accountFlagsBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(31,Val,accountFlagsBefore), 22, [{tag,128,30,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 31 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes31,EncLen31} =  case ?RT_BER:cindex(32,Val,accountFlagsAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(32,Val,accountFlagsAfter), 22, [{tag,128,31,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 32 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes32,EncLen32} =  case ?RT_BER:cindex(33,Val,newServiceClass) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(33,Val,newServiceClass), [{tag,128,32,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 33 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes33,EncLen33} =  case ?RT_BER:cindex(34,Val,valueVoucherExpDateBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(34,Val,valueVoucherExpDateBefore), 22, [{tag,128,33,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 34 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes34,EncLen34} =  case ?RT_BER:cindex(35,Val,valueVoucherExpDateAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(35,Val,valueVoucherExpDateAfter), 22, [{tag,128,34,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 35 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes35,EncLen35} =  case ?RT_BER:cindex(36,Val,temporaryServiceClassBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(36,Val,temporaryServiceClassBefore), [{tag,128,35,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 36 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes36,EncLen36} =  case ?RT_BER:cindex(37,Val,temporaryServiceClassAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(37,Val,temporaryServiceClassAfter), [{tag,128,36,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 37 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes37,EncLen37} =  case ?RT_BER:cindex(38,Val,activationDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(38,Val,activationDate), 22, [{tag,128,37,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 38 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes38,EncLen38} =  case ?RT_BER:cindex(39,Val,refillUnbarTimeStamp) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(39,Val,refillUnbarTimeStamp), 22, [{tag,128,38,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 39 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes39,EncLen39} =  case ?RT_BER:cindex(40,Val,oldLanguage) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(40,Val,oldLanguage), [{tag,128,39,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 40 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes40,EncLen40} =  case ?RT_BER:cindex(41,Val,newLanguage) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(41,Val,newLanguage), [{tag,128,40,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 41 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes41,EncLen41} =  case ?RT_BER:cindex(42,Val,promotionPlanIDBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(42,Val,promotionPlanIDBefore), 22, [{tag,128,41,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 42 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes42,EncLen42} =  case ?RT_BER:cindex(43,Val,promotionPlanIDAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(43,Val,promotionPlanIDAfter), 22, [{tag,128,42,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 43 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes43,EncLen43} =  case ?RT_BER:cindex(44,Val,negativeBalanceBarringDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(44,Val,negativeBalanceBarringDate), 22, [{tag,128,43,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 44 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes44,EncLen44} =  case ?RT_BER:cindex(45,Val,oldAccountGroupID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(45,Val,oldAccountGroupID), [{tag,128,44,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 45 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes45,EncLen45} =  case ?RT_BER:cindex(46,Val,oldServiceOfferings) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(46,Val,oldServiceOfferings), [{tag,128,45,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 46 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes46,EncLen46} =  case ?RT_BER:cindex(47,Val,oldCommunityID1) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(47,Val,oldCommunityID1), [{tag,128,46,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 47 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes47,EncLen47} =  case ?RT_BER:cindex(48,Val,oldCommunityID2) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(48,Val,oldCommunityID2), [{tag,128,47,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 48 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes48,EncLen48} =  case ?RT_BER:cindex(49,Val,oldCommunityID3) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(49,Val,oldCommunityID3), [{tag,128,48,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 49 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes49,EncLen49} =  case ?RT_BER:cindex(50,Val,newAccountGroupID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(50,Val,newAccountGroupID), [{tag,128,49,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 50 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes50,EncLen50} =  case ?RT_BER:cindex(51,Val,newServiceOfferings) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(51,Val,newServiceOfferings), [{tag,128,50,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 51 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes51,EncLen51} =  case ?RT_BER:cindex(52,Val,subscriberConvergent) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(52,Val,subscriberConvergent), [{tag,128,51,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 52 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes52,EncLen52} =  case ?RT_BER:cindex(53,Val,newCommunityID1) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(53,Val,newCommunityID1), [{tag,128,52,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 53 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes53,EncLen53} =  case ?RT_BER:cindex(54,Val,newCommunityID2) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(54,Val,newCommunityID2), [{tag,128,53,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 54 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes54,EncLen54} =  case ?RT_BER:cindex(55,Val,newCommunityID3) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(55,Val,newCommunityID3), [{tag,128,54,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 55 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes55,EncLen55} =  case ?RT_BER:cindex(56,Val,counterTypeID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(56,Val,counterTypeID), [{tag,128,55,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 56 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes56,EncLen56} =  case ?RT_BER:cindex(57,Val,totalCounterStartValue) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(57,Val,totalCounterStartValue), [{tag,128,56,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 57 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes57,EncLen57} =  case ?RT_BER:cindex(58,Val,totalCounterDeltaValue) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(58,Val,totalCounterDeltaValue), [{tag,128,57,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 58 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes58,EncLen58} =  case ?RT_BER:cindex(59,Val,periodCounterStartValue) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(59,Val,periodCounterStartValue), [{tag,128,58,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 59 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes59,EncLen59} =  case ?RT_BER:cindex(60,Val,periodCounterDeltaValue) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(60,Val,periodCounterDeltaValue), [{tag,128,59,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 60 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes60,EncLen60} =  case ?RT_BER:cindex(61,Val,deductedAmount) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(61,Val,deductedAmount), 22, [{tag,128,60,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 61 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes61,EncLen61} =  case ?RT_BER:cindex(62,Val,cost) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(62,Val,cost), 22, [{tag,128,61,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 62 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes62,EncLen62} =  case ?RT_BER:cindex(63,Val,costService) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(63,Val,costService), 22, [{tag,128,62,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 63 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes63,EncLen63} =  case ?RT_BER:cindex(64,Val,presentedCost) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(64,Val,presentedCost), 22, [{tag,128,63,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 64 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes64,EncLen64} =  case ?RT_BER:cindex(65,Val,chargingSuccessCode) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(65,Val,chargingSuccessCode) of {_,Enumval66}->Enumval66;_->?RT_BER:cindex(65,Val,chargingSuccessCode) end) of
chargingSucceeded -> ?RT_BER:encode_enumerated(0,[{tag,128,64,'IMPLICIT',32}]);
chargingPerformedAtDifferentCost -> ?RT_BER:encode_enumerated(1,[{tag,128,64,'IMPLICIT',32}]);
chargingPerformedPresentedCostLost -> ?RT_BER:encode_enumerated(2,[{tag,128,64,'IMPLICIT',32}]);
chargingPerformedPartialDeduction -> ?RT_BER:encode_enumerated(3,[{tag,128,64,'IMPLICIT',32}]);
chargingFailed -> ?RT_BER:encode_enumerated(4,[{tag,128,64,'IMPLICIT',32}]);
Enumval67 -> exit({error,{asn1, {enumerated_not_in_range,Enumval67}}})
end
       end,

%%-------------------------------------------------
%% attribute number 65 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes65,EncLen65} =  case ?RT_BER:cindex(66,Val,chargingIndicator) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(66,Val,chargingIndicator), [{tag,128,65,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 66 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes66,EncLen66} =  case ?RT_BER:cindex(67,Val,familyAndFriendsAction) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(67,Val,familyAndFriendsAction) of {_,Enumval69}->Enumval69;_->?RT_BER:cindex(67,Val,familyAndFriendsAction) end) of
set -> ?RT_BER:encode_enumerated(0,[{tag,128,66,'IMPLICIT',32}]);
add -> ?RT_BER:encode_enumerated(1,[{tag,128,66,'IMPLICIT',32}]);
delete -> ?RT_BER:encode_enumerated(2,[{tag,128,66,'IMPLICIT',32}]);
Enumval70 -> exit({error,{asn1, {enumerated_not_in_range,Enumval70}}})
end
       end,

%%-------------------------------------------------
%% attribute number 67 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes67,EncLen67} =  case ?RT_BER:cindex(68,Val,familyAndFriendsNumber) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(68,Val,familyAndFriendsNumber), 22, [{tag,128,67,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 68 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes68,EncLen68} =  case ?RT_BER:cindex(69,Val,familyAndFriendsIndicator) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(69,Val,familyAndFriendsIndicator), [{tag,128,68,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 69 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes69,EncLen69} =  case ?RT_BER:cindex(70,Val,owner) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(70,Val,owner) of {_,Enumval73}->Enumval73;_->?RT_BER:cindex(70,Val,owner) end) of
subscriber -> ?RT_BER:encode_enumerated(1,[{tag,128,69,'IMPLICIT',32}]);
account -> ?RT_BER:encode_enumerated(2,[{tag,128,69,'IMPLICIT',32}]);
Enumval74 -> exit({error,{asn1, {enumerated_not_in_range,Enumval74}}})
end
       end,

%%-------------------------------------------------
%% attribute number 70 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes70,EncLen70} =  case ?RT_BER:cindex(71,Val,accountHomeRegion) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(71,Val,accountHomeRegion), [{tag,128,70,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 71 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes71,EncLen71} =  case ?RT_BER:cindex(72,Val,changedPIN) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(72,Val,changedPIN), [{tag,128,71,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 72 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes72,EncLen72} =  case ?RT_BER:cindex(73,Val,accountUnbarSuppressed) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(73,Val,accountUnbarSuppressed), [{tag,128,72,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 73 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes73,EncLen73} =  case ?RT_BER:cindex(74,Val,adjustmentDedicatedAccounts) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_AccountAdjustment_adjustmentDedicatedAccounts'(?RT_BER:cindex(74,Val,adjustmentDedicatedAccounts), [{tag,128,73,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 74 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes74,EncLen74} =  case ?RT_BER:cindex(75,Val,adjustmentAccumulators) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_AccountAdjustment_adjustmentAccumulators'(?RT_BER:cindex(75,Val,adjustmentAccumulators), [{tag,128,74,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 75 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes75,EncLen75} =  case ?RT_BER:cindex(76,Val,origServiceClassBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(76,Val,origServiceClassBefore), [{tag,128,75,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 76 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes76,EncLen76} =  case ?RT_BER:cindex(77,Val,origServiceClassAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(77,Val,origServiceClassAfter), [{tag,128,76,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 77 with type UTF8String OPTIONAL
%%-------------------------------------------------
   {EncBytes77,EncLen77} =  case ?RT_BER:cindex(78,Val,serviceSessionID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_UTF8_string([], ?RT_BER:cindex(78,Val,serviceSessionID), [{tag,128,77,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 78 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes78,EncLen78} =  case ?RT_BER:cindex(79,Val,duplicatingCDRNode) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(79,Val,duplicatingCDRNode), 22, [{tag,128,78,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 79 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes79,EncLen79} =  case ?RT_BER:cindex(80,Val,aggregatedBalanceBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(80,Val,aggregatedBalanceBefore), 22, [{tag,128,79,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 80 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes80,EncLen80} =  case ?RT_BER:cindex(81,Val,aggregatedBalanceAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(81,Val,aggregatedBalanceAfter), 22, [{tag,128,80,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 81 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes81,EncLen81} =  case ?RT_BER:cindex(82,Val,adjustmentFaFs) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_AccountAdjustment_adjustmentFaFs'(?RT_BER:cindex(82,Val,adjustmentFaFs), [{tag,128,81,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 82 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes82,EncLen82} =  case ?RT_BER:cindex(83,Val,adjustmentOffers) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_AccountAdjustment_adjustmentOffers'(?RT_BER:cindex(83,Val,adjustmentOffers), [{tag,128,82,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 83 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes83,EncLen83} =  case ?RT_BER:cindex(84,Val,lastRecord) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(84,Val,lastRecord), [{tag,128,83,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9, EncBytes10, EncBytes11, EncBytes12, EncBytes13, EncBytes14, EncBytes15, EncBytes16, EncBytes17, EncBytes18, EncBytes19, EncBytes20, EncBytes21, EncBytes22, EncBytes23, EncBytes24, EncBytes25, EncBytes26, EncBytes27, EncBytes28, EncBytes29, EncBytes30, EncBytes31, EncBytes32, EncBytes33, EncBytes34, EncBytes35, EncBytes36, EncBytes37, EncBytes38, EncBytes39, EncBytes40, EncBytes41, EncBytes42, EncBytes43, EncBytes44, EncBytes45, EncBytes46, EncBytes47, EncBytes48, EncBytes49, EncBytes50, EncBytes51, EncBytes52, EncBytes53, EncBytes54, EncBytes55, EncBytes56, EncBytes57, EncBytes58, EncBytes59, EncBytes60, EncBytes61, EncBytes62, EncBytes63, EncBytes64, EncBytes65, EncBytes66, EncBytes67, EncBytes68, EncBytes69, EncBytes70, EncBytes71, EncBytes72, EncBytes73, EncBytes74, EncBytes75, EncBytes76, EncBytes77, EncBytes78, EncBytes79, EncBytes80, EncBytes81, EncBytes82, EncBytes83],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9 + EncLen10 + EncLen11 + EncLen12 + EncLen13 + EncLen14 + EncLen15 + EncLen16 + EncLen17 + EncLen18 + EncLen19 + EncLen20 + EncLen21 + EncLen22 + EncLen23 + EncLen24 + EncLen25 + EncLen26 + EncLen27 + EncLen28 + EncLen29 + EncLen30 + EncLen31 + EncLen32 + EncLen33 + EncLen34 + EncLen35 + EncLen36 + EncLen37 + EncLen38 + EncLen39 + EncLen40 + EncLen41 + EncLen42 + EncLen43 + EncLen44 + EncLen45 + EncLen46 + EncLen47 + EncLen48 + EncLen49 + EncLen50 + EncLen51 + EncLen52 + EncLen53 + EncLen54 + EncLen55 + EncLen56 + EncLen57 + EncLen58 + EncLen59 + EncLen60 + EncLen61 + EncLen62 + EncLen63 + EncLen64 + EncLen65 + EncLen66 + EncLen67 + EncLen68 + EncLen69 + EncLen70 + EncLen71 + EncLen72 + EncLen73 + EncLen74 + EncLen75 + EncLen76 + EncLen77 + EncLen78 + EncLen79 + EncLen80 + EncLen81 + EncLen82 + EncLen83,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).



%%================================
%%  AccountAdjustment_adjustmentDedicatedAccounts
%%================================

'enc_AccountAdjustment_adjustmentDedicatedAccounts'({'AccountAdjustment_adjustmentDedicatedAccounts',Val}, TagIn) ->
   'enc_AccountAdjustment_adjustmentDedicatedAccounts'(Val, TagIn);

'enc_AccountAdjustment_adjustmentDedicatedAccounts'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_AccountAdjustment_adjustmentDedicatedAccounts_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_AccountAdjustment_adjustmentDedicatedAccounts_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_AccountAdjustment_adjustmentDedicatedAccounts_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_AdjustmentDedicatedAccount'(H, []),
   'enc_AccountAdjustment_adjustmentDedicatedAccounts_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_AccountAdjustment_adjustmentDedicatedAccounts'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_AdjustmentDedicatedAccount'/3, [], []).





%%================================
%%  AccountAdjustment_adjustmentAccumulators
%%================================

'enc_AccountAdjustment_adjustmentAccumulators'({'AccountAdjustment_adjustmentAccumulators',Val}, TagIn) ->
   'enc_AccountAdjustment_adjustmentAccumulators'(Val, TagIn);

'enc_AccountAdjustment_adjustmentAccumulators'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_AccountAdjustment_adjustmentAccumulators_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_AccountAdjustment_adjustmentAccumulators_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_AccountAdjustment_adjustmentAccumulators_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_AdjustmentAccumulator'(H, []),
   'enc_AccountAdjustment_adjustmentAccumulators_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_AccountAdjustment_adjustmentAccumulators'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_AdjustmentAccumulator'/3, [], []).





%%================================
%%  AccountAdjustment_adjustmentFaFs
%%================================

'enc_AccountAdjustment_adjustmentFaFs'({'AccountAdjustment_adjustmentFaFs',Val}, TagIn) ->
   'enc_AccountAdjustment_adjustmentFaFs'(Val, TagIn);

'enc_AccountAdjustment_adjustmentFaFs'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_AccountAdjustment_adjustmentFaFs_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_AccountAdjustment_adjustmentFaFs_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_AccountAdjustment_adjustmentFaFs_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_AdjustmentFaF'(H, []),
   'enc_AccountAdjustment_adjustmentFaFs_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_AccountAdjustment_adjustmentFaFs'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_AdjustmentFaF'/3, [], []).





%%================================
%%  AccountAdjustment_adjustmentOffers
%%================================

'enc_AccountAdjustment_adjustmentOffers'({'AccountAdjustment_adjustmentOffers',Val}, TagIn) ->
   'enc_AccountAdjustment_adjustmentOffers'(Val, TagIn);

'enc_AccountAdjustment_adjustmentOffers'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_AccountAdjustment_adjustmentOffers_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_AccountAdjustment_adjustmentOffers_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_AccountAdjustment_adjustmentOffers_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_AdjustmentOffer'(H, []),
   'enc_AccountAdjustment_adjustmentOffers_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_AccountAdjustment_adjustmentOffers'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_AdjustmentOffer'/3, [], []).




'dec_AccountAdjustment'(Bytes, OptOrMand) ->
   'dec_AccountAdjustment'(Bytes, OptOrMand, []).

'dec_AccountAdjustment'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type ENUMERATED
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_enumerated(Bytes2,[],{[{refillCDR,1},{notDefined,2},{linkageOfSubordinateSubscriber,3},{removalOfSubordinateSubscriber,4},{chargedEnquiry,5},{chargedServiceClassChange,6},{notUsed,7},{changedFamilyAndFriendsList,8},{clearedDedicatedAccount,9},{premiumRefill,10},{provisioningUaDa,11}],[]},[{tag,128,1,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_restricted_string(Bytes3,{1,20},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_restricted_string(Bytes4,{1,20},22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = ?RT_BER:decode_restricted_string(Bytes5,{1,30},22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 5 with type IA5String
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = ?RT_BER:decode_restricted_string(Bytes6,{1,30},22,[{tag,128,5,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 6 with type IA5String
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = ?RT_BER:decode_restricted_string(Bytes7,19,22,[{tag,128,6,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 7 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = case Bytes8 of
<<2:2,_:1,7:5,_/binary>> ->
?RT_BER:decode_enumerated(Bytes8,[],[{set,0},{add,1},{subtract,2},{reset,3},{remove,4},{create,5}],[{tag,128,7,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes8, 0 }
end,

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = case Bytes9 of
<<2:2,_:1,8:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes9,{1,17},22,[{tag,128,8,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes9, 0 }
end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = case Bytes10 of
<<2:2,_:1,9:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes10,{1,17},22,[{tag,128,9,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes10, 0 }
end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term10,Bytes12,Rb11} = case Bytes11 of
<<2:2,_:1,10:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes11,{1,17},22,[{tag,128,10,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes11, 0 }
end,

%%-------------------------------------------------
%% attribute number 11 with type INTEGER
%%-------------------------------------------------
   {Term11,Bytes13,Rb12} = ?RT_BER:decode_integer(Bytes12,{0,9999},[{tag,128,11,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 12 with type INTEGER
%%-------------------------------------------------
   {Term12,Bytes14,Rb13} = ?RT_BER:decode_integer(Bytes13,[],[{local,0},{euro,1}],[{tag,128,12,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 13 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term13,Bytes15,Rb14} = case Bytes14 of
<<2:2,_:1,13:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes14,{1,17},22,[{tag,128,13,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes14, 0 }
end,

%%-------------------------------------------------
%% attribute number 14 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term14,Bytes16,Rb15} = case Bytes15 of
<<2:2,_:1,14:5,_/binary>> ->
?RT_BER:decode_integer(Bytes15,[],[{local,0},{euro,1}],[{tag,128,14,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes15, 0 }
end,

%%-------------------------------------------------
%% attribute number 15 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term15,Bytes17,Rb16} = case Bytes16 of
<<2:2,_:1,15:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes16,{1,8},22,[{tag,128,15,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes16, 0 }
end,

%%-------------------------------------------------
%% attribute number 16 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term16,Bytes18,Rb17} = case Bytes17 of
<<2:2,_:1,16:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes17,{1,255},22,[{tag,128,16,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes17, 0 }
end,

%%-------------------------------------------------
%% attribute number 17 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term17,Bytes19,Rb18} = case Bytes18 of
<<2:2,_:1,17:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes18,{1,20},22,[{tag,128,17,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes18, 0 }
end,

%%-------------------------------------------------
%% attribute number 18 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term18,Bytes20,Rb19} = case Bytes19 of
<<2:2,_:1,18:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes19,19,22,[{tag,128,18,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes19, 0 }
end,

%%-------------------------------------------------
%% attribute number 19 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term19,Bytes21,Rb20} = case Bytes20 of
<<2:2,_:1,19:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes20,{1,30},22,[{tag,128,19,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes20, 0 }
end,

%%-------------------------------------------------
%% attribute number 20 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term20,Bytes22,Rb21} = case Bytes21 of
<<2:2,_:1,20:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes21,{1,30},22,[{tag,128,20,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes21, 0 }
end,

%%-------------------------------------------------
%% attribute number 21 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term21,Bytes23,Rb22} = case Bytes22 of
<<2:2,_:1,21:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes22,{1,255},22,[{tag,128,21,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes22, 0 }
end,

%%-------------------------------------------------
%% attribute number 22 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term22,Bytes24,Rb23} = case Bytes23 of
<<2:2,_:1,22:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes23,8,22,[{tag,128,22,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes23, 0 }
end,

%%-------------------------------------------------
%% attribute number 23 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term23,Bytes25,Rb24} = case Bytes24 of
<<2:2,_:1,23:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes24,8,22,[{tag,128,23,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes24, 0 }
end,

%%-------------------------------------------------
%% attribute number 24 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term24,Bytes26,Rb25} = case Bytes25 of
<<2:2,_:1,24:5,_/binary>> ->
?RT_BER:decode_integer(Bytes25,{0,1023},[{tag,128,24,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes25, 0 }
end,

%%-------------------------------------------------
%% attribute number 25 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term25,Bytes27,Rb26} = case Bytes26 of
<<2:2,_:1,25:5,_/binary>> ->
?RT_BER:decode_integer(Bytes26,{0,1023},[{tag,128,25,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes26, 0 }
end,

%%-------------------------------------------------
%% attribute number 26 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term26,Bytes28,Rb27} = case Bytes27 of
<<2:2,_:1,26:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes27,8,22,[{tag,128,26,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes27, 0 }
end,

%%-------------------------------------------------
%% attribute number 27 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term27,Bytes29,Rb28} = case Bytes28 of
<<2:2,_:1,27:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes28,8,22,[{tag,128,27,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes28, 0 }
end,

%%-------------------------------------------------
%% attribute number 28 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term28,Bytes30,Rb29} = case Bytes29 of
<<2:2,_:1,28:5,_/binary>> ->
?RT_BER:decode_integer(Bytes29,{0,1023},[{tag,128,28,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes29, 0 }
end,

%%-------------------------------------------------
%% attribute number 29 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term29,Bytes31,Rb30} = case Bytes30 of
<<2:2,_:1,29:5,_/binary>> ->
?RT_BER:decode_integer(Bytes30,{0,1023},[{tag,128,29,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes30, 0 }
end,

%%-------------------------------------------------
%% attribute number 30 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term30,Bytes32,Rb31} = case Bytes31 of
<<2:2,_:1,30:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes31,8,22,[{tag,128,30,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes31, 0 }
end,

%%-------------------------------------------------
%% attribute number 31 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term31,Bytes33,Rb32} = case Bytes32 of
<<2:2,_:1,31:5,31,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes32,8,22,[{tag,128,31,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes32, 0 }
end,

%%-------------------------------------------------
%% attribute number 32 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term32,Bytes34,Rb33} = case Bytes33 of
<<2:2,_:1,31:5,32,_/binary>> ->
?RT_BER:decode_integer(Bytes33,{0,9999},[{tag,128,32,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes33, 0 }
end,

%%-------------------------------------------------
%% attribute number 33 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term33,Bytes35,Rb34} = case Bytes34 of
<<2:2,_:1,31:5,33,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes34,8,22,[{tag,128,33,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes34, 0 }
end,

%%-------------------------------------------------
%% attribute number 34 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term34,Bytes36,Rb35} = case Bytes35 of
<<2:2,_:1,31:5,34,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes35,8,22,[{tag,128,34,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes35, 0 }
end,

%%-------------------------------------------------
%% attribute number 35 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term35,Bytes37,Rb36} = case Bytes36 of
<<2:2,_:1,31:5,35,_/binary>> ->
?RT_BER:decode_integer(Bytes36,{0,9999},[{tag,128,35,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes36, 0 }
end,

%%-------------------------------------------------
%% attribute number 36 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term36,Bytes38,Rb37} = case Bytes37 of
<<2:2,_:1,31:5,36,_/binary>> ->
?RT_BER:decode_integer(Bytes37,{0,9999},[{tag,128,36,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes37, 0 }
end,

%%-------------------------------------------------
%% attribute number 37 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term37,Bytes39,Rb38} = case Bytes38 of
<<2:2,_:1,31:5,37,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes38,8,22,[{tag,128,37,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes38, 0 }
end,

%%-------------------------------------------------
%% attribute number 38 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term38,Bytes40,Rb39} = case Bytes39 of
<<2:2,_:1,31:5,38,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes39,19,22,[{tag,128,38,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes39, 0 }
end,

%%-------------------------------------------------
%% attribute number 39 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term39,Bytes41,Rb40} = case Bytes40 of
<<2:2,_:1,31:5,39,_/binary>> ->
?RT_BER:decode_integer(Bytes40,{1,4},[{tag,128,39,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes40, 0 }
end,

%%-------------------------------------------------
%% attribute number 40 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term40,Bytes42,Rb41} = case Bytes41 of
<<2:2,_:1,31:5,40,_/binary>> ->
?RT_BER:decode_integer(Bytes41,{1,4},[{tag,128,40,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes41, 0 }
end,

%%-------------------------------------------------
%% attribute number 41 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term41,Bytes43,Rb42} = case Bytes42 of
<<2:2,_:1,31:5,41,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes42,{1,4},22,[{tag,128,41,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes42, 0 }
end,

%%-------------------------------------------------
%% attribute number 42 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term42,Bytes44,Rb43} = case Bytes43 of
<<2:2,_:1,31:5,42,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes43,{1,4},22,[{tag,128,42,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes43, 0 }
end,

%%-------------------------------------------------
%% attribute number 43 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term43,Bytes45,Rb44} = case Bytes44 of
<<2:2,_:1,31:5,43,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes44,8,22,[{tag,128,43,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes44, 0 }
end,

%%-------------------------------------------------
%% attribute number 44 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term44,Bytes46,Rb45} = case Bytes45 of
<<2:2,_:1,31:5,44,_/binary>> ->
?RT_BER:decode_integer(Bytes45,{0,2147483647},[{tag,128,44,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes45, 0 }
end,

%%-------------------------------------------------
%% attribute number 45 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term45,Bytes47,Rb46} = case Bytes46 of
<<2:2,_:1,31:5,45,_/binary>> ->
?RT_BER:decode_integer(Bytes46,{0,2147483647},[{tag,128,45,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes46, 0 }
end,

%%-------------------------------------------------
%% attribute number 46 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term46,Bytes48,Rb47} = case Bytes47 of
<<2:2,_:1,31:5,46,_/binary>> ->
?RT_BER:decode_integer(Bytes47,{0,9999999},[{tag,128,46,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes47, 0 }
end,

%%-------------------------------------------------
%% attribute number 47 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term47,Bytes49,Rb48} = case Bytes48 of
<<2:2,_:1,31:5,47,_/binary>> ->
?RT_BER:decode_integer(Bytes48,{0,9999999},[{tag,128,47,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes48, 0 }
end,

%%-------------------------------------------------
%% attribute number 48 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term48,Bytes50,Rb49} = case Bytes49 of
<<2:2,_:1,31:5,48,_/binary>> ->
?RT_BER:decode_integer(Bytes49,{0,9999999},[{tag,128,48,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes49, 0 }
end,

%%-------------------------------------------------
%% attribute number 49 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term49,Bytes51,Rb50} = case Bytes50 of
<<2:2,_:1,31:5,49,_/binary>> ->
?RT_BER:decode_integer(Bytes50,{0,2147483647},[{tag,128,49,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes50, 0 }
end,

%%-------------------------------------------------
%% attribute number 50 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term50,Bytes52,Rb51} = case Bytes51 of
<<2:2,_:1,31:5,50,_/binary>> ->
?RT_BER:decode_integer(Bytes51,{0,2147483647},[{tag,128,50,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes51, 0 }
end,

%%-------------------------------------------------
%% attribute number 51 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term51,Bytes53,Rb52} = case Bytes52 of
<<2:2,_:1,31:5,51,_/binary>> ->
?RT_BER:decode_boolean(Bytes52,[{tag,128,51,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes52, 0 }
end,

%%-------------------------------------------------
%% attribute number 52 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term52,Bytes54,Rb53} = case Bytes53 of
<<2:2,_:1,31:5,52,_/binary>> ->
?RT_BER:decode_integer(Bytes53,{0,9999999},[{tag,128,52,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes53, 0 }
end,

%%-------------------------------------------------
%% attribute number 53 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term53,Bytes55,Rb54} = case Bytes54 of
<<2:2,_:1,31:5,53,_/binary>> ->
?RT_BER:decode_integer(Bytes54,{0,9999999},[{tag,128,53,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes54, 0 }
end,

%%-------------------------------------------------
%% attribute number 54 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term54,Bytes56,Rb55} = case Bytes55 of
<<2:2,_:1,31:5,54,_/binary>> ->
?RT_BER:decode_integer(Bytes55,{0,9999999},[{tag,128,54,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes55, 0 }
end,

%%-------------------------------------------------
%% attribute number 55 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term55,Bytes57,Rb56} = case Bytes56 of
<<2:2,_:1,31:5,55,_/binary>> ->
?RT_BER:decode_integer(Bytes56,[],[{tag,128,55,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes56, 0 }
end,

%%-------------------------------------------------
%% attribute number 56 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term56,Bytes58,Rb57} = case Bytes57 of
<<2:2,_:1,31:5,56,_/binary>> ->
?RT_BER:decode_integer(Bytes57,{0,127},[{tag,128,56,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes57, 0 }
end,

%%-------------------------------------------------
%% attribute number 57 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term57,Bytes59,Rb58} = case Bytes58 of
<<2:2,_:1,31:5,57,_/binary>> ->
?RT_BER:decode_integer(Bytes58,{-127,127},[{tag,128,57,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes58, 0 }
end,

%%-------------------------------------------------
%% attribute number 58 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term58,Bytes60,Rb59} = case Bytes59 of
<<2:2,_:1,31:5,58,_/binary>> ->
?RT_BER:decode_integer(Bytes59,{0,127},[{tag,128,58,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes59, 0 }
end,

%%-------------------------------------------------
%% attribute number 59 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term59,Bytes61,Rb60} = case Bytes60 of
<<2:2,_:1,31:5,59,_/binary>> ->
?RT_BER:decode_integer(Bytes60,{-127,127},[{tag,128,59,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes60, 0 }
end,

%%-------------------------------------------------
%% attribute number 60 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term60,Bytes62,Rb61} = case Bytes61 of
<<2:2,_:1,31:5,60,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes61,{1,17},22,[{tag,128,60,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes61, 0 }
end,

%%-------------------------------------------------
%% attribute number 61 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term61,Bytes63,Rb62} = case Bytes62 of
<<2:2,_:1,31:5,61,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes62,{1,17},22,[{tag,128,61,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes62, 0 }
end,

%%-------------------------------------------------
%% attribute number 62 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term62,Bytes64,Rb63} = case Bytes63 of
<<2:2,_:1,31:5,62,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes63,{1,17},22,[{tag,128,62,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes63, 0 }
end,

%%-------------------------------------------------
%% attribute number 63 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term63,Bytes65,Rb64} = case Bytes64 of
<<2:2,_:1,31:5,63,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes64,{1,17},22,[{tag,128,63,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes64, 0 }
end,

%%-------------------------------------------------
%% attribute number 64 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term64,Bytes66,Rb65} = case Bytes65 of
<<2:2,_:1,31:5,64,_/binary>> ->
?RT_BER:decode_enumerated(Bytes65,[],[{chargingSucceeded,0},{chargingPerformedAtDifferentCost,1},{chargingPerformedPresentedCostLost,2},{chargingPerformedPartialDeduction,3},{chargingFailed,4}],[{tag,128,64,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes65, 0 }
end,

%%-------------------------------------------------
%% attribute number 65 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term65,Bytes67,Rb66} = case Bytes66 of
<<2:2,_:1,31:5,65,_/binary>> ->
?RT_BER:decode_integer(Bytes66,[],[{tag,128,65,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes66, 0 }
end,

%%-------------------------------------------------
%% attribute number 66 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term66,Bytes68,Rb67} = case Bytes67 of
<<2:2,_:1,31:5,66,_/binary>> ->
?RT_BER:decode_enumerated(Bytes67,[],[{set,0},{add,1},{delete,2}],[{tag,128,66,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes67, 0 }
end,

%%-------------------------------------------------
%% attribute number 67 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term67,Bytes69,Rb68} = case Bytes68 of
<<2:2,_:1,31:5,67,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes68,{1,30},22,[{tag,128,67,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes68, 0 }
end,

%%-------------------------------------------------
%% attribute number 68 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term68,Bytes70,Rb69} = case Bytes69 of
<<2:2,_:1,31:5,68,_/binary>> ->
?RT_BER:decode_integer(Bytes69,{1,65535},[{tag,128,68,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes69, 0 }
end,

%%-------------------------------------------------
%% attribute number 69 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term69,Bytes71,Rb70} = case Bytes70 of
<<2:2,_:1,31:5,69,_/binary>> ->
?RT_BER:decode_enumerated(Bytes70,[],[{subscriber,1},{account,2}],[{tag,128,69,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes70, 0 }
end,

%%-------------------------------------------------
%% attribute number 70 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term70,Bytes72,Rb71} = case Bytes71 of
<<2:2,_:1,31:5,70,_/binary>> ->
?RT_BER:decode_integer(Bytes71,{0,999},[{tag,128,70,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes71, 0 }
end,

%%-------------------------------------------------
%% attribute number 71 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term71,Bytes73,Rb72} = case Bytes72 of
<<2:2,_:1,31:5,71,_/binary>> ->
?RT_BER:decode_boolean(Bytes72,[{tag,128,71,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes72, 0 }
end,

%%-------------------------------------------------
%% attribute number 72 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term72,Bytes74,Rb73} = case Bytes73 of
<<2:2,_:1,31:5,72,_/binary>> ->
?RT_BER:decode_boolean(Bytes73,[{tag,128,72,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes73, 0 }
end,

%%-------------------------------------------------
%% attribute number 73 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term73,Bytes75,Rb74} = case Bytes74 of
<<2:2,_:1,31:5,73,_/binary>> ->
'dec_AccountAdjustment_adjustmentDedicatedAccounts'(Bytes74, opt_or_default, [{tag,128,73,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes74, 0 }
end,

%%-------------------------------------------------
%% attribute number 74 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term74,Bytes76,Rb75} = case Bytes75 of
<<2:2,_:1,31:5,74,_/binary>> ->
'dec_AccountAdjustment_adjustmentAccumulators'(Bytes75, opt_or_default, [{tag,128,74,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes75, 0 }
end,

%%-------------------------------------------------
%% attribute number 75 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term75,Bytes77,Rb76} = case Bytes76 of
<<2:2,_:1,31:5,75,_/binary>> ->
?RT_BER:decode_integer(Bytes76,{0,9999},[{tag,128,75,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes76, 0 }
end,

%%-------------------------------------------------
%% attribute number 76 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term76,Bytes78,Rb77} = case Bytes77 of
<<2:2,_:1,31:5,76,_/binary>> ->
?RT_BER:decode_integer(Bytes77,{0,9999},[{tag,128,76,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes77, 0 }
end,

%%-------------------------------------------------
%% attribute number 77 with type UTF8String OPTIONAL
%%-------------------------------------------------
   {Term77,Bytes79,Rb78} = case Bytes78 of
<<2:2,_:1,31:5,77,_/binary>> ->
?RT_BER:decode_UTF8_string(Bytes78,[{tag,128,77,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes78, 0 }
end,

%%-------------------------------------------------
%% attribute number 78 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term78,Bytes80,Rb79} = case Bytes79 of
<<2:2,_:1,31:5,78,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes79,{1,8},22,[{tag,128,78,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes79, 0 }
end,

%%-------------------------------------------------
%% attribute number 79 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term79,Bytes81,Rb80} = case Bytes80 of
<<2:2,_:1,31:5,79,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes80,{1,17},22,[{tag,128,79,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes80, 0 }
end,

%%-------------------------------------------------
%% attribute number 80 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term80,Bytes82,Rb81} = case Bytes81 of
<<2:2,_:1,31:5,80,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes81,{1,17},22,[{tag,128,80,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes81, 0 }
end,

%%-------------------------------------------------
%% attribute number 81 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term81,Bytes83,Rb82} = case Bytes82 of
<<2:2,_:1,31:5,81,_/binary>> ->
'dec_AccountAdjustment_adjustmentFaFs'(Bytes82, opt_or_default, [{tag,128,81,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes82, 0 }
end,

%%-------------------------------------------------
%% attribute number 82 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term82,Bytes84,Rb83} = case Bytes83 of
<<2:2,_:1,31:5,82,_/binary>> ->
'dec_AccountAdjustment_adjustmentOffers'(Bytes83, opt_or_default, [{tag,128,82,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes83, 0 }
end,

%%-------------------------------------------------
%% attribute number 83 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term83,Bytes85,Rb84} = case Bytes84 of
<<2:2,_:1,31:5,83,_/binary>> ->
?RT_BER:decode_boolean(Bytes84,[{tag,128,83,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes84, 0 }
end,

   {Bytes86,Rb85} = ?RT_BER:restbytes2(RemBytes, Bytes85,ext),
   {{'AccountAdjustment', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9, Term10, Term11, Term12, Term13, Term14, Term15, Term16, Term17, Term18, Term19, Term20, Term21, Term22, Term23, Term24, Term25, Term26, Term27, Term28, Term29, Term30, Term31, Term32, Term33, Term34, Term35, Term36, Term37, Term38, Term39, Term40, Term41, Term42, Term43, Term44, Term45, Term46, Term47, Term48, Term49, Term50, Term51, Term52, Term53, Term54, Term55, Term56, Term57, Term58, Term59, Term60, Term61, Term62, Term63, Term64, Term65, Term66, Term67, Term68, Term69, Term70, Term71, Term72, Term73, Term74, Term75, Term76, Term77, Term78, Term79, Term80, Term81, Term82, Term83}, Bytes86, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11+Rb12+Rb13+Rb14+Rb15+Rb16+Rb17+Rb18+Rb19+Rb20+Rb21+Rb22+Rb23+Rb24+Rb25+Rb26+Rb27+Rb28+Rb29+Rb30+Rb31+Rb32+Rb33+Rb34+Rb35+Rb36+Rb37+Rb38+Rb39+Rb40+Rb41+Rb42+Rb43+Rb44+Rb45+Rb46+Rb47+Rb48+Rb49+Rb50+Rb51+Rb52+Rb53+Rb54+Rb55+Rb56+Rb57+Rb58+Rb59+Rb60+Rb61+Rb62+Rb63+Rb64+Rb65+Rb66+Rb67+Rb68+Rb69+Rb70+Rb71+Rb72+Rb73+Rb74+Rb75+Rb76+Rb77+Rb78+Rb79+Rb80+Rb81+Rb82+Rb83+Rb84+Rb85}.


%%================================
%%  NegativeBalance
%%================================
'enc_NegativeBalance'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(2,Val,accountNumber), 22, [{tag,128,1,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {EncBytes2,EncLen2} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(3,Val,accountBalanceBefore), 22, [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,accountBalanceAfter), 22, [{tag,128,3,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {EncBytes4,EncLen4} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,timeStamp), 22, [{tag,128,4,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes5,EncLen5} =  case ?RT_BER:cindex(6,Val,sdpID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,sdpID), 22, [{tag,128,5,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes6,EncLen6} =  case ?RT_BER:cindex(7,Val,cdrID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(7,Val,cdrID), 22, [{tag,128,6,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 7 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes7,EncLen7} =  case ?RT_BER:cindex(8,Val,subscriberConvergent) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(8,Val,subscriberConvergent), [{tag,128,7,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes8,EncLen8} =  case ?RT_BER:cindex(9,Val,aggregatedBalanceBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(9,Val,aggregatedBalanceBefore), 22, [{tag,128,8,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes9,EncLen9} =  case ?RT_BER:cindex(10,Val,aggregatedBalanceAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(10,Val,aggregatedBalanceAfter), 22, [{tag,128,9,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 10 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes10,EncLen10} =  case ?RT_BER:cindex(11,Val,aggregatedBalanceDedicatedAccounts) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_NegativeBalance_aggregatedBalanceDedicatedAccounts'(?RT_BER:cindex(11,Val,aggregatedBalanceDedicatedAccounts), [{tag,128,10,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9, EncBytes10],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9 + EncLen10,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).



%%================================
%%  NegativeBalance_aggregatedBalanceDedicatedAccounts
%%================================

'enc_NegativeBalance_aggregatedBalanceDedicatedAccounts'({'NegativeBalance_aggregatedBalanceDedicatedAccounts',Val}, TagIn) ->
   'enc_NegativeBalance_aggregatedBalanceDedicatedAccounts'(Val, TagIn);

'enc_NegativeBalance_aggregatedBalanceDedicatedAccounts'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_NegativeBalance_aggregatedBalanceDedicatedAccounts_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_NegativeBalance_aggregatedBalanceDedicatedAccounts_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_NegativeBalance_aggregatedBalanceDedicatedAccounts_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_AggregatedBalanceDedicatedAccount'(H, []),
   'enc_NegativeBalance_aggregatedBalanceDedicatedAccounts_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_NegativeBalance_aggregatedBalanceDedicatedAccounts'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_AggregatedBalanceDedicatedAccount'/3, [], []).




'dec_NegativeBalance'(Bytes, OptOrMand) ->
   'dec_NegativeBalance'(Bytes, OptOrMand, []).

'dec_NegativeBalance'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_restricted_string(Bytes2,{1,30},22,[{tag,128,1,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_restricted_string(Bytes3,{1,17},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_restricted_string(Bytes4,{1,17},22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = ?RT_BER:decode_restricted_string(Bytes5,19,22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = case Bytes6 of
<<2:2,_:1,5:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes6,{1,20},22,[{tag,128,5,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes6, 0 }
end,

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = case Bytes7 of
<<2:2,_:1,6:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes7,{1,20},22,[{tag,128,6,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes7, 0 }
end,

%%-------------------------------------------------
%% attribute number 7 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = case Bytes8 of
<<2:2,_:1,7:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes8,[{tag,128,7,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes8, 0 }
end,

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = case Bytes9 of
<<2:2,_:1,8:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes9,{1,17},22,[{tag,128,8,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes9, 0 }
end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = case Bytes10 of
<<2:2,_:1,9:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes10,{1,17},22,[{tag,128,9,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes10, 0 }
end,

%%-------------------------------------------------
%% attribute number 10 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term10,Bytes12,Rb11} = case Bytes11 of
<<2:2,_:1,10:5,_/binary>> ->
'dec_NegativeBalance_aggregatedBalanceDedicatedAccounts'(Bytes11, opt_or_default, [{tag,128,10,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes11, 0 }
end,

   {Bytes13,Rb12} = ?RT_BER:restbytes2(RemBytes, Bytes12,ext),
   {{'NegativeBalance', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9, Term10}, Bytes13, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11+Rb12}.


%%================================
%%  BonusAdjustment
%%================================
'enc_BonusAdjustment'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(2,Val,sdpID), 22, [{tag,128,1,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {EncBytes2,EncLen2} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(3,Val,cdrID), 22, [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,accountNumber), 22, [{tag,128,3,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {EncBytes4,EncLen4} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,subscriberNumber), 22, [{tag,128,4,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 5 with type IA5String
%%-------------------------------------------------
   {EncBytes5,EncLen5} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,bonusTimeStamp), 22, [{tag,128,5,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 6 with type INTEGER
%%-------------------------------------------------
   {EncBytes6,EncLen6} = ?RT_BER:encode_integer([], ?RT_BER:cindex(7,Val,currencyType), [{local,0},{euro,1}], [{tag,128,6,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 7 with type INTEGER
%%-------------------------------------------------
   {EncBytes7,EncLen7} = ?RT_BER:encode_integer([], ?RT_BER:cindex(8,Val,serviceClassId), [{tag,128,7,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes8,EncLen8} =  case ?RT_BER:cindex(9,Val,accountBalanceBeforeBonus) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(9,Val,accountBalanceBeforeBonus), 22, [{tag,128,8,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes9,EncLen9} =  case ?RT_BER:cindex(10,Val,accountBalanceAfterBonus) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(10,Val,accountBalanceAfterBonus), 22, [{tag,128,9,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes10,EncLen10} =  case ?RT_BER:cindex(11,Val,bonusAmount) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(11,Val,bonusAmount), 22, [{tag,128,10,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 11 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes11,EncLen11} =  case ?RT_BER:cindex(12,Val,subscriberConvergent) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(12,Val,subscriberConvergent), [{tag,128,11,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 12 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes12,EncLen12} =  case ?RT_BER:cindex(13,Val,accountGroupID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(13,Val,accountGroupID), [{tag,128,12,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 13 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes13,EncLen13} =  case ?RT_BER:cindex(14,Val,serviceOfferings) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(14,Val,serviceOfferings), [{tag,128,13,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 14 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes14,EncLen14} =  case ?RT_BER:cindex(15,Val,bonusDedicatedAccounts) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_BonusAdjustment_bonusDedicatedAccounts'(?RT_BER:cindex(15,Val,bonusDedicatedAccounts), [{tag,128,14,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 15 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes15,EncLen15} =  case ?RT_BER:cindex(16,Val,bonusAccumulators) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_BonusAdjustment_bonusAccumulators'(?RT_BER:cindex(16,Val,bonusAccumulators), [{tag,128,15,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 16   External SDPOUTPUTCDR:LifeCycleInformation OPTIONAL
%%-------------------------------------------------
   {EncBytes16,EncLen16} =  case ?RT_BER:cindex(17,Val,lifeCycleInformation) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_LifeCycleInformation'(?RT_BER:cindex(17,Val,lifeCycleInformation), [{tag,128,16,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9, EncBytes10, EncBytes11, EncBytes12, EncBytes13, EncBytes14, EncBytes15, EncBytes16],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9 + EncLen10 + EncLen11 + EncLen12 + EncLen13 + EncLen14 + EncLen15 + EncLen16,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).



%%================================
%%  BonusAdjustment_bonusDedicatedAccounts
%%================================

'enc_BonusAdjustment_bonusDedicatedAccounts'({'BonusAdjustment_bonusDedicatedAccounts',Val}, TagIn) ->
   'enc_BonusAdjustment_bonusDedicatedAccounts'(Val, TagIn);

'enc_BonusAdjustment_bonusDedicatedAccounts'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_BonusAdjustment_bonusDedicatedAccounts_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_BonusAdjustment_bonusDedicatedAccounts_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_BonusAdjustment_bonusDedicatedAccounts_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_BonusDedicatedAccount'(H, []),
   'enc_BonusAdjustment_bonusDedicatedAccounts_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_BonusAdjustment_bonusDedicatedAccounts'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_BonusDedicatedAccount'/3, [], []).





%%================================
%%  BonusAdjustment_bonusAccumulators
%%================================

'enc_BonusAdjustment_bonusAccumulators'({'BonusAdjustment_bonusAccumulators',Val}, TagIn) ->
   'enc_BonusAdjustment_bonusAccumulators'(Val, TagIn);

'enc_BonusAdjustment_bonusAccumulators'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_BonusAdjustment_bonusAccumulators_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_BonusAdjustment_bonusAccumulators_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_BonusAdjustment_bonusAccumulators_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_BonusAccumulator'(H, []),
   'enc_BonusAdjustment_bonusAccumulators_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_BonusAdjustment_bonusAccumulators'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_BonusAccumulator'/3, [], []).




'dec_BonusAdjustment'(Bytes, OptOrMand) ->
   'dec_BonusAdjustment'(Bytes, OptOrMand, []).

'dec_BonusAdjustment'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_restricted_string(Bytes2,{1,20},22,[{tag,128,1,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_restricted_string(Bytes3,{1,20},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_restricted_string(Bytes4,{1,30},22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = ?RT_BER:decode_restricted_string(Bytes5,{1,30},22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 5 with type IA5String
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = ?RT_BER:decode_restricted_string(Bytes6,19,22,[{tag,128,5,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 6 with type INTEGER
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = ?RT_BER:decode_integer(Bytes7,[],[{local,0},{euro,1}],[{tag,128,6,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 7 with type INTEGER
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = ?RT_BER:decode_integer(Bytes8,{0,9999},[{tag,128,7,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = case Bytes9 of
<<2:2,_:1,8:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes9,{1,17},22,[{tag,128,8,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes9, 0 }
end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = case Bytes10 of
<<2:2,_:1,9:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes10,{1,17},22,[{tag,128,9,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes10, 0 }
end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term10,Bytes12,Rb11} = case Bytes11 of
<<2:2,_:1,10:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes11,{1,17},22,[{tag,128,10,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes11, 0 }
end,

%%-------------------------------------------------
%% attribute number 11 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term11,Bytes13,Rb12} = case Bytes12 of
<<2:2,_:1,11:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes12,[{tag,128,11,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes12, 0 }
end,

%%-------------------------------------------------
%% attribute number 12 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term12,Bytes14,Rb13} = case Bytes13 of
<<2:2,_:1,12:5,_/binary>> ->
?RT_BER:decode_integer(Bytes13,{0,2147483647},[{tag,128,12,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes13, 0 }
end,

%%-------------------------------------------------
%% attribute number 13 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term13,Bytes15,Rb14} = case Bytes14 of
<<2:2,_:1,13:5,_/binary>> ->
?RT_BER:decode_integer(Bytes14,{0,2147483647},[{tag,128,13,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes14, 0 }
end,

%%-------------------------------------------------
%% attribute number 14 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term14,Bytes16,Rb15} = case Bytes15 of
<<2:2,_:1,14:5,_/binary>> ->
'dec_BonusAdjustment_bonusDedicatedAccounts'(Bytes15, opt_or_default, [{tag,128,14,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes15, 0 }
end,

%%-------------------------------------------------
%% attribute number 15 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term15,Bytes17,Rb16} = case Bytes16 of
<<2:2,_:1,15:5,_/binary>> ->
'dec_BonusAdjustment_bonusAccumulators'(Bytes16, opt_or_default, [{tag,128,15,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes16, 0 }
end,

%%-------------------------------------------------
%% attribute number 16   External SDPOUTPUTCDR:LifeCycleInformation OPTIONAL
%%-------------------------------------------------
   {Term16,Bytes18,Rb17} = case Bytes17 of
<<2:2,_:1,16:5,_/binary>> ->
'dec_LifeCycleInformation'(Bytes17, opt_or_default, [{tag,128,16,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes17, 0 }
end,

   {Bytes19,Rb18} = ?RT_BER:restbytes2(RemBytes, Bytes18,ext),
   {{'BonusAdjustment', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9, Term10, Term11, Term12, Term13, Term14, Term15, Term16}, Bytes19, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11+Rb12+Rb13+Rb14+Rb15+Rb16+Rb17+Rb18}.


%%================================
%%  ServiceFeeDeduction
%%================================
'enc_ServiceFeeDeduction'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(2,Val,sdpID), 22, [{tag,128,1,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {EncBytes2,EncLen2} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(3,Val,cdrID), 22, [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,originNodeType), 22, [{tag,128,3,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {EncBytes4,EncLen4} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,timeStamp), 22, [{tag,128,4,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 5 with type IA5String
%%-------------------------------------------------
   {EncBytes5,EncLen5} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,accountNumber), 22, [{tag,128,5,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 6 with type IA5String
%%-------------------------------------------------
   {EncBytes6,EncLen6} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(7,Val,serviceFeeAmount), 22, [{tag,128,6,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 7 with type ENUMERATED
%%-------------------------------------------------
   {EncBytes7,EncLen7} = case (case ?RT_BER:cindex(8,Val,successCode) of {_,Enumval7}->Enumval7;_->?RT_BER:cindex(8,Val,successCode) end) of
ok -> ?RT_BER:encode_enumerated(1,[{tag,128,7,'IMPLICIT',32}]);
okServiceExpired -> ?RT_BER:encode_enumerated(2,[{tag,128,7,'IMPLICIT',32}]);
okServiceClassChange -> ?RT_BER:encode_enumerated(3,[{tag,128,7,'IMPLICIT',32}]);
okNoAction -> ?RT_BER:encode_enumerated(4,[{tag,128,7,'IMPLICIT',32}]);
nokServiceClassChange -> ?RT_BER:encode_enumerated(5,[{tag,128,7,'IMPLICIT',32}]);
okFirstDeductionSuppressed -> ?RT_BER:encode_enumerated(6,[{tag,128,7,'IMPLICIT',32}]);
okServiceDeactivated -> ?RT_BER:encode_enumerated(7,[{tag,128,7,'IMPLICIT',32}]);
serviceFeeTypeDisconnectedDebtCleared -> ?RT_BER:encode_enumerated(8,[{tag,128,7,'IMPLICIT',32}]);
partialDeductionWhenAccumulatedDeduction -> ?RT_BER:encode_enumerated(9,[{tag,128,7,'IMPLICIT',32}]);
Enumval8 -> exit({error,{asn1, {enumerated_not_in_range,Enumval8}}})
end,

%%-------------------------------------------------
%% attribute number 8 with type INTEGER
%%-------------------------------------------------
   {EncBytes8,EncLen8} = ?RT_BER:encode_integer([], ?RT_BER:cindex(9,Val,oldServiceClass), [{tag,128,8,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 9 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes9,EncLen9} =  case ?RT_BER:cindex(10,Val,newServiceClass) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(10,Val,newServiceClass), [{tag,128,9,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 10 with type INTEGER
%%-------------------------------------------------
   {EncBytes10,EncLen10} = ?RT_BER:encode_integer([], ?RT_BER:cindex(11,Val,currencyType), [{local,0},{euro,1}], [{tag,128,10,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 11 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes11,EncLen11} =  case ?RT_BER:cindex(12,Val,servFeeExpDateBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(12,Val,servFeeExpDateBefore), 22, [{tag,128,11,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 12 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes12,EncLen12} =  case ?RT_BER:cindex(13,Val,servFeeExpDateAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(13,Val,servFeeExpDateAfter), 22, [{tag,128,12,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 13 with type IA5String
%%-------------------------------------------------
   {EncBytes13,EncLen13} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(14,Val,accountFlags), 22, [{tag,128,13,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 14 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes14,EncLen14} =  case ?RT_BER:cindex(15,Val,negativeBalanceBarringDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(15,Val,negativeBalanceBarringDate), 22, [{tag,128,14,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 15 with type IA5String
%%-------------------------------------------------
   {EncBytes15,EncLen15} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(16,Val,balanceAfterDeduction), 22, [{tag,128,15,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 16 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes16,EncLen16} =  case ?RT_BER:cindex(17,Val,lastRecord) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(17,Val,lastRecord), [{tag,128,16,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 17 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes17,EncLen17} =  case ?RT_BER:cindex(18,Val,accountGroupID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(18,Val,accountGroupID), [{tag,128,17,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 18 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes18,EncLen18} =  case ?RT_BER:cindex(19,Val,subscriberConvergent) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(19,Val,subscriberConvergent), [{tag,128,18,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 19 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes19,EncLen19} =  case ?RT_BER:cindex(20,Val,subscriberNumber) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(20,Val,subscriberNumber), 22, [{tag,128,19,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 20 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes20,EncLen20} =  case ?RT_BER:cindex(21,Val,serviceFeeType) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(21,Val,serviceFeeType), 22, [{tag,128,20,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 21 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes21,EncLen21} =  case ?RT_BER:cindex(22,Val,debt) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(22,Val,debt), 22, [{tag,128,21,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 22 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes22,EncLen22} =  case ?RT_BER:cindex(23,Val,subscriberFee) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(23,Val,subscriberFee), 22, [{tag,128,22,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 23 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes23,EncLen23} =  case ?RT_BER:cindex(24,Val,clearedDedicatedAccounts) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_ServiceFeeDeduction_clearedDedicatedAccounts'(?RT_BER:cindex(24,Val,clearedDedicatedAccounts), [{tag,128,23,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 24 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes24,EncLen24} =  case ?RT_BER:cindex(25,Val,clearedAccumulators) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_ServiceFeeDeduction_clearedAccumulators'(?RT_BER:cindex(25,Val,clearedAccumulators), [{tag,128,24,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 25 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes25,EncLen25} =  case ?RT_BER:cindex(26,Val,aggregatedBalanceBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(26,Val,aggregatedBalanceBefore), 22, [{tag,128,25,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 26 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes26,EncLen26} =  case ?RT_BER:cindex(27,Val,aggregatedBalanceAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(27,Val,aggregatedBalanceAfter), 22, [{tag,128,26,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 27 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes27,EncLen27} =  case ?RT_BER:cindex(28,Val,aggregatedBalanceDedicatedAccounts) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_ServiceFeeDeduction_aggregatedBalanceDedicatedAccounts'(?RT_BER:cindex(28,Val,aggregatedBalanceDedicatedAccounts), [{tag,128,27,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 28 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes28,EncLen28} =  case ?RT_BER:cindex(29,Val,removedFaFs) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_ServiceFeeDeduction_removedFaFs'(?RT_BER:cindex(29,Val,removedFaFs), [{tag,128,28,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 29 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes29,EncLen29} =  case ?RT_BER:cindex(30,Val,removedOffers) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_ServiceFeeDeduction_removedOffers'(?RT_BER:cindex(30,Val,removedOffers), [{tag,128,29,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 30 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes30,EncLen30} =  case ?RT_BER:cindex(31,Val,ignoredDebt) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(31,Val,ignoredDebt), 22, [{tag,128,30,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9, EncBytes10, EncBytes11, EncBytes12, EncBytes13, EncBytes14, EncBytes15, EncBytes16, EncBytes17, EncBytes18, EncBytes19, EncBytes20, EncBytes21, EncBytes22, EncBytes23, EncBytes24, EncBytes25, EncBytes26, EncBytes27, EncBytes28, EncBytes29, EncBytes30],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9 + EncLen10 + EncLen11 + EncLen12 + EncLen13 + EncLen14 + EncLen15 + EncLen16 + EncLen17 + EncLen18 + EncLen19 + EncLen20 + EncLen21 + EncLen22 + EncLen23 + EncLen24 + EncLen25 + EncLen26 + EncLen27 + EncLen28 + EncLen29 + EncLen30,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).



%%================================
%%  ServiceFeeDeduction_clearedDedicatedAccounts
%%================================

'enc_ServiceFeeDeduction_clearedDedicatedAccounts'({'ServiceFeeDeduction_clearedDedicatedAccounts',Val}, TagIn) ->
   'enc_ServiceFeeDeduction_clearedDedicatedAccounts'(Val, TagIn);

'enc_ServiceFeeDeduction_clearedDedicatedAccounts'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_ServiceFeeDeduction_clearedDedicatedAccounts_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_ServiceFeeDeduction_clearedDedicatedAccounts_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_ServiceFeeDeduction_clearedDedicatedAccounts_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_ClearedDedicatedAccount'(H, []),
   'enc_ServiceFeeDeduction_clearedDedicatedAccounts_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_ServiceFeeDeduction_clearedDedicatedAccounts'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_ClearedDedicatedAccount'/3, [], []).





%%================================
%%  ServiceFeeDeduction_clearedAccumulators
%%================================

'enc_ServiceFeeDeduction_clearedAccumulators'({'ServiceFeeDeduction_clearedAccumulators',Val}, TagIn) ->
   'enc_ServiceFeeDeduction_clearedAccumulators'(Val, TagIn);

'enc_ServiceFeeDeduction_clearedAccumulators'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_ServiceFeeDeduction_clearedAccumulators_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_ServiceFeeDeduction_clearedAccumulators_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_ServiceFeeDeduction_clearedAccumulators_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_ClearedAccumulator'(H, []),
   'enc_ServiceFeeDeduction_clearedAccumulators_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_ServiceFeeDeduction_clearedAccumulators'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_ClearedAccumulator'/3, [], []).





%%================================
%%  ServiceFeeDeduction_aggregatedBalanceDedicatedAccounts
%%================================

'enc_ServiceFeeDeduction_aggregatedBalanceDedicatedAccounts'({'ServiceFeeDeduction_aggregatedBalanceDedicatedAccounts',Val}, TagIn) ->
   'enc_ServiceFeeDeduction_aggregatedBalanceDedicatedAccounts'(Val, TagIn);

'enc_ServiceFeeDeduction_aggregatedBalanceDedicatedAccounts'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_ServiceFeeDeduction_aggregatedBalanceDedicatedAccounts_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_ServiceFeeDeduction_aggregatedBalanceDedicatedAccounts_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_ServiceFeeDeduction_aggregatedBalanceDedicatedAccounts_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_AggregatedBalanceDedicatedAccount'(H, []),
   'enc_ServiceFeeDeduction_aggregatedBalanceDedicatedAccounts_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_ServiceFeeDeduction_aggregatedBalanceDedicatedAccounts'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_AggregatedBalanceDedicatedAccount'/3, [], []).





%%================================
%%  ServiceFeeDeduction_removedFaFs
%%================================

'enc_ServiceFeeDeduction_removedFaFs'({'ServiceFeeDeduction_removedFaFs',Val}, TagIn) ->
   'enc_ServiceFeeDeduction_removedFaFs'(Val, TagIn);

'enc_ServiceFeeDeduction_removedFaFs'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_ServiceFeeDeduction_removedFaFs_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_ServiceFeeDeduction_removedFaFs_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_ServiceFeeDeduction_removedFaFs_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_RemovedFaF'(H, []),
   'enc_ServiceFeeDeduction_removedFaFs_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_ServiceFeeDeduction_removedFaFs'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_RemovedFaF'/3, [], []).





%%================================
%%  ServiceFeeDeduction_removedOffers
%%================================

'enc_ServiceFeeDeduction_removedOffers'({'ServiceFeeDeduction_removedOffers',Val}, TagIn) ->
   'enc_ServiceFeeDeduction_removedOffers'(Val, TagIn);

'enc_ServiceFeeDeduction_removedOffers'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_ServiceFeeDeduction_removedOffers_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_ServiceFeeDeduction_removedOffers_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_ServiceFeeDeduction_removedOffers_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_RemovedOffer'(H, []),
   'enc_ServiceFeeDeduction_removedOffers_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_ServiceFeeDeduction_removedOffers'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_RemovedOffer'/3, [], []).




'dec_ServiceFeeDeduction'(Bytes, OptOrMand) ->
   'dec_ServiceFeeDeduction'(Bytes, OptOrMand, []).

'dec_ServiceFeeDeduction'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_restricted_string(Bytes2,{1,20},22,[{tag,128,1,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_restricted_string(Bytes3,{1,20},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_restricted_string(Bytes4,{1,8},22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = ?RT_BER:decode_restricted_string(Bytes5,19,22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 5 with type IA5String
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = ?RT_BER:decode_restricted_string(Bytes6,{1,30},22,[{tag,128,5,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 6 with type IA5String
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = ?RT_BER:decode_restricted_string(Bytes7,{1,17},22,[{tag,128,6,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 7 with type ENUMERATED
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = ?RT_BER:decode_enumerated(Bytes8,[],[{ok,1},{okServiceExpired,2},{okServiceClassChange,3},{okNoAction,4},{nokServiceClassChange,5},{okFirstDeductionSuppressed,6},{okServiceDeactivated,7},{serviceFeeTypeDisconnectedDebtCleared,8},{partialDeductionWhenAccumulatedDeduction,9}],[{tag,128,7,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 8 with type INTEGER
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = ?RT_BER:decode_integer(Bytes9,{0,9999},[{tag,128,8,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 9 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = case Bytes10 of
<<2:2,_:1,9:5,_/binary>> ->
?RT_BER:decode_integer(Bytes10,{0,9999},[{tag,128,9,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes10, 0 }
end,

%%-------------------------------------------------
%% attribute number 10 with type INTEGER
%%-------------------------------------------------
   {Term10,Bytes12,Rb11} = ?RT_BER:decode_integer(Bytes11,[],[{local,0},{euro,1}],[{tag,128,10,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 11 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term11,Bytes13,Rb12} = case Bytes12 of
<<2:2,_:1,11:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes12,8,22,[{tag,128,11,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes12, 0 }
end,

%%-------------------------------------------------
%% attribute number 12 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term12,Bytes14,Rb13} = case Bytes13 of
<<2:2,_:1,12:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes13,8,22,[{tag,128,12,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes13, 0 }
end,

%%-------------------------------------------------
%% attribute number 13 with type IA5String
%%-------------------------------------------------
   {Term13,Bytes15,Rb14} = ?RT_BER:decode_restricted_string(Bytes14,8,22,[{tag,128,13,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 14 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term14,Bytes16,Rb15} = case Bytes15 of
<<2:2,_:1,14:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes15,8,22,[{tag,128,14,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes15, 0 }
end,

%%-------------------------------------------------
%% attribute number 15 with type IA5String
%%-------------------------------------------------
   {Term15,Bytes17,Rb16} = ?RT_BER:decode_restricted_string(Bytes16,{1,17},22,[{tag,128,15,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 16 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term16,Bytes18,Rb17} = case Bytes17 of
<<2:2,_:1,16:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes17,[{tag,128,16,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes17, 0 }
end,

%%-------------------------------------------------
%% attribute number 17 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term17,Bytes19,Rb18} = case Bytes18 of
<<2:2,_:1,17:5,_/binary>> ->
?RT_BER:decode_integer(Bytes18,{0,2147483647},[{tag,128,17,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes18, 0 }
end,

%%-------------------------------------------------
%% attribute number 18 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term18,Bytes20,Rb19} = case Bytes19 of
<<2:2,_:1,18:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes19,[{tag,128,18,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes19, 0 }
end,

%%-------------------------------------------------
%% attribute number 19 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term19,Bytes21,Rb20} = case Bytes20 of
<<2:2,_:1,19:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes20,{1,30},22,[{tag,128,19,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes20, 0 }
end,

%%-------------------------------------------------
%% attribute number 20 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term20,Bytes22,Rb21} = case Bytes21 of
<<2:2,_:1,20:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes21,{1,10},22,[{tag,128,20,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes21, 0 }
end,

%%-------------------------------------------------
%% attribute number 21 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term21,Bytes23,Rb22} = case Bytes22 of
<<2:2,_:1,21:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes22,{1,17},22,[{tag,128,21,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes22, 0 }
end,

%%-------------------------------------------------
%% attribute number 22 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term22,Bytes24,Rb23} = case Bytes23 of
<<2:2,_:1,22:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes23,{1,17},22,[{tag,128,22,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes23, 0 }
end,

%%-------------------------------------------------
%% attribute number 23 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term23,Bytes25,Rb24} = case Bytes24 of
<<2:2,_:1,23:5,_/binary>> ->
'dec_ServiceFeeDeduction_clearedDedicatedAccounts'(Bytes24, opt_or_default, [{tag,128,23,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes24, 0 }
end,

%%-------------------------------------------------
%% attribute number 24 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term24,Bytes26,Rb25} = case Bytes25 of
<<2:2,_:1,24:5,_/binary>> ->
'dec_ServiceFeeDeduction_clearedAccumulators'(Bytes25, opt_or_default, [{tag,128,24,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes25, 0 }
end,

%%-------------------------------------------------
%% attribute number 25 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term25,Bytes27,Rb26} = case Bytes26 of
<<2:2,_:1,25:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes26,{1,17},22,[{tag,128,25,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes26, 0 }
end,

%%-------------------------------------------------
%% attribute number 26 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term26,Bytes28,Rb27} = case Bytes27 of
<<2:2,_:1,26:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes27,{1,17},22,[{tag,128,26,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes27, 0 }
end,

%%-------------------------------------------------
%% attribute number 27 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term27,Bytes29,Rb28} = case Bytes28 of
<<2:2,_:1,27:5,_/binary>> ->
'dec_ServiceFeeDeduction_aggregatedBalanceDedicatedAccounts'(Bytes28, opt_or_default, [{tag,128,27,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes28, 0 }
end,

%%-------------------------------------------------
%% attribute number 28 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term28,Bytes30,Rb29} = case Bytes29 of
<<2:2,_:1,28:5,_/binary>> ->
'dec_ServiceFeeDeduction_removedFaFs'(Bytes29, opt_or_default, [{tag,128,28,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes29, 0 }
end,

%%-------------------------------------------------
%% attribute number 29 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term29,Bytes31,Rb30} = case Bytes30 of
<<2:2,_:1,29:5,_/binary>> ->
'dec_ServiceFeeDeduction_removedOffers'(Bytes30, opt_or_default, [{tag,128,29,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes30, 0 }
end,

%%-------------------------------------------------
%% attribute number 30 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term30,Bytes32,Rb31} = case Bytes31 of
<<2:2,_:1,30:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes31,{1,17},22,[{tag,128,30,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes31, 0 }
end,

   {Bytes33,Rb32} = ?RT_BER:restbytes2(RemBytes, Bytes32,ext),
   {{'ServiceFeeDeduction', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9, Term10, Term11, Term12, Term13, Term14, Term15, Term16, Term17, Term18, Term19, Term20, Term21, Term22, Term23, Term24, Term25, Term26, Term27, Term28, Term29, Term30}, Bytes33, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11+Rb12+Rb13+Rb14+Rb15+Rb16+Rb17+Rb18+Rb19+Rb20+Rb21+Rb22+Rb23+Rb24+Rb25+Rb26+Rb27+Rb28+Rb29+Rb30+Rb31+Rb32}.


%%================================
%%  LifeCycleChange
%%================================
'enc_LifeCycleChange'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(2,Val,sdpID), 22, [{tag,128,1,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {EncBytes2,EncLen2} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(3,Val,cdrID), 22, [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,originNodeType), 22, [{tag,128,3,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {EncBytes4,EncLen4} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,timeStamp), 22, [{tag,128,4,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 5 with type IA5String
%%-------------------------------------------------
   {EncBytes5,EncLen5} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,accountNumber), 22, [{tag,128,5,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 6 with type IA5String
%%-------------------------------------------------
   {EncBytes6,EncLen6} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(7,Val,subscriberNumber), 22, [{tag,128,6,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 7 with type INTEGER
%%-------------------------------------------------
   {EncBytes7,EncLen7} = ?RT_BER:encode_integer([], ?RT_BER:cindex(8,Val,serviceClassId), [{tag,128,7,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 8 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes8,EncLen8} =  case ?RT_BER:cindex(9,Val,language) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(9,Val,language), [{tag,128,8,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 9 with type INTEGER
%%-------------------------------------------------
   {EncBytes9,EncLen9} = ?RT_BER:encode_integer([], ?RT_BER:cindex(10,Val,currencyType), [{local,0},{euro,1}], [{tag,128,9,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes10,EncLen10} =  case ?RT_BER:cindex(11,Val,initialAmountAdded) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(11,Val,initialAmountAdded), 22, [{tag,128,10,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 11 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes11,EncLen11} =  case ?RT_BER:cindex(12,Val,initialSupervisionExpDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(12,Val,initialSupervisionExpDate), 22, [{tag,128,11,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 12 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes12,EncLen12} =  case ?RT_BER:cindex(13,Val,initialServiceFeeExpDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(13,Val,initialServiceFeeExpDate), 22, [{tag,128,12,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 13 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes13,EncLen13} =  case ?RT_BER:cindex(14,Val,supervisionExpDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(14,Val,supervisionExpDate), 22, [{tag,128,13,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 14 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes14,EncLen14} =  case ?RT_BER:cindex(15,Val,creditClearancePeriod) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(15,Val,creditClearancePeriod), [{tag,128,14,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 15 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes15,EncLen15} =  case ?RT_BER:cindex(16,Val,servFeeExpDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(16,Val,servFeeExpDate), 22, [{tag,128,15,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 16 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes16,EncLen16} =  case ?RT_BER:cindex(17,Val,serviceRemovalPeriod) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(17,Val,serviceRemovalPeriod), [{tag,128,16,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 17 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes17,EncLen17} =  case ?RT_BER:cindex(18,Val,clearedAccountValue) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(18,Val,clearedAccountValue), 22, [{tag,128,17,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 18 with type IA5String
%%-------------------------------------------------
   {EncBytes18,EncLen18} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(19,Val,accountFlagsBefore), 22, [{tag,128,18,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 19 with type IA5String
%%-------------------------------------------------
   {EncBytes19,EncLen19} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(20,Val,accountFlagsAfter), 22, [{tag,128,19,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 20 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes20,EncLen20} =  case ?RT_BER:cindex(21,Val,activationDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(21,Val,activationDate), 22, [{tag,128,20,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 21 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes21,EncLen21} =  case ?RT_BER:cindex(22,Val,refillUnbarTimeStamp) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(22,Val,refillUnbarTimeStamp), 22, [{tag,128,21,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 22 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes22,EncLen22} =  case ?RT_BER:cindex(23,Val,iVRWelcomeStatus) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(23,Val,iVRWelcomeStatus), [{tag,128,22,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 23 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes23,EncLen23} =  case ?RT_BER:cindex(24,Val,negativeBalanceBarringDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(24,Val,negativeBalanceBarringDate), 22, [{tag,128,23,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 24 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes24,EncLen24} =  case ?RT_BER:cindex(25,Val,promotionPlanID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(25,Val,promotionPlanID), 22, [{tag,128,24,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 25 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes25,EncLen25} =  case ?RT_BER:cindex(26,Val,promotionPlanStartDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(26,Val,promotionPlanStartDate), 22, [{tag,128,25,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 26 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes26,EncLen26} =  case ?RT_BER:cindex(27,Val,promotionPlanEndDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(27,Val,promotionPlanEndDate), 22, [{tag,128,26,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 27 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes27,EncLen27} =  case ?RT_BER:cindex(28,Val,accumulatedRefillCounter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(28,Val,accumulatedRefillCounter), [{tag,128,27,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 28 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes28,EncLen28} =  case ?RT_BER:cindex(29,Val,accumulatedRefillValue) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(29,Val,accumulatedRefillValue), 22, [{tag,128,28,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 29 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes29,EncLen29} =  case ?RT_BER:cindex(30,Val,accumulatedProgressionCounter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(30,Val,accumulatedProgressionCounter), [{tag,128,29,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 30 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes30,EncLen30} =  case ?RT_BER:cindex(31,Val,accumulatedProgressionValue) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(31,Val,accumulatedProgressionValue), 22, [{tag,128,30,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 31 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes31,EncLen31} =  case ?RT_BER:cindex(32,Val,preActReasonCode) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(32,Val,preActReasonCode) of {_,Enumval31}->Enumval31;_->?RT_BER:cindex(32,Val,preActReasonCode) end) of
origInsideHPLMN -> ?RT_BER:encode_enumerated(0,[{tag,128,31,'IMPLICIT',32}]);
origOutsideHPLMNwithCAPv1 -> ?RT_BER:encode_enumerated(1,[{tag,128,31,'IMPLICIT',32}]);
origOutsideHPLMNwithCAPv2 -> ?RT_BER:encode_enumerated(2,[{tag,128,31,'IMPLICIT',32}]);
uSSDCallBack -> ?RT_BER:encode_enumerated(3,[{tag,128,31,'IMPLICIT',32}]);
origOutsideHPLMNwithCAPv3 -> ?RT_BER:encode_enumerated(4,[{tag,128,31,'IMPLICIT',32}]);
firstIVRcall -> ?RT_BER:encode_enumerated(5,[{tag,128,31,'IMPLICIT',32}]);
firstUSSDaccess -> ?RT_BER:encode_enumerated(6,[{tag,128,31,'IMPLICIT',32}]);
firstExpiryDateSet -> ?RT_BER:encode_enumerated(7,[{tag,128,31,'IMPLICIT',32}]);
Enumval32 -> exit({error,{asn1, {enumerated_not_in_range,Enumval32}}})
end
       end,

%%-------------------------------------------------
%% attribute number 32 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes32,EncLen32} =  case ?RT_BER:cindex(33,Val,creditCleared) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(33,Val,creditCleared), [{tag,128,32,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 33 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes33,EncLen33} =  case ?RT_BER:cindex(34,Val,serviceExpired) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(34,Val,serviceExpired), [{tag,128,33,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 34 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes34,EncLen34} =  case ?RT_BER:cindex(35,Val,originOperatorId) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(35,Val,originOperatorId), 22, [{tag,128,34,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 35 with type IA5String
%%-------------------------------------------------
   {EncBytes35,EncLen35} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(36,Val,originNodeId), 22, [{tag,128,35,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 36 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes36,EncLen36} =  case ?RT_BER:cindex(37,Val,origTransactionID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(37,Val,origTransactionID), 22, [{tag,128,36,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 37 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes37,EncLen37} =  case ?RT_BER:cindex(38,Val,origTransactionTimeStamp) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(38,Val,origTransactionTimeStamp), 22, [{tag,128,37,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 38 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes38,EncLen38} =  case ?RT_BER:cindex(39,Val,lastRecord) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(39,Val,lastRecord), [{tag,128,38,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 39 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes39,EncLen39} =  case ?RT_BER:cindex(40,Val,accountGroupID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(40,Val,accountGroupID), [{tag,128,39,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 40 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes40,EncLen40} =  case ?RT_BER:cindex(41,Val,serviceOfferings) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(41,Val,serviceOfferings), [{tag,128,40,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 41 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes41,EncLen41} =  case ?RT_BER:cindex(42,Val,communityID1) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(42,Val,communityID1), [{tag,128,41,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 42 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes42,EncLen42} =  case ?RT_BER:cindex(43,Val,communityID2) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(43,Val,communityID2), [{tag,128,42,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 43 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes43,EncLen43} =  case ?RT_BER:cindex(44,Val,communityID3) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(44,Val,communityID3), [{tag,128,43,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 44 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes44,EncLen44} =  case ?RT_BER:cindex(45,Val,subscriberConvergent) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(45,Val,subscriberConvergent), [{tag,128,44,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 45 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes45,EncLen45} =  case ?RT_BER:cindex(46,Val,initialCreditClearanceGracePeriod) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(46,Val,initialCreditClearanceGracePeriod), [{tag,128,45,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 46 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes46,EncLen46} =  case ?RT_BER:cindex(47,Val,initialServiceRemovalGracePeriod) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(47,Val,initialServiceRemovalGracePeriod), [{tag,128,46,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 47 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes47,EncLen47} =  case ?RT_BER:cindex(48,Val,subscriberCreated) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(48,Val,subscriberCreated), [{tag,128,47,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 48 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes48,EncLen48} =  case ?RT_BER:cindex(49,Val,subscriberDeleted) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(49,Val,subscriberDeleted), [{tag,128,48,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 49 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes49,EncLen49} =  case ?RT_BER:cindex(50,Val,accountHomeRegion) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(50,Val,accountHomeRegion), [{tag,128,49,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 50 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes50,EncLen50} =  case ?RT_BER:cindex(51,Val,disconnectionCode) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(51,Val,disconnectionCode), [{tag,128,50,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 51 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes51,EncLen51} =  case ?RT_BER:cindex(52,Val,clearedDedicatedAccounts) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_LifeCycleChange_clearedDedicatedAccounts'(?RT_BER:cindex(52,Val,clearedDedicatedAccounts), [{tag,128,51,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 52 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes52,EncLen52} =  case ?RT_BER:cindex(53,Val,creditClearedReasonMainAccount) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(53,Val,creditClearedReasonMainAccount) of {_,Enumval52}->Enumval52;_->?RT_BER:cindex(53,Val,creditClearedReasonMainAccount) end) of
serviceClassChange -> ?RT_BER:encode_enumerated(1,[{tag,128,52,'IMPLICIT',32}]);
subscriberDeleted -> ?RT_BER:encode_enumerated(2,[{tag,128,52,'IMPLICIT',32}]);
creditClearancePeriodExpired -> ?RT_BER:encode_enumerated(3,[{tag,128,52,'IMPLICIT',32}]);
dedicatedAccountExpired -> ?RT_BER:encode_enumerated(4,[{tag,128,52,'IMPLICIT',32}]);
other -> ?RT_BER:encode_enumerated(5,[{tag,128,52,'IMPLICIT',32}]);
subDedicatedAccountExpired -> ?RT_BER:encode_enumerated(6,[{tag,128,52,'IMPLICIT',32}]);
offerExpired -> ?RT_BER:encode_enumerated(7,[{tag,128,52,'IMPLICIT',32}]);
fafExpired -> ?RT_BER:encode_enumerated(8,[{tag,128,52,'IMPLICIT',32}]);
Enumval53 -> exit({error,{asn1, {enumerated_not_in_range,Enumval53}}})
end
       end,

%%-------------------------------------------------
%% attribute number 53 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes53,EncLen53} =  case ?RT_BER:cindex(54,Val,clearedAggregatedValue) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(54,Val,clearedAggregatedValue), 22, [{tag,128,53,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 54 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes54,EncLen54} =  case ?RT_BER:cindex(55,Val,removedFaFs) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_LifeCycleChange_removedFaFs'(?RT_BER:cindex(55,Val,removedFaFs), [{tag,128,54,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 55 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes55,EncLen55} =  case ?RT_BER:cindex(56,Val,removedOffers) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_LifeCycleChange_removedOffers'(?RT_BER:cindex(56,Val,removedOffers), [{tag,128,55,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9, EncBytes10, EncBytes11, EncBytes12, EncBytes13, EncBytes14, EncBytes15, EncBytes16, EncBytes17, EncBytes18, EncBytes19, EncBytes20, EncBytes21, EncBytes22, EncBytes23, EncBytes24, EncBytes25, EncBytes26, EncBytes27, EncBytes28, EncBytes29, EncBytes30, EncBytes31, EncBytes32, EncBytes33, EncBytes34, EncBytes35, EncBytes36, EncBytes37, EncBytes38, EncBytes39, EncBytes40, EncBytes41, EncBytes42, EncBytes43, EncBytes44, EncBytes45, EncBytes46, EncBytes47, EncBytes48, EncBytes49, EncBytes50, EncBytes51, EncBytes52, EncBytes53, EncBytes54, EncBytes55],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9 + EncLen10 + EncLen11 + EncLen12 + EncLen13 + EncLen14 + EncLen15 + EncLen16 + EncLen17 + EncLen18 + EncLen19 + EncLen20 + EncLen21 + EncLen22 + EncLen23 + EncLen24 + EncLen25 + EncLen26 + EncLen27 + EncLen28 + EncLen29 + EncLen30 + EncLen31 + EncLen32 + EncLen33 + EncLen34 + EncLen35 + EncLen36 + EncLen37 + EncLen38 + EncLen39 + EncLen40 + EncLen41 + EncLen42 + EncLen43 + EncLen44 + EncLen45 + EncLen46 + EncLen47 + EncLen48 + EncLen49 + EncLen50 + EncLen51 + EncLen52 + EncLen53 + EncLen54 + EncLen55,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).



%%================================
%%  LifeCycleChange_clearedDedicatedAccounts
%%================================

'enc_LifeCycleChange_clearedDedicatedAccounts'({'LifeCycleChange_clearedDedicatedAccounts',Val}, TagIn) ->
   'enc_LifeCycleChange_clearedDedicatedAccounts'(Val, TagIn);

'enc_LifeCycleChange_clearedDedicatedAccounts'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_LifeCycleChange_clearedDedicatedAccounts_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_LifeCycleChange_clearedDedicatedAccounts_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_LifeCycleChange_clearedDedicatedAccounts_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_ClearedDedicatedAccount'(H, []),
   'enc_LifeCycleChange_clearedDedicatedAccounts_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_LifeCycleChange_clearedDedicatedAccounts'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_ClearedDedicatedAccount'/3, [], []).





%%================================
%%  LifeCycleChange_removedFaFs
%%================================

'enc_LifeCycleChange_removedFaFs'({'LifeCycleChange_removedFaFs',Val}, TagIn) ->
   'enc_LifeCycleChange_removedFaFs'(Val, TagIn);

'enc_LifeCycleChange_removedFaFs'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_LifeCycleChange_removedFaFs_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_LifeCycleChange_removedFaFs_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_LifeCycleChange_removedFaFs_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_RemovedFaF'(H, []),
   'enc_LifeCycleChange_removedFaFs_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_LifeCycleChange_removedFaFs'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_RemovedFaF'/3, [], []).





%%================================
%%  LifeCycleChange_removedOffers
%%================================

'enc_LifeCycleChange_removedOffers'({'LifeCycleChange_removedOffers',Val}, TagIn) ->
   'enc_LifeCycleChange_removedOffers'(Val, TagIn);

'enc_LifeCycleChange_removedOffers'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_LifeCycleChange_removedOffers_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_LifeCycleChange_removedOffers_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_LifeCycleChange_removedOffers_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_RemovedOffer'(H, []),
   'enc_LifeCycleChange_removedOffers_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_LifeCycleChange_removedOffers'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_RemovedOffer'/3, [], []).




'dec_LifeCycleChange'(Bytes, OptOrMand) ->
   'dec_LifeCycleChange'(Bytes, OptOrMand, []).

'dec_LifeCycleChange'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_restricted_string(Bytes2,{1,20},22,[{tag,128,1,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_restricted_string(Bytes3,{1,20},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_restricted_string(Bytes4,{1,8},22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = ?RT_BER:decode_restricted_string(Bytes5,19,22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 5 with type IA5String
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = ?RT_BER:decode_restricted_string(Bytes6,{1,30},22,[{tag,128,5,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 6 with type IA5String
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = ?RT_BER:decode_restricted_string(Bytes7,{1,30},22,[{tag,128,6,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 7 with type INTEGER
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = ?RT_BER:decode_integer(Bytes8,{0,9999},[{tag,128,7,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 8 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = case Bytes9 of
<<2:2,_:1,8:5,_/binary>> ->
?RT_BER:decode_integer(Bytes9,{1,4},[{tag,128,8,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes9, 0 }
end,

%%-------------------------------------------------
%% attribute number 9 with type INTEGER
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = ?RT_BER:decode_integer(Bytes10,[],[{local,0},{euro,1}],[{tag,128,9,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term10,Bytes12,Rb11} = case Bytes11 of
<<2:2,_:1,10:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes11,{1,17},22,[{tag,128,10,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes11, 0 }
end,

%%-------------------------------------------------
%% attribute number 11 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term11,Bytes13,Rb12} = case Bytes12 of
<<2:2,_:1,11:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes12,8,22,[{tag,128,11,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes12, 0 }
end,

%%-------------------------------------------------
%% attribute number 12 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term12,Bytes14,Rb13} = case Bytes13 of
<<2:2,_:1,12:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes13,8,22,[{tag,128,12,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes13, 0 }
end,

%%-------------------------------------------------
%% attribute number 13 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term13,Bytes15,Rb14} = case Bytes14 of
<<2:2,_:1,13:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes14,8,22,[{tag,128,13,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes14, 0 }
end,

%%-------------------------------------------------
%% attribute number 14 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term14,Bytes16,Rb15} = case Bytes15 of
<<2:2,_:1,14:5,_/binary>> ->
?RT_BER:decode_integer(Bytes15,{0,1023},[{tag,128,14,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes15, 0 }
end,

%%-------------------------------------------------
%% attribute number 15 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term15,Bytes17,Rb16} = case Bytes16 of
<<2:2,_:1,15:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes16,8,22,[{tag,128,15,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes16, 0 }
end,

%%-------------------------------------------------
%% attribute number 16 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term16,Bytes18,Rb17} = case Bytes17 of
<<2:2,_:1,16:5,_/binary>> ->
?RT_BER:decode_integer(Bytes17,{0,1023},[{tag,128,16,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes17, 0 }
end,

%%-------------------------------------------------
%% attribute number 17 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term17,Bytes19,Rb18} = case Bytes18 of
<<2:2,_:1,17:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes18,{1,17},22,[{tag,128,17,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes18, 0 }
end,

%%-------------------------------------------------
%% attribute number 18 with type IA5String
%%-------------------------------------------------
   {Term18,Bytes20,Rb19} = ?RT_BER:decode_restricted_string(Bytes19,8,22,[{tag,128,18,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 19 with type IA5String
%%-------------------------------------------------
   {Term19,Bytes21,Rb20} = ?RT_BER:decode_restricted_string(Bytes20,8,22,[{tag,128,19,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 20 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term20,Bytes22,Rb21} = case Bytes21 of
<<2:2,_:1,20:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes21,8,22,[{tag,128,20,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes21, 0 }
end,

%%-------------------------------------------------
%% attribute number 21 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term21,Bytes23,Rb22} = case Bytes22 of
<<2:2,_:1,21:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes22,19,22,[{tag,128,21,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes22, 0 }
end,

%%-------------------------------------------------
%% attribute number 22 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term22,Bytes24,Rb23} = case Bytes23 of
<<2:2,_:1,22:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes23,[{tag,128,22,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes23, 0 }
end,

%%-------------------------------------------------
%% attribute number 23 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term23,Bytes25,Rb24} = case Bytes24 of
<<2:2,_:1,23:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes24,8,22,[{tag,128,23,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes24, 0 }
end,

%%-------------------------------------------------
%% attribute number 24 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term24,Bytes26,Rb25} = case Bytes25 of
<<2:2,_:1,24:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes25,{1,4},22,[{tag,128,24,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes25, 0 }
end,

%%-------------------------------------------------
%% attribute number 25 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term25,Bytes27,Rb26} = case Bytes26 of
<<2:2,_:1,25:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes26,8,22,[{tag,128,25,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes26, 0 }
end,

%%-------------------------------------------------
%% attribute number 26 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term26,Bytes28,Rb27} = case Bytes27 of
<<2:2,_:1,26:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes27,8,22,[{tag,128,26,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes27, 0 }
end,

%%-------------------------------------------------
%% attribute number 27 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term27,Bytes29,Rb28} = case Bytes28 of
<<2:2,_:1,27:5,_/binary>> ->
?RT_BER:decode_integer(Bytes28,[],[{tag,128,27,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes28, 0 }
end,

%%-------------------------------------------------
%% attribute number 28 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term28,Bytes30,Rb29} = case Bytes29 of
<<2:2,_:1,28:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes29,{1,17},22,[{tag,128,28,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes29, 0 }
end,

%%-------------------------------------------------
%% attribute number 29 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term29,Bytes31,Rb30} = case Bytes30 of
<<2:2,_:1,29:5,_/binary>> ->
?RT_BER:decode_integer(Bytes30,[],[{tag,128,29,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes30, 0 }
end,

%%-------------------------------------------------
%% attribute number 30 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term30,Bytes32,Rb31} = case Bytes31 of
<<2:2,_:1,30:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes31,{1,17},22,[{tag,128,30,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes31, 0 }
end,

%%-------------------------------------------------
%% attribute number 31 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term31,Bytes33,Rb32} = case Bytes32 of
<<2:2,_:1,31:5,31,_/binary>> ->
?RT_BER:decode_enumerated(Bytes32,[],[{origInsideHPLMN,0},{origOutsideHPLMNwithCAPv1,1},{origOutsideHPLMNwithCAPv2,2},{uSSDCallBack,3},{origOutsideHPLMNwithCAPv3,4},{firstIVRcall,5},{firstUSSDaccess,6},{firstExpiryDateSet,7}],[{tag,128,31,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes32, 0 }
end,

%%-------------------------------------------------
%% attribute number 32 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term32,Bytes34,Rb33} = case Bytes33 of
<<2:2,_:1,31:5,32,_/binary>> ->
?RT_BER:decode_boolean(Bytes33,[{tag,128,32,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes33, 0 }
end,

%%-------------------------------------------------
%% attribute number 33 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term33,Bytes35,Rb34} = case Bytes34 of
<<2:2,_:1,31:5,33,_/binary>> ->
?RT_BER:decode_boolean(Bytes34,[{tag,128,33,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes34, 0 }
end,

%%-------------------------------------------------
%% attribute number 34 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term34,Bytes36,Rb35} = case Bytes35 of
<<2:2,_:1,31:5,34,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes35,{1,255},22,[{tag,128,34,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes35, 0 }
end,

%%-------------------------------------------------
%% attribute number 35 with type IA5String
%%-------------------------------------------------
   {Term35,Bytes37,Rb36} = ?RT_BER:decode_restricted_string(Bytes36,{1,255},22,[{tag,128,35,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 36 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term36,Bytes38,Rb37} = case Bytes37 of
<<2:2,_:1,31:5,36,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes37,{1,20},22,[{tag,128,36,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes37, 0 }
end,

%%-------------------------------------------------
%% attribute number 37 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term37,Bytes39,Rb38} = case Bytes38 of
<<2:2,_:1,31:5,37,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes38,19,22,[{tag,128,37,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes38, 0 }
end,

%%-------------------------------------------------
%% attribute number 38 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term38,Bytes40,Rb39} = case Bytes39 of
<<2:2,_:1,31:5,38,_/binary>> ->
?RT_BER:decode_boolean(Bytes39,[{tag,128,38,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes39, 0 }
end,

%%-------------------------------------------------
%% attribute number 39 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term39,Bytes41,Rb40} = case Bytes40 of
<<2:2,_:1,31:5,39,_/binary>> ->
?RT_BER:decode_integer(Bytes40,{0,2147483647},[{tag,128,39,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes40, 0 }
end,

%%-------------------------------------------------
%% attribute number 40 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term40,Bytes42,Rb41} = case Bytes41 of
<<2:2,_:1,31:5,40,_/binary>> ->
?RT_BER:decode_integer(Bytes41,{0,2147483647},[{tag,128,40,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes41, 0 }
end,

%%-------------------------------------------------
%% attribute number 41 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term41,Bytes43,Rb42} = case Bytes42 of
<<2:2,_:1,31:5,41,_/binary>> ->
?RT_BER:decode_integer(Bytes42,{0,9999999},[{tag,128,41,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes42, 0 }
end,

%%-------------------------------------------------
%% attribute number 42 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term42,Bytes44,Rb43} = case Bytes43 of
<<2:2,_:1,31:5,42,_/binary>> ->
?RT_BER:decode_integer(Bytes43,{0,9999999},[{tag,128,42,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes43, 0 }
end,

%%-------------------------------------------------
%% attribute number 43 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term43,Bytes45,Rb44} = case Bytes44 of
<<2:2,_:1,31:5,43,_/binary>> ->
?RT_BER:decode_integer(Bytes44,{0,9999999},[{tag,128,43,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes44, 0 }
end,

%%-------------------------------------------------
%% attribute number 44 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term44,Bytes46,Rb45} = case Bytes45 of
<<2:2,_:1,31:5,44,_/binary>> ->
?RT_BER:decode_boolean(Bytes45,[{tag,128,44,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes45, 0 }
end,

%%-------------------------------------------------
%% attribute number 45 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term45,Bytes47,Rb46} = case Bytes46 of
<<2:2,_:1,31:5,45,_/binary>> ->
?RT_BER:decode_integer(Bytes46,{0,1023},[{tag,128,45,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes46, 0 }
end,

%%-------------------------------------------------
%% attribute number 46 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term46,Bytes48,Rb47} = case Bytes47 of
<<2:2,_:1,31:5,46,_/binary>> ->
?RT_BER:decode_integer(Bytes47,{0,1023},[{tag,128,46,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes47, 0 }
end,

%%-------------------------------------------------
%% attribute number 47 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term47,Bytes49,Rb48} = case Bytes48 of
<<2:2,_:1,31:5,47,_/binary>> ->
?RT_BER:decode_boolean(Bytes48,[{tag,128,47,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes48, 0 }
end,

%%-------------------------------------------------
%% attribute number 48 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term48,Bytes50,Rb49} = case Bytes49 of
<<2:2,_:1,31:5,48,_/binary>> ->
?RT_BER:decode_boolean(Bytes49,[{tag,128,48,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes49, 0 }
end,

%%-------------------------------------------------
%% attribute number 49 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term49,Bytes51,Rb50} = case Bytes50 of
<<2:2,_:1,31:5,49,_/binary>> ->
?RT_BER:decode_integer(Bytes50,{0,999},[{tag,128,49,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes50, 0 }
end,

%%-------------------------------------------------
%% attribute number 50 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term50,Bytes52,Rb51} = case Bytes51 of
<<2:2,_:1,31:5,50,_/binary>> ->
?RT_BER:decode_integer(Bytes51,{0,255},[{tag,128,50,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes51, 0 }
end,

%%-------------------------------------------------
%% attribute number 51 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term51,Bytes53,Rb52} = case Bytes52 of
<<2:2,_:1,31:5,51,_/binary>> ->
'dec_LifeCycleChange_clearedDedicatedAccounts'(Bytes52, opt_or_default, [{tag,128,51,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes52, 0 }
end,

%%-------------------------------------------------
%% attribute number 52 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term52,Bytes54,Rb53} = case Bytes53 of
<<2:2,_:1,31:5,52,_/binary>> ->
?RT_BER:decode_enumerated(Bytes53,[],{[{serviceClassChange,1},{subscriberDeleted,2},{creditClearancePeriodExpired,3},{dedicatedAccountExpired,4},{other,5},{subDedicatedAccountExpired,6},{offerExpired,7},{fafExpired,8}],[]},[{tag,128,52,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes53, 0 }
end,

%%-------------------------------------------------
%% attribute number 53 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term53,Bytes55,Rb54} = case Bytes54 of
<<2:2,_:1,31:5,53,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes54,{1,17},22,[{tag,128,53,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes54, 0 }
end,

%%-------------------------------------------------
%% attribute number 54 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term54,Bytes56,Rb55} = case Bytes55 of
<<2:2,_:1,31:5,54,_/binary>> ->
'dec_LifeCycleChange_removedFaFs'(Bytes55, opt_or_default, [{tag,128,54,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes55, 0 }
end,

%%-------------------------------------------------
%% attribute number 55 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term55,Bytes57,Rb56} = case Bytes56 of
<<2:2,_:1,31:5,55,_/binary>> ->
'dec_LifeCycleChange_removedOffers'(Bytes56, opt_or_default, [{tag,128,55,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes56, 0 }
end,

   {Bytes58,Rb57} = ?RT_BER:restbytes2(RemBytes, Bytes57,ext),
   {{'LifeCycleChange', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9, Term10, Term11, Term12, Term13, Term14, Term15, Term16, Term17, Term18, Term19, Term20, Term21, Term22, Term23, Term24, Term25, Term26, Term27, Term28, Term29, Term30, Term31, Term32, Term33, Term34, Term35, Term36, Term37, Term38, Term39, Term40, Term41, Term42, Term43, Term44, Term45, Term46, Term47, Term48, Term49, Term50, Term51, Term52, Term53, Term54, Term55}, Bytes58, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11+Rb12+Rb13+Rb14+Rb15+Rb16+Rb17+Rb18+Rb19+Rb20+Rb21+Rb22+Rb23+Rb24+Rb25+Rb26+Rb27+Rb28+Rb29+Rb30+Rb31+Rb32+Rb33+Rb34+Rb35+Rb36+Rb37+Rb38+Rb39+Rb40+Rb41+Rb42+Rb43+Rb44+Rb45+Rb46+Rb47+Rb48+Rb49+Rb50+Rb51+Rb52+Rb53+Rb54+Rb55+Rb56+Rb57}.


%%================================
%%  NegativeBalanceBarred
%%================================
'enc_NegativeBalanceBarred'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(2,Val,sdpID), 22, [{tag,128,1,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {EncBytes2,EncLen2} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(3,Val,cdrID), 22, [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,accountNumber), 22, [{tag,128,3,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {EncBytes4,EncLen4} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,timeStamp), 22, [{tag,128,4,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 5 with type IA5String
%%-------------------------------------------------
   {EncBytes5,EncLen5} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,accountBalance), 22, [{tag,128,5,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 6 with type INTEGER
%%-------------------------------------------------
   {EncBytes6,EncLen6} = ?RT_BER:encode_integer([], ?RT_BER:cindex(7,Val,currencyType), [{local,0},{euro,1}], [{tag,128,6,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 7 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes7,EncLen7} =  case ?RT_BER:cindex(8,Val,lastRecord) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(8,Val,lastRecord), [{tag,128,7,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 8 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes8,EncLen8} =  case ?RT_BER:cindex(9,Val,subscriberConvergent) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(9,Val,subscriberConvergent), [{tag,128,8,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes9,EncLen9} =  case ?RT_BER:cindex(10,Val,aggregatedBalance) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(10,Val,aggregatedBalance), 22, [{tag,128,9,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_NegativeBalanceBarred'(Bytes, OptOrMand) ->
   'dec_NegativeBalanceBarred'(Bytes, OptOrMand, []).

'dec_NegativeBalanceBarred'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_restricted_string(Bytes2,{1,20},22,[{tag,128,1,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_restricted_string(Bytes3,{1,20},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_restricted_string(Bytes4,{1,30},22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = ?RT_BER:decode_restricted_string(Bytes5,19,22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 5 with type IA5String
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = ?RT_BER:decode_restricted_string(Bytes6,{1,17},22,[{tag,128,5,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 6 with type INTEGER
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = ?RT_BER:decode_integer(Bytes7,[],[{local,0},{euro,1}],[{tag,128,6,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 7 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = case Bytes8 of
<<2:2,_:1,7:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes8,[{tag,128,7,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes8, 0 }
end,

%%-------------------------------------------------
%% attribute number 8 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = case Bytes9 of
<<2:2,_:1,8:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes9,[{tag,128,8,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes9, 0 }
end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = case Bytes10 of
<<2:2,_:1,9:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes10,{1,17},22,[{tag,128,9,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes10, 0 }
end,

   {Bytes12,Rb11} = ?RT_BER:restbytes2(RemBytes, Bytes11,ext),
   {{'NegativeBalanceBarred', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9}, Bytes12, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11}.


%%================================
%%  ValueVoucherExpiry
%%================================
'enc_ValueVoucherExpiry'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(2,Val,sdpID), 22, [{tag,128,1,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {EncBytes2,EncLen2} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(3,Val,cdrID), 22, [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,accountNumber), 22, [{tag,128,3,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {EncBytes4,EncLen4} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,timeStamp), 22, [{tag,128,4,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes5,EncLen5} =  case ?RT_BER:cindex(6,Val,accountFlagsBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,accountFlagsBefore), 22, [{tag,128,5,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes6,EncLen6} =  case ?RT_BER:cindex(7,Val,accountFlagsAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(7,Val,accountFlagsAfter), 22, [{tag,128,6,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 7 with type INTEGER
%%-------------------------------------------------
   {EncBytes7,EncLen7} = ?RT_BER:encode_integer([], ?RT_BER:cindex(8,Val,oldServiceClass), [{tag,128,7,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 8 with type INTEGER
%%-------------------------------------------------
   {EncBytes8,EncLen8} = ?RT_BER:encode_integer([], ?RT_BER:cindex(9,Val,newServiceClass), [{tag,128,8,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes9,EncLen9} =  case ?RT_BER:cindex(10,Val,negativeBalanceBarringDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(10,Val,negativeBalanceBarringDate), 22, [{tag,128,9,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 10 with type INTEGER
%%-------------------------------------------------
   {EncBytes10,EncLen10} = ?RT_BER:encode_integer([], ?RT_BER:cindex(11,Val,currencyType), [{local,0},{euro,1}], [{tag,128,10,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 11 with type IA5String
%%-------------------------------------------------
   {EncBytes11,EncLen11} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(12,Val,valueVoucherExpDate), 22, [{tag,128,11,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 12 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes12,EncLen12} =  case ?RT_BER:cindex(13,Val,lastRecord) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(13,Val,lastRecord), [{tag,128,12,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 13 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes13,EncLen13} =  case ?RT_BER:cindex(14,Val,subscriberConvergent) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(14,Val,subscriberConvergent), [{tag,128,13,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 14 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes14,EncLen14} =  case ?RT_BER:cindex(15,Val,clearedDedicatedAccounts) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_ValueVoucherExpiry_clearedDedicatedAccounts'(?RT_BER:cindex(15,Val,clearedDedicatedAccounts), [{tag,128,14,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 15 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes15,EncLen15} =  case ?RT_BER:cindex(16,Val,clearedAccumulators) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_ValueVoucherExpiry_clearedAccumulators'(?RT_BER:cindex(16,Val,clearedAccumulators), [{tag,128,15,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 16 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes16,EncLen16} =  case ?RT_BER:cindex(17,Val,aggregatedBalanceBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(17,Val,aggregatedBalanceBefore), 22, [{tag,128,16,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 17 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes17,EncLen17} =  case ?RT_BER:cindex(18,Val,aggregatedBalanceAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(18,Val,aggregatedBalanceAfter), 22, [{tag,128,17,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 18 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes18,EncLen18} =  case ?RT_BER:cindex(19,Val,removedFaFs) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_ValueVoucherExpiry_removedFaFs'(?RT_BER:cindex(19,Val,removedFaFs), [{tag,128,18,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 19 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes19,EncLen19} =  case ?RT_BER:cindex(20,Val,removedOffers) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_ValueVoucherExpiry_removedOffers'(?RT_BER:cindex(20,Val,removedOffers), [{tag,128,19,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9, EncBytes10, EncBytes11, EncBytes12, EncBytes13, EncBytes14, EncBytes15, EncBytes16, EncBytes17, EncBytes18, EncBytes19],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9 + EncLen10 + EncLen11 + EncLen12 + EncLen13 + EncLen14 + EncLen15 + EncLen16 + EncLen17 + EncLen18 + EncLen19,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).



%%================================
%%  ValueVoucherExpiry_clearedDedicatedAccounts
%%================================

'enc_ValueVoucherExpiry_clearedDedicatedAccounts'({'ValueVoucherExpiry_clearedDedicatedAccounts',Val}, TagIn) ->
   'enc_ValueVoucherExpiry_clearedDedicatedAccounts'(Val, TagIn);

'enc_ValueVoucherExpiry_clearedDedicatedAccounts'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_ValueVoucherExpiry_clearedDedicatedAccounts_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_ValueVoucherExpiry_clearedDedicatedAccounts_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_ValueVoucherExpiry_clearedDedicatedAccounts_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_ClearedDedicatedAccount'(H, []),
   'enc_ValueVoucherExpiry_clearedDedicatedAccounts_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_ValueVoucherExpiry_clearedDedicatedAccounts'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_ClearedDedicatedAccount'/3, [], []).





%%================================
%%  ValueVoucherExpiry_clearedAccumulators
%%================================

'enc_ValueVoucherExpiry_clearedAccumulators'({'ValueVoucherExpiry_clearedAccumulators',Val}, TagIn) ->
   'enc_ValueVoucherExpiry_clearedAccumulators'(Val, TagIn);

'enc_ValueVoucherExpiry_clearedAccumulators'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_ValueVoucherExpiry_clearedAccumulators_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_ValueVoucherExpiry_clearedAccumulators_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_ValueVoucherExpiry_clearedAccumulators_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_ClearedAccumulator'(H, []),
   'enc_ValueVoucherExpiry_clearedAccumulators_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_ValueVoucherExpiry_clearedAccumulators'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_ClearedAccumulator'/3, [], []).





%%================================
%%  ValueVoucherExpiry_removedFaFs
%%================================

'enc_ValueVoucherExpiry_removedFaFs'({'ValueVoucherExpiry_removedFaFs',Val}, TagIn) ->
   'enc_ValueVoucherExpiry_removedFaFs'(Val, TagIn);

'enc_ValueVoucherExpiry_removedFaFs'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_ValueVoucherExpiry_removedFaFs_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_ValueVoucherExpiry_removedFaFs_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_ValueVoucherExpiry_removedFaFs_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_RemovedFaF'(H, []),
   'enc_ValueVoucherExpiry_removedFaFs_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_ValueVoucherExpiry_removedFaFs'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_RemovedFaF'/3, [], []).





%%================================
%%  ValueVoucherExpiry_removedOffers
%%================================

'enc_ValueVoucherExpiry_removedOffers'({'ValueVoucherExpiry_removedOffers',Val}, TagIn) ->
   'enc_ValueVoucherExpiry_removedOffers'(Val, TagIn);

'enc_ValueVoucherExpiry_removedOffers'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_ValueVoucherExpiry_removedOffers_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_ValueVoucherExpiry_removedOffers_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_ValueVoucherExpiry_removedOffers_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_RemovedOffer'(H, []),
   'enc_ValueVoucherExpiry_removedOffers_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_ValueVoucherExpiry_removedOffers'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_RemovedOffer'/3, [], []).




'dec_ValueVoucherExpiry'(Bytes, OptOrMand) ->
   'dec_ValueVoucherExpiry'(Bytes, OptOrMand, []).

'dec_ValueVoucherExpiry'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_restricted_string(Bytes2,{1,20},22,[{tag,128,1,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_restricted_string(Bytes3,{1,20},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_restricted_string(Bytes4,{1,30},22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = ?RT_BER:decode_restricted_string(Bytes5,19,22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = case Bytes6 of
<<2:2,_:1,5:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes6,8,22,[{tag,128,5,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes6, 0 }
end,

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = case Bytes7 of
<<2:2,_:1,6:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes7,8,22,[{tag,128,6,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes7, 0 }
end,

%%-------------------------------------------------
%% attribute number 7 with type INTEGER
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = ?RT_BER:decode_integer(Bytes8,{0,9999},[{tag,128,7,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 8 with type INTEGER
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = ?RT_BER:decode_integer(Bytes9,{0,9999},[{tag,128,8,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = case Bytes10 of
<<2:2,_:1,9:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes10,8,22,[{tag,128,9,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes10, 0 }
end,

%%-------------------------------------------------
%% attribute number 10 with type INTEGER
%%-------------------------------------------------
   {Term10,Bytes12,Rb11} = ?RT_BER:decode_integer(Bytes11,[],[{local,0},{euro,1}],[{tag,128,10,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 11 with type IA5String
%%-------------------------------------------------
   {Term11,Bytes13,Rb12} = ?RT_BER:decode_restricted_string(Bytes12,8,22,[{tag,128,11,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 12 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term12,Bytes14,Rb13} = case Bytes13 of
<<2:2,_:1,12:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes13,[{tag,128,12,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes13, 0 }
end,

%%-------------------------------------------------
%% attribute number 13 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term13,Bytes15,Rb14} = case Bytes14 of
<<2:2,_:1,13:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes14,[{tag,128,13,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes14, 0 }
end,

%%-------------------------------------------------
%% attribute number 14 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term14,Bytes16,Rb15} = case Bytes15 of
<<2:2,_:1,14:5,_/binary>> ->
'dec_ValueVoucherExpiry_clearedDedicatedAccounts'(Bytes15, opt_or_default, [{tag,128,14,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes15, 0 }
end,

%%-------------------------------------------------
%% attribute number 15 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term15,Bytes17,Rb16} = case Bytes16 of
<<2:2,_:1,15:5,_/binary>> ->
'dec_ValueVoucherExpiry_clearedAccumulators'(Bytes16, opt_or_default, [{tag,128,15,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes16, 0 }
end,

%%-------------------------------------------------
%% attribute number 16 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term16,Bytes18,Rb17} = case Bytes17 of
<<2:2,_:1,16:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes17,{1,17},22,[{tag,128,16,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes17, 0 }
end,

%%-------------------------------------------------
%% attribute number 17 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term17,Bytes19,Rb18} = case Bytes18 of
<<2:2,_:1,17:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes18,{1,17},22,[{tag,128,17,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes18, 0 }
end,

%%-------------------------------------------------
%% attribute number 18 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term18,Bytes20,Rb19} = case Bytes19 of
<<2:2,_:1,18:5,_/binary>> ->
'dec_ValueVoucherExpiry_removedFaFs'(Bytes19, opt_or_default, [{tag,128,18,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes19, 0 }
end,

%%-------------------------------------------------
%% attribute number 19 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term19,Bytes21,Rb20} = case Bytes20 of
<<2:2,_:1,19:5,_/binary>> ->
'dec_ValueVoucherExpiry_removedOffers'(Bytes20, opt_or_default, [{tag,128,19,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes20, 0 }
end,

   {Bytes22,Rb21} = ?RT_BER:restbytes2(RemBytes, Bytes21,ext),
   {{'ValueVoucherExpiry', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9, Term10, Term11, Term12, Term13, Term14, Term15, Term16, Term17, Term18, Term19}, Bytes22, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11+Rb12+Rb13+Rb14+Rb15+Rb16+Rb17+Rb18+Rb19+Rb20+Rb21}.


%%================================
%%  PeriodicAdjustment
%%================================
'enc_PeriodicAdjustment'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(2,Val,sdpID), 22, [{tag,128,1,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {EncBytes2,EncLen2} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(3,Val,cdrID), 22, [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,timeStamp), 22, [{tag,128,3,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {EncBytes4,EncLen4} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,accountNumber), 22, [{tag,128,4,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 5 with type INTEGER
%%-------------------------------------------------
   {EncBytes5,EncLen5} = ?RT_BER:encode_integer([], ?RT_BER:cindex(6,Val,dedicatedAccountID), [{tag,128,5,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 6 with type INTEGER
%%-------------------------------------------------
   {EncBytes6,EncLen6} = ?RT_BER:encode_integer([], ?RT_BER:cindex(7,Val,currencyType), [{local,0},{euro,1}], [{tag,128,6,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 7 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes7,EncLen7} =  case ?RT_BER:cindex(8,Val,lastRecord) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(8,Val,lastRecord), [{tag,128,7,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 8 with type INTEGER
%%-------------------------------------------------
   {EncBytes8,EncLen8} = ?RT_BER:encode_integer([], ?RT_BER:cindex(9,Val,replenishmentID), [{tag,128,8,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes9,EncLen9} =  case ?RT_BER:cindex(10,Val,rolloverNewPeriod) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(10,Val,rolloverNewPeriod), 22, [{tag,128,9,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes10,EncLen10} =  case ?RT_BER:cindex(11,Val,rolloverOldPeriod) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(11,Val,rolloverOldPeriod), 22, [{tag,128,10,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 11 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes11,EncLen11} =  case ?RT_BER:cindex(12,Val,replenishmentDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(12,Val,replenishmentDate), 22, [{tag,128,11,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 12 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes12,EncLen12} =  case ?RT_BER:cindex(13,Val,replenishmentAmount) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(13,Val,replenishmentAmount), 22, [{tag,128,12,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 13 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes13,EncLen13} =  case ?RT_BER:cindex(14,Val,oldReplenishmentAmount) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(14,Val,oldReplenishmentAmount), 22, [{tag,128,13,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 14 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes14,EncLen14} =  case ?RT_BER:cindex(15,Val,balanceBeforeAdjustment) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(15,Val,balanceBeforeAdjustment), 22, [{tag,128,14,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 15 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes15,EncLen15} =  case ?RT_BER:cindex(16,Val,unusedRollover) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(16,Val,unusedRollover), 22, [{tag,128,15,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 16 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes16,EncLen16} =  case ?RT_BER:cindex(17,Val,oldServiceClass) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(17,Val,oldServiceClass), [{tag,128,16,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 17 with type INTEGER
%%-------------------------------------------------
   {EncBytes17,EncLen17} = ?RT_BER:encode_integer([], ?RT_BER:cindex(18,Val,serviceClassId), [{tag,128,17,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 18 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes18,EncLen18} =  case ?RT_BER:cindex(19,Val,dedicatedAccountAdjustment) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(19,Val,dedicatedAccountAdjustment), 22, [{tag,128,18,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 19 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes19,EncLen19} =  case ?RT_BER:cindex(20,Val,dedicatedAccountClearance) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(20,Val,dedicatedAccountClearance), 22, [{tag,128,19,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 20 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes20,EncLen20} =  case ?RT_BER:cindex(21,Val,rolloverCalculationApplied) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(21,Val,rolloverCalculationApplied), [{tag,128,20,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 21 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes21,EncLen21} =  case ?RT_BER:cindex(22,Val,periodOffset) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(22,Val,periodOffset), [{tag,128,21,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 22 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes22,EncLen22} =  case ?RT_BER:cindex(23,Val,startDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(23,Val,startDate), 22, [{tag,128,22,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 23 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes23,EncLen23} =  case ?RT_BER:cindex(24,Val,periodLength) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(24,Val,periodLength), [{tag,128,23,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 24 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes24,EncLen24} =  case ?RT_BER:cindex(25,Val,typeOfPeriod) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(25,Val,typeOfPeriod), [{day,0},{month,1}], [{tag,128,24,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 25 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes25,EncLen25} =  case ?RT_BER:cindex(26,Val,aggrBalBeforeAdjustment) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(26,Val,aggrBalBeforeAdjustment), 22, [{tag,128,25,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 26 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes26,EncLen26} =  case ?RT_BER:cindex(27,Val,dedicatedAccountRealMoney) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(27,Val,dedicatedAccountRealMoney), [{tag,128,26,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 27 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes27,EncLen27} =  case ?RT_BER:cindex(28,Val,offerID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(28,Val,offerID), [{tag,128,27,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 28 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes28,EncLen28} =  case ?RT_BER:cindex(29,Val,accountUnitType) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(29,Val,accountUnitType) of {_,Enumval28}->Enumval28;_->?RT_BER:cindex(29,Val,accountUnitType) end) of
time -> ?RT_BER:encode_enumerated(0,[{tag,128,28,'IMPLICIT',32}]);
money -> ?RT_BER:encode_enumerated(1,[{tag,128,28,'IMPLICIT',32}]);
totalOctets -> ?RT_BER:encode_enumerated(2,[{tag,128,28,'IMPLICIT',32}]);
inputOctets -> ?RT_BER:encode_enumerated(3,[{tag,128,28,'IMPLICIT',32}]);
outputOctets -> ?RT_BER:encode_enumerated(4,[{tag,128,28,'IMPLICIT',32}]);
serviceSpecificUnits -> ?RT_BER:encode_enumerated(5,[{tag,128,28,'IMPLICIT',32}]);
volume -> ?RT_BER:encode_enumerated(6,[{tag,128,28,'IMPLICIT',32}]);
Enumval29 -> exit({error,{asn1, {enumerated_not_in_range,Enumval29}}})
end
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9, EncBytes10, EncBytes11, EncBytes12, EncBytes13, EncBytes14, EncBytes15, EncBytes16, EncBytes17, EncBytes18, EncBytes19, EncBytes20, EncBytes21, EncBytes22, EncBytes23, EncBytes24, EncBytes25, EncBytes26, EncBytes27, EncBytes28],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9 + EncLen10 + EncLen11 + EncLen12 + EncLen13 + EncLen14 + EncLen15 + EncLen16 + EncLen17 + EncLen18 + EncLen19 + EncLen20 + EncLen21 + EncLen22 + EncLen23 + EncLen24 + EncLen25 + EncLen26 + EncLen27 + EncLen28,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_PeriodicAdjustment'(Bytes, OptOrMand) ->
   'dec_PeriodicAdjustment'(Bytes, OptOrMand, []).

'dec_PeriodicAdjustment'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_restricted_string(Bytes2,{1,20},22,[{tag,128,1,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_restricted_string(Bytes3,{1,20},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_restricted_string(Bytes4,19,22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = ?RT_BER:decode_restricted_string(Bytes5,{1,30},22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 5 with type INTEGER
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = ?RT_BER:decode_integer(Bytes6,{1,2147483647},[{tag,128,5,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 6 with type INTEGER
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = ?RT_BER:decode_integer(Bytes7,[],[{local,0},{euro,1}],[{tag,128,6,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 7 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = case Bytes8 of
<<2:2,_:1,7:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes8,[{tag,128,7,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes8, 0 }
end,

%%-------------------------------------------------
%% attribute number 8 with type INTEGER
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = ?RT_BER:decode_integer(Bytes9,{0,255},[{tag,128,8,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = case Bytes10 of
<<2:2,_:1,9:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes10,{1,17},22,[{tag,128,9,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes10, 0 }
end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term10,Bytes12,Rb11} = case Bytes11 of
<<2:2,_:1,10:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes11,{1,17},22,[{tag,128,10,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes11, 0 }
end,

%%-------------------------------------------------
%% attribute number 11 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term11,Bytes13,Rb12} = case Bytes12 of
<<2:2,_:1,11:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes12,8,22,[{tag,128,11,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes12, 0 }
end,

%%-------------------------------------------------
%% attribute number 12 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term12,Bytes14,Rb13} = case Bytes13 of
<<2:2,_:1,12:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes13,{1,17},22,[{tag,128,12,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes13, 0 }
end,

%%-------------------------------------------------
%% attribute number 13 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term13,Bytes15,Rb14} = case Bytes14 of
<<2:2,_:1,13:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes14,{1,17},22,[{tag,128,13,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes14, 0 }
end,

%%-------------------------------------------------
%% attribute number 14 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term14,Bytes16,Rb15} = case Bytes15 of
<<2:2,_:1,14:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes15,{1,17},22,[{tag,128,14,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes15, 0 }
end,

%%-------------------------------------------------
%% attribute number 15 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term15,Bytes17,Rb16} = case Bytes16 of
<<2:2,_:1,15:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes16,{1,17},22,[{tag,128,15,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes16, 0 }
end,

%%-------------------------------------------------
%% attribute number 16 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term16,Bytes18,Rb17} = case Bytes17 of
<<2:2,_:1,16:5,_/binary>> ->
?RT_BER:decode_integer(Bytes17,{0,9999},[{tag,128,16,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes17, 0 }
end,

%%-------------------------------------------------
%% attribute number 17 with type INTEGER
%%-------------------------------------------------
   {Term17,Bytes19,Rb18} = ?RT_BER:decode_integer(Bytes18,{0,9999},[{tag,128,17,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 18 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term18,Bytes20,Rb19} = case Bytes19 of
<<2:2,_:1,18:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes19,{1,17},22,[{tag,128,18,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes19, 0 }
end,

%%-------------------------------------------------
%% attribute number 19 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term19,Bytes21,Rb20} = case Bytes20 of
<<2:2,_:1,19:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes20,{1,17},22,[{tag,128,19,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes20, 0 }
end,

%%-------------------------------------------------
%% attribute number 20 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term20,Bytes22,Rb21} = case Bytes21 of
<<2:2,_:1,20:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes21,[{tag,128,20,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes21, 0 }
end,

%%-------------------------------------------------
%% attribute number 21 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term21,Bytes23,Rb22} = case Bytes22 of
<<2:2,_:1,21:5,_/binary>> ->
?RT_BER:decode_integer(Bytes22,[],[{tag,128,21,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes22, 0 }
end,

%%-------------------------------------------------
%% attribute number 22 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term22,Bytes24,Rb23} = case Bytes23 of
<<2:2,_:1,22:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes23,8,22,[{tag,128,22,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes23, 0 }
end,

%%-------------------------------------------------
%% attribute number 23 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term23,Bytes25,Rb24} = case Bytes24 of
<<2:2,_:1,23:5,_/binary>> ->
?RT_BER:decode_integer(Bytes24,[],[{tag,128,23,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes24, 0 }
end,

%%-------------------------------------------------
%% attribute number 24 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term24,Bytes26,Rb25} = case Bytes25 of
<<2:2,_:1,24:5,_/binary>> ->
?RT_BER:decode_integer(Bytes25,[],[{day,0},{month,1}],[{tag,128,24,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes25, 0 }
end,

%%-------------------------------------------------
%% attribute number 25 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term25,Bytes27,Rb26} = case Bytes26 of
<<2:2,_:1,25:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes26,{1,17},22,[{tag,128,25,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes26, 0 }
end,

%%-------------------------------------------------
%% attribute number 26 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term26,Bytes28,Rb27} = case Bytes27 of
<<2:2,_:1,26:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes27,[{tag,128,26,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes27, 0 }
end,

%%-------------------------------------------------
%% attribute number 27 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term27,Bytes29,Rb28} = case Bytes28 of
<<2:2,_:1,27:5,_/binary>> ->
?RT_BER:decode_integer(Bytes28,{1,2147483647},[{tag,128,27,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes28, 0 }
end,

%%-------------------------------------------------
%% attribute number 28 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term28,Bytes30,Rb29} = case Bytes29 of
<<2:2,_:1,28:5,_/binary>> ->
?RT_BER:decode_enumerated(Bytes29,[],[{time,0},{money,1},{totalOctets,2},{inputOctets,3},{outputOctets,4},{serviceSpecificUnits,5},{volume,6}],[{tag,128,28,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes29, 0 }
end,

   {Bytes31,Rb30} = ?RT_BER:restbytes2(RemBytes, Bytes30,ext),
   {{'PeriodicAdjustment', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9, Term10, Term11, Term12, Term13, Term14, Term15, Term16, Term17, Term18, Term19, Term20, Term21, Term22, Term23, Term24, Term25, Term26, Term27, Term28}, Bytes31, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11+Rb12+Rb13+Rb14+Rb15+Rb16+Rb17+Rb18+Rb19+Rb20+Rb21+Rb22+Rb23+Rb24+Rb25+Rb26+Rb27+Rb28+Rb29+Rb30}.


%%================================
%%  PeriodicReset
%%================================
'enc_PeriodicReset'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(2,Val,sdpID), 22, [{tag,128,1,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {EncBytes2,EncLen2} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(3,Val,cdrID), 22, [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,timeStamp), 22, [{tag,128,3,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {EncBytes4,EncLen4} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,accountNumber), 22, [{tag,128,4,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 5 with type INTEGER
%%-------------------------------------------------
   {EncBytes5,EncLen5} = ?RT_BER:encode_integer([], ?RT_BER:cindex(6,Val,currencyType), [{local,0},{euro,1}], [{tag,128,5,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 6 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes6,EncLen6} =  case ?RT_BER:cindex(7,Val,lastRecord) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(7,Val,lastRecord), [{tag,128,6,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 7 with type INTEGER
%%-------------------------------------------------
   {EncBytes7,EncLen7} = ?RT_BER:encode_integer([], ?RT_BER:cindex(8,Val,periodicResetID), [{tag,128,7,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes8,EncLen8} =  case ?RT_BER:cindex(9,Val,periodicResetDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(9,Val,periodicResetDate), 22, [{tag,128,8,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes9,EncLen9} =  case ?RT_BER:cindex(10,Val,balanceAtStartOfNewPeriod) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(10,Val,balanceAtStartOfNewPeriod), 22, [{tag,128,9,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes10,EncLen10} =  case ?RT_BER:cindex(11,Val,balanceBeforeAdjustment) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(11,Val,balanceBeforeAdjustment), 22, [{tag,128,10,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 11 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes11,EncLen11} =  case ?RT_BER:cindex(12,Val,oldServiceClass) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(12,Val,oldServiceClass), [{tag,128,11,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 12 with type INTEGER
%%-------------------------------------------------
   {EncBytes12,EncLen12} = ?RT_BER:encode_integer([], ?RT_BER:cindex(13,Val,serviceClassId), [{tag,128,12,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 13 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes13,EncLen13} =  case ?RT_BER:cindex(14,Val,periodOffset) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(14,Val,periodOffset), [{tag,128,13,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 14 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes14,EncLen14} =  case ?RT_BER:cindex(15,Val,startDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(15,Val,startDate), 22, [{tag,128,14,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 15 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes15,EncLen15} =  case ?RT_BER:cindex(16,Val,periodLength) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(16,Val,periodLength), [{tag,128,15,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 16 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes16,EncLen16} =  case ?RT_BER:cindex(17,Val,typeOfPeriod) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(17,Val,typeOfPeriod), [{day,0},{month,1}], [{tag,128,16,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 17 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes17,EncLen17} =  case ?RT_BER:cindex(18,Val,aggrBalAtStartOfNewPeriod) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(18,Val,aggrBalAtStartOfNewPeriod), 22, [{tag,128,17,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 18 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes18,EncLen18} =  case ?RT_BER:cindex(19,Val,aggrBalBeforeAdjustment) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(19,Val,aggrBalBeforeAdjustment), 22, [{tag,128,18,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9, EncBytes10, EncBytes11, EncBytes12, EncBytes13, EncBytes14, EncBytes15, EncBytes16, EncBytes17, EncBytes18],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9 + EncLen10 + EncLen11 + EncLen12 + EncLen13 + EncLen14 + EncLen15 + EncLen16 + EncLen17 + EncLen18,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_PeriodicReset'(Bytes, OptOrMand) ->
   'dec_PeriodicReset'(Bytes, OptOrMand, []).

'dec_PeriodicReset'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_restricted_string(Bytes2,{1,20},22,[{tag,128,1,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_restricted_string(Bytes3,{1,20},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_restricted_string(Bytes4,19,22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = ?RT_BER:decode_restricted_string(Bytes5,{1,30},22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 5 with type INTEGER
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = ?RT_BER:decode_integer(Bytes6,[],[{local,0},{euro,1}],[{tag,128,5,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 6 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = case Bytes7 of
<<2:2,_:1,6:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes7,[{tag,128,6,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes7, 0 }
end,

%%-------------------------------------------------
%% attribute number 7 with type INTEGER
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = ?RT_BER:decode_integer(Bytes8,{0,255},[{tag,128,7,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = case Bytes9 of
<<2:2,_:1,8:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes9,8,22,[{tag,128,8,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes9, 0 }
end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = case Bytes10 of
<<2:2,_:1,9:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes10,{1,17},22,[{tag,128,9,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes10, 0 }
end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term10,Bytes12,Rb11} = case Bytes11 of
<<2:2,_:1,10:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes11,{1,17},22,[{tag,128,10,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes11, 0 }
end,

%%-------------------------------------------------
%% attribute number 11 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term11,Bytes13,Rb12} = case Bytes12 of
<<2:2,_:1,11:5,_/binary>> ->
?RT_BER:decode_integer(Bytes12,{0,9999},[{tag,128,11,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes12, 0 }
end,

%%-------------------------------------------------
%% attribute number 12 with type INTEGER
%%-------------------------------------------------
   {Term12,Bytes14,Rb13} = ?RT_BER:decode_integer(Bytes13,{0,9999},[{tag,128,12,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 13 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term13,Bytes15,Rb14} = case Bytes14 of
<<2:2,_:1,13:5,_/binary>> ->
?RT_BER:decode_integer(Bytes14,[],[{tag,128,13,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes14, 0 }
end,

%%-------------------------------------------------
%% attribute number 14 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term14,Bytes16,Rb15} = case Bytes15 of
<<2:2,_:1,14:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes15,8,22,[{tag,128,14,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes15, 0 }
end,

%%-------------------------------------------------
%% attribute number 15 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term15,Bytes17,Rb16} = case Bytes16 of
<<2:2,_:1,15:5,_/binary>> ->
?RT_BER:decode_integer(Bytes16,[],[{tag,128,15,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes16, 0 }
end,

%%-------------------------------------------------
%% attribute number 16 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term16,Bytes18,Rb17} = case Bytes17 of
<<2:2,_:1,16:5,_/binary>> ->
?RT_BER:decode_integer(Bytes17,[],[{day,0},{month,1}],[{tag,128,16,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes17, 0 }
end,

%%-------------------------------------------------
%% attribute number 17 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term17,Bytes19,Rb18} = case Bytes18 of
<<2:2,_:1,17:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes18,{1,17},22,[{tag,128,17,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes18, 0 }
end,

%%-------------------------------------------------
%% attribute number 18 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term18,Bytes20,Rb19} = case Bytes19 of
<<2:2,_:1,18:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes19,{1,17},22,[{tag,128,18,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes19, 0 }
end,

   {Bytes21,Rb20} = ?RT_BER:restbytes2(RemBytes, Bytes20,ext),
   {{'PeriodicReset', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9, Term10, Term11, Term12, Term13, Term14, Term15, Term16, Term17, Term18}, Bytes21, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11+Rb12+Rb13+Rb14+Rb15+Rb16+Rb17+Rb18+Rb19+Rb20}.


%%================================
%%  TemporaryBlock
%%================================
'enc_TemporaryBlock'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(2,Val,sdpID), 22, [{tag,128,1,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {EncBytes2,EncLen2} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(3,Val,cdrID), 22, [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,accountNumber), 22, [{tag,128,3,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {EncBytes4,EncLen4} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,subscriberNumber), 22, [{tag,128,4,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 5 with type IA5String
%%-------------------------------------------------
   {EncBytes5,EncLen5} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,adjustmentTimeStamp), 22, [{tag,128,5,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes6,EncLen6} =  case ?RT_BER:cindex(7,Val,originNodeType) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(7,Val,originNodeType), 22, [{tag,128,6,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 7 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes7,EncLen7} =  case ?RT_BER:cindex(8,Val,originNodeID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(8,Val,originNodeID), 22, [{tag,128,7,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes8,EncLen8} =  case ?RT_BER:cindex(9,Val,origTransactionID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(9,Val,origTransactionID), 22, [{tag,128,8,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes9,EncLen9} =  case ?RT_BER:cindex(10,Val,origTransactionTimeStamp) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(10,Val,origTransactionTimeStamp), 22, [{tag,128,9,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes10,EncLen10} =  case ?RT_BER:cindex(11,Val,transactionType) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(11,Val,transactionType), 22, [{tag,128,10,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 11 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes11,EncLen11} =  case ?RT_BER:cindex(12,Val,transactionCode) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(12,Val,transactionCode), 22, [{tag,128,11,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 12 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes12,EncLen12} =  case ?RT_BER:cindex(13,Val,originOperatorId) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(13,Val,originOperatorId), 22, [{tag,128,12,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 13 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes13,EncLen13} =  case ?RT_BER:cindex(14,Val,temporaryBlockedStatusBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(14,Val,temporaryBlockedStatusBefore), [{tag,128,13,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 14 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes14,EncLen14} =  case ?RT_BER:cindex(15,Val,temporaryBlockedStatusAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(15,Val,temporaryBlockedStatusAfter), [{tag,128,14,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9, EncBytes10, EncBytes11, EncBytes12, EncBytes13, EncBytes14],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9 + EncLen10 + EncLen11 + EncLen12 + EncLen13 + EncLen14,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_TemporaryBlock'(Bytes, OptOrMand) ->
   'dec_TemporaryBlock'(Bytes, OptOrMand, []).

'dec_TemporaryBlock'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_restricted_string(Bytes2,{1,20},22,[{tag,128,1,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_restricted_string(Bytes3,{1,20},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_restricted_string(Bytes4,{1,30},22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = ?RT_BER:decode_restricted_string(Bytes5,{1,30},22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 5 with type IA5String
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = ?RT_BER:decode_restricted_string(Bytes6,19,22,[{tag,128,5,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = case Bytes7 of
<<2:2,_:1,6:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes7,{1,8},22,[{tag,128,6,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes7, 0 }
end,

%%-------------------------------------------------
%% attribute number 7 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = case Bytes8 of
<<2:2,_:1,7:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes8,{1,255},22,[{tag,128,7,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes8, 0 }
end,

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = case Bytes9 of
<<2:2,_:1,8:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes9,{1,20},22,[{tag,128,8,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes9, 0 }
end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = case Bytes10 of
<<2:2,_:1,9:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes10,19,22,[{tag,128,9,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes10, 0 }
end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term10,Bytes12,Rb11} = case Bytes11 of
<<2:2,_:1,10:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes11,{1,30},22,[{tag,128,10,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes11, 0 }
end,

%%-------------------------------------------------
%% attribute number 11 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term11,Bytes13,Rb12} = case Bytes12 of
<<2:2,_:1,11:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes12,{1,30},22,[{tag,128,11,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes12, 0 }
end,

%%-------------------------------------------------
%% attribute number 12 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term12,Bytes14,Rb13} = case Bytes13 of
<<2:2,_:1,12:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes13,{1,255},22,[{tag,128,12,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes13, 0 }
end,

%%-------------------------------------------------
%% attribute number 13 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term13,Bytes15,Rb14} = case Bytes14 of
<<2:2,_:1,13:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes14,[{tag,128,13,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes14, 0 }
end,

%%-------------------------------------------------
%% attribute number 14 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term14,Bytes16,Rb15} = case Bytes15 of
<<2:2,_:1,14:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes15,[{tag,128,14,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes15, 0 }
end,

   {Bytes17,Rb16} = ?RT_BER:restbytes2(RemBytes, Bytes16,ext),
   {{'TemporaryBlock', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9, Term10, Term11, Term12, Term13, Term14}, Bytes17, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11+Rb12+Rb13+Rb14+Rb15+Rb16}.


%%================================
%%  AccountFlags
%%================================

'enc_AccountFlags'({'AccountFlags',Val}, TagIn) ->
   'enc_AccountFlags'(Val, TagIn);

'enc_AccountFlags'(Val, TagIn) ->
?RT_BER:encode_restricted_string([], Val, 22, TagIn ++ []).


'dec_AccountFlags'(Bytes, OptOrMand) ->
   'dec_AccountFlags'(Bytes, OptOrMand, []).

'dec_AccountFlags'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_restricted_string(Bytes,8,22,TagIn++[], no_length, OptOrMand).



%%================================
%%  AccountGroupID
%%================================

'enc_AccountGroupID'({'AccountGroupID',Val}, TagIn) ->
   'enc_AccountGroupID'(Val, TagIn);

'enc_AccountGroupID'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_AccountGroupID'(Bytes, OptOrMand) ->
   'dec_AccountGroupID'(Bytes, OptOrMand, []).

'dec_AccountGroupID'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{0,2147483647},TagIn++[], OptOrMand).



%%================================
%%  AccountHomeRegion
%%================================

'enc_AccountHomeRegion'({'AccountHomeRegion',Val}, TagIn) ->
   'enc_AccountHomeRegion'(Val, TagIn);

'enc_AccountHomeRegion'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_AccountHomeRegion'(Bytes, OptOrMand) ->
   'dec_AccountHomeRegion'(Bytes, OptOrMand, []).

'dec_AccountHomeRegion'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{0,999},TagIn++[], OptOrMand).



%%================================
%%  AccountUnitType
%%================================

'enc_AccountUnitType'({'AccountUnitType',Val}, TagIn) ->
   'enc_AccountUnitType'(Val, TagIn);

'enc_AccountUnitType'(Val, TagIn) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
time -> ?RT_BER:encode_enumerated(0,TagIn ++ []);
money -> ?RT_BER:encode_enumerated(1,TagIn ++ []);
totalOctets -> ?RT_BER:encode_enumerated(2,TagIn ++ []);
inputOctets -> ?RT_BER:encode_enumerated(3,TagIn ++ []);
outputOctets -> ?RT_BER:encode_enumerated(4,TagIn ++ []);
serviceSpecificUnits -> ?RT_BER:encode_enumerated(5,TagIn ++ []);
volume -> ?RT_BER:encode_enumerated(6,TagIn ++ []);
Enumval2 -> exit({error,{asn1, {enumerated_not_in_range,Enumval2}}})
end.


'dec_AccountUnitType'(Bytes, OptOrMand) ->
   'dec_AccountUnitType'(Bytes, OptOrMand, []).

'dec_AccountUnitType'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_enumerated(Bytes,[],[{time,0},{money,1},{totalOctets,2},{inputOctets,3},{outputOctets,4},{serviceSpecificUnits,5},{volume,6}],TagIn++[], OptOrMand).



%%================================
%%  AccumulatorID
%%================================

'enc_AccumulatorID'({'AccumulatorID',Val}, TagIn) ->
   'enc_AccumulatorID'(Val, TagIn);

'enc_AccumulatorID'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_AccumulatorID'(Bytes, OptOrMand) ->
   'dec_AccumulatorID'(Bytes, OptOrMand, []).

'dec_AccumulatorID'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{1,2147483647},TagIn++[], OptOrMand).



%%================================
%%  AccumulatorValue
%%================================

'enc_AccumulatorValue'({'AccumulatorValue',Val}, TagIn) ->
   'enc_AccumulatorValue'(Val, TagIn);

'enc_AccumulatorValue'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_AccumulatorValue'(Bytes, OptOrMand) ->
   'dec_AccumulatorValue'(Bytes, OptOrMand, []).

'dec_AccumulatorValue'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{-2147483648,2147483647},TagIn++[], OptOrMand).



%%================================
%%  AdjustmentAction
%%================================

'enc_AdjustmentAction'({'AdjustmentAction',Val}, TagIn) ->
   'enc_AdjustmentAction'(Val, TagIn);

'enc_AdjustmentAction'(Val, TagIn) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
set -> ?RT_BER:encode_enumerated(0,TagIn ++ []);
add -> ?RT_BER:encode_enumerated(1,TagIn ++ []);
subtract -> ?RT_BER:encode_enumerated(2,TagIn ++ []);
reset -> ?RT_BER:encode_enumerated(3,TagIn ++ []);
remove -> ?RT_BER:encode_enumerated(4,TagIn ++ []);
create -> ?RT_BER:encode_enumerated(5,TagIn ++ []);
Enumval2 -> exit({error,{asn1, {enumerated_not_in_range,Enumval2}}})
end.


'dec_AdjustmentAction'(Bytes, OptOrMand) ->
   'dec_AdjustmentAction'(Bytes, OptOrMand, []).

'dec_AdjustmentAction'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_enumerated(Bytes,[],[{set,0},{add,1},{subtract,2},{reset,3},{remove,4},{create,5}],TagIn++[], OptOrMand).



%%================================
%%  AdjustmentAccumulator
%%================================
'enc_AdjustmentAccumulator'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,accumulatorID), [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes2,EncLen2} =  case ?RT_BER:cindex(3,Val,accumulatorValueBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(3,Val,accumulatorValueBefore), [{tag,128,1,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 3 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes3,EncLen3} =  case ?RT_BER:cindex(4,Val,accumulatorValueAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(4,Val,accumulatorValueAfter), [{tag,128,2,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 4 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes4,EncLen4} =  case ?RT_BER:cindex(5,Val,accumulatorAdjustment) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(5,Val,accumulatorAdjustment), [{tag,128,3,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 5 with type ENUMERATED
%%-------------------------------------------------
   {EncBytes5,EncLen5} = case (case ?RT_BER:cindex(6,Val,action) of {_,Enumval5}->Enumval5;_->?RT_BER:cindex(6,Val,action) end) of
set -> ?RT_BER:encode_enumerated(0,[{tag,128,4,'IMPLICIT',32}]);
add -> ?RT_BER:encode_enumerated(1,[{tag,128,4,'IMPLICIT',32}]);
subtract -> ?RT_BER:encode_enumerated(2,[{tag,128,4,'IMPLICIT',32}]);
reset -> ?RT_BER:encode_enumerated(3,[{tag,128,4,'IMPLICIT',32}]);
remove -> ?RT_BER:encode_enumerated(4,[{tag,128,4,'IMPLICIT',32}]);
create -> ?RT_BER:encode_enumerated(5,[{tag,128,4,'IMPLICIT',32}]);
Enumval6 -> exit({error,{asn1, {enumerated_not_in_range,Enumval6}}})
end,

%%-------------------------------------------------
%% attribute number 6 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes6,EncLen6} =  case ?RT_BER:cindex(7,Val,clearedAccumulatorValue) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(7,Val,clearedAccumulatorValue), [{tag,128,5,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 7 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes7,EncLen7} =  case ?RT_BER:cindex(8,Val,accumulatorClearDateBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(8,Val,accumulatorClearDateBefore), 22, [{tag,128,6,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes8,EncLen8} =  case ?RT_BER:cindex(9,Val,accumulatorClearDateAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(9,Val,accumulatorClearDateAfter), 22, [{tag,128,7,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 9 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes9,EncLen9} =  case ?RT_BER:cindex(10,Val,accumulatorValueInitial) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(10,Val,accumulatorValueInitial), [{tag,128,8,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes10,EncLen10} =  case ?RT_BER:cindex(11,Val,accumulatorClearDateInitial) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(11,Val,accumulatorClearDateInitial), 22, [{tag,128,9,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9, EncBytes10],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9 + EncLen10,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_AdjustmentAccumulator'(Bytes, OptOrMand) ->
   'dec_AdjustmentAccumulator'(Bytes, OptOrMand, []).

'dec_AdjustmentAccumulator'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_integer(Bytes2,{1,2147483647},[{tag,128,0,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = case Bytes3 of
<<2:2,_:1,1:5,_/binary>> ->
?RT_BER:decode_integer(Bytes3,{-2147483648,2147483647},[{tag,128,1,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes3, 0 }
end,

%%-------------------------------------------------
%% attribute number 3 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = case Bytes4 of
<<2:2,_:1,2:5,_/binary>> ->
?RT_BER:decode_integer(Bytes4,{-2147483648,2147483647},[{tag,128,2,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes4, 0 }
end,

%%-------------------------------------------------
%% attribute number 4 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = case Bytes5 of
<<2:2,_:1,3:5,_/binary>> ->
?RT_BER:decode_integer(Bytes5,{-2147483648,2147483647},[{tag,128,3,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes5, 0 }
end,

%%-------------------------------------------------
%% attribute number 5 with type ENUMERATED
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = ?RT_BER:decode_enumerated(Bytes6,[],[{set,0},{add,1},{subtract,2},{reset,3},{remove,4},{create,5}],[{tag,128,4,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 6 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = case Bytes7 of
<<2:2,_:1,5:5,_/binary>> ->
?RT_BER:decode_integer(Bytes7,{-2147483648,2147483647},[{tag,128,5,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes7, 0 }
end,

%%-------------------------------------------------
%% attribute number 7 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = case Bytes8 of
<<2:2,_:1,6:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes8,8,22,[{tag,128,6,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes8, 0 }
end,

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = case Bytes9 of
<<2:2,_:1,7:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes9,8,22,[{tag,128,7,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes9, 0 }
end,

%%-------------------------------------------------
%% attribute number 9 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = case Bytes10 of
<<2:2,_:1,8:5,_/binary>> ->
?RT_BER:decode_integer(Bytes10,{-2147483648,2147483647},[{tag,128,8,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes10, 0 }
end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term10,Bytes12,Rb11} = case Bytes11 of
<<2:2,_:1,9:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes11,8,22,[{tag,128,9,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes11, 0 }
end,

   {Bytes13,Rb12} = ?RT_BER:restbytes2(RemBytes, Bytes12,ext),
   {{'AdjustmentAccumulator', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9, Term10}, Bytes13, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11+Rb12}.


%%================================
%%  AdjustmentDedicatedAccount
%%================================
'enc_AdjustmentDedicatedAccount'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,dedicatedAccountID), [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes2,EncLen2} =  case ?RT_BER:cindex(3,Val,campaignIdentifier) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(3,Val,campaignIdentifier), [{tag,128,1,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 3 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes3,EncLen3} =  case ?RT_BER:cindex(4,Val,accountValueBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,accountValueBefore), 22, [{tag,128,2,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 4 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes4,EncLen4} =  case ?RT_BER:cindex(5,Val,accountValueAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,accountValueAfter), 22, [{tag,128,3,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes5,EncLen5} =  case ?RT_BER:cindex(6,Val,adjustmentAmount) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,adjustmentAmount), 22, [{tag,128,4,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 6 with type ENUMERATED
%%-------------------------------------------------
   {EncBytes6,EncLen6} = case (case ?RT_BER:cindex(7,Val,action) of {_,Enumval6}->Enumval6;_->?RT_BER:cindex(7,Val,action) end) of
set -> ?RT_BER:encode_enumerated(0,[{tag,128,5,'IMPLICIT',32}]);
add -> ?RT_BER:encode_enumerated(1,[{tag,128,5,'IMPLICIT',32}]);
subtract -> ?RT_BER:encode_enumerated(2,[{tag,128,5,'IMPLICIT',32}]);
reset -> ?RT_BER:encode_enumerated(3,[{tag,128,5,'IMPLICIT',32}]);
remove -> ?RT_BER:encode_enumerated(4,[{tag,128,5,'IMPLICIT',32}]);
create -> ?RT_BER:encode_enumerated(5,[{tag,128,5,'IMPLICIT',32}]);
Enumval7 -> exit({error,{asn1, {enumerated_not_in_range,Enumval7}}})
end,

%%-------------------------------------------------
%% attribute number 7 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes7,EncLen7} =  case ?RT_BER:cindex(8,Val,accountExpiryDateBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(8,Val,accountExpiryDateBefore), 22, [{tag,128,6,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes8,EncLen8} =  case ?RT_BER:cindex(9,Val,accountExpiryDateAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(9,Val,accountExpiryDateAfter), 22, [{tag,128,7,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes9,EncLen9} =  case ?RT_BER:cindex(10,Val,originalAdjustmentAmount) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(10,Val,originalAdjustmentAmount), 22, [{tag,128,8,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes10,EncLen10} =  case ?RT_BER:cindex(11,Val,clearedAccountValue) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(11,Val,clearedAccountValue), 22, [{tag,128,9,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 11 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes11,EncLen11} =  case ?RT_BER:cindex(12,Val,accountValueInitial) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(12,Val,accountValueInitial), 22, [{tag,128,10,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 12 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes12,EncLen12} =  case ?RT_BER:cindex(13,Val,accountExpiryDateInitial) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(13,Val,accountExpiryDateInitial), 22, [{tag,128,11,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 13 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes13,EncLen13} =  case ?RT_BER:cindex(14,Val,accountCreditClearedReason) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(14,Val,accountCreditClearedReason) of {_,Enumval14}->Enumval14;_->?RT_BER:cindex(14,Val,accountCreditClearedReason) end) of
serviceClassChange -> ?RT_BER:encode_enumerated(1,[{tag,128,12,'IMPLICIT',32}]);
subscriberDeleted -> ?RT_BER:encode_enumerated(2,[{tag,128,12,'IMPLICIT',32}]);
creditClearancePeriodExpired -> ?RT_BER:encode_enumerated(3,[{tag,128,12,'IMPLICIT',32}]);
dedicatedAccountExpired -> ?RT_BER:encode_enumerated(4,[{tag,128,12,'IMPLICIT',32}]);
other -> ?RT_BER:encode_enumerated(5,[{tag,128,12,'IMPLICIT',32}]);
subDedicatedAccountExpired -> ?RT_BER:encode_enumerated(6,[{tag,128,12,'IMPLICIT',32}]);
offerExpired -> ?RT_BER:encode_enumerated(7,[{tag,128,12,'IMPLICIT',32}]);
fafExpired -> ?RT_BER:encode_enumerated(8,[{tag,128,12,'IMPLICIT',32}]);
Enumval15 -> exit({error,{asn1, {enumerated_not_in_range,Enumval15}}})
end
       end,

%%-------------------------------------------------
%% attribute number 14 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes14,EncLen14} =  case ?RT_BER:cindex(15,Val,accountStartDateBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(15,Val,accountStartDateBefore), 22, [{tag,128,13,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 15 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes15,EncLen15} =  case ?RT_BER:cindex(16,Val,accountStartDateAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(16,Val,accountStartDateAfter), 22, [{tag,128,14,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 16 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes16,EncLen16} =  case ?RT_BER:cindex(17,Val,accountStartDateInitial) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(17,Val,accountStartDateInitial), 22, [{tag,128,15,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 17 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes17,EncLen17} =  case ?RT_BER:cindex(18,Val,realMoney) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(18,Val,realMoney), [{tag,128,16,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 18 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes18,EncLen18} =  case ?RT_BER:cindex(19,Val,offerID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(19,Val,offerID), [{tag,128,17,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 19 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes19,EncLen19} =  case ?RT_BER:cindex(20,Val,accountUnitType) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(20,Val,accountUnitType) of {_,Enumval21}->Enumval21;_->?RT_BER:cindex(20,Val,accountUnitType) end) of
time -> ?RT_BER:encode_enumerated(0,[{tag,128,18,'IMPLICIT',32}]);
money -> ?RT_BER:encode_enumerated(1,[{tag,128,18,'IMPLICIT',32}]);
totalOctets -> ?RT_BER:encode_enumerated(2,[{tag,128,18,'IMPLICIT',32}]);
inputOctets -> ?RT_BER:encode_enumerated(3,[{tag,128,18,'IMPLICIT',32}]);
outputOctets -> ?RT_BER:encode_enumerated(4,[{tag,128,18,'IMPLICIT',32}]);
serviceSpecificUnits -> ?RT_BER:encode_enumerated(5,[{tag,128,18,'IMPLICIT',32}]);
volume -> ?RT_BER:encode_enumerated(6,[{tag,128,18,'IMPLICIT',32}]);
Enumval22 -> exit({error,{asn1, {enumerated_not_in_range,Enumval22}}})
end
       end,

%%-------------------------------------------------
%% attribute number 20 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes20,EncLen20} =  case ?RT_BER:cindex(21,Val,adjustmentSubDedicatedAccounts) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_AdjustmentDedicatedAccount_adjustmentSubDedicatedAccounts'(?RT_BER:cindex(21,Val,adjustmentSubDedicatedAccounts), [{tag,128,19,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9, EncBytes10, EncBytes11, EncBytes12, EncBytes13, EncBytes14, EncBytes15, EncBytes16, EncBytes17, EncBytes18, EncBytes19, EncBytes20],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9 + EncLen10 + EncLen11 + EncLen12 + EncLen13 + EncLen14 + EncLen15 + EncLen16 + EncLen17 + EncLen18 + EncLen19 + EncLen20,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).



%%================================
%%  AdjustmentDedicatedAccount_adjustmentSubDedicatedAccounts
%%================================

'enc_AdjustmentDedicatedAccount_adjustmentSubDedicatedAccounts'({'AdjustmentDedicatedAccount_adjustmentSubDedicatedAccounts',Val}, TagIn) ->
   'enc_AdjustmentDedicatedAccount_adjustmentSubDedicatedAccounts'(Val, TagIn);

'enc_AdjustmentDedicatedAccount_adjustmentSubDedicatedAccounts'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_AdjustmentDedicatedAccount_adjustmentSubDedicatedAccounts_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_AdjustmentDedicatedAccount_adjustmentSubDedicatedAccounts_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_AdjustmentDedicatedAccount_adjustmentSubDedicatedAccounts_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_AdjustmentSubDedicatedAccount'(H, []),
   'enc_AdjustmentDedicatedAccount_adjustmentSubDedicatedAccounts_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_AdjustmentDedicatedAccount_adjustmentSubDedicatedAccounts'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_AdjustmentSubDedicatedAccount'/3, [], []).




'dec_AdjustmentDedicatedAccount'(Bytes, OptOrMand) ->
   'dec_AdjustmentDedicatedAccount'(Bytes, OptOrMand, []).

'dec_AdjustmentDedicatedAccount'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_integer(Bytes2,{1,2147483647},[{tag,128,0,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = case Bytes3 of
<<2:2,_:1,1:5,_/binary>> ->
?RT_BER:decode_integer(Bytes3,{1,99999999},[{tag,128,1,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes3, 0 }
end,

%%-------------------------------------------------
%% attribute number 3 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = case Bytes4 of
<<2:2,_:1,2:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes4,{1,17},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes4, 0 }
end,

%%-------------------------------------------------
%% attribute number 4 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = case Bytes5 of
<<2:2,_:1,3:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes5,{1,17},22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes5, 0 }
end,

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = case Bytes6 of
<<2:2,_:1,4:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes6,{1,17},22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes6, 0 }
end,

%%-------------------------------------------------
%% attribute number 6 with type ENUMERATED
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = ?RT_BER:decode_enumerated(Bytes7,[],[{set,0},{add,1},{subtract,2},{reset,3},{remove,4},{create,5}],[{tag,128,5,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 7 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = case Bytes8 of
<<2:2,_:1,6:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes8,8,22,[{tag,128,6,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes8, 0 }
end,

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = case Bytes9 of
<<2:2,_:1,7:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes9,8,22,[{tag,128,7,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes9, 0 }
end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = case Bytes10 of
<<2:2,_:1,8:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes10,{1,17},22,[{tag,128,8,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes10, 0 }
end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term10,Bytes12,Rb11} = case Bytes11 of
<<2:2,_:1,9:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes11,{1,17},22,[{tag,128,9,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes11, 0 }
end,

%%-------------------------------------------------
%% attribute number 11 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term11,Bytes13,Rb12} = case Bytes12 of
<<2:2,_:1,10:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes12,{1,17},22,[{tag,128,10,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes12, 0 }
end,

%%-------------------------------------------------
%% attribute number 12 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term12,Bytes14,Rb13} = case Bytes13 of
<<2:2,_:1,11:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes13,8,22,[{tag,128,11,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes13, 0 }
end,

%%-------------------------------------------------
%% attribute number 13 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term13,Bytes15,Rb14} = case Bytes14 of
<<2:2,_:1,12:5,_/binary>> ->
?RT_BER:decode_enumerated(Bytes14,[],{[{serviceClassChange,1},{subscriberDeleted,2},{creditClearancePeriodExpired,3},{dedicatedAccountExpired,4},{other,5},{subDedicatedAccountExpired,6},{offerExpired,7},{fafExpired,8}],[]},[{tag,128,12,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes14, 0 }
end,

%%-------------------------------------------------
%% attribute number 14 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term14,Bytes16,Rb15} = case Bytes15 of
<<2:2,_:1,13:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes15,8,22,[{tag,128,13,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes15, 0 }
end,

%%-------------------------------------------------
%% attribute number 15 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term15,Bytes17,Rb16} = case Bytes16 of
<<2:2,_:1,14:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes16,8,22,[{tag,128,14,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes16, 0 }
end,

%%-------------------------------------------------
%% attribute number 16 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term16,Bytes18,Rb17} = case Bytes17 of
<<2:2,_:1,15:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes17,8,22,[{tag,128,15,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes17, 0 }
end,

%%-------------------------------------------------
%% attribute number 17 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term17,Bytes19,Rb18} = case Bytes18 of
<<2:2,_:1,16:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes18,[{tag,128,16,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes18, 0 }
end,

%%-------------------------------------------------
%% attribute number 18 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term18,Bytes20,Rb19} = case Bytes19 of
<<2:2,_:1,17:5,_/binary>> ->
?RT_BER:decode_integer(Bytes19,{1,2147483647},[{tag,128,17,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes19, 0 }
end,

%%-------------------------------------------------
%% attribute number 19 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term19,Bytes21,Rb20} = case Bytes20 of
<<2:2,_:1,18:5,_/binary>> ->
?RT_BER:decode_enumerated(Bytes20,[],[{time,0},{money,1},{totalOctets,2},{inputOctets,3},{outputOctets,4},{serviceSpecificUnits,5},{volume,6}],[{tag,128,18,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes20, 0 }
end,

%%-------------------------------------------------
%% attribute number 20 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term20,Bytes22,Rb21} = case Bytes21 of
<<2:2,_:1,19:5,_/binary>> ->
'dec_AdjustmentDedicatedAccount_adjustmentSubDedicatedAccounts'(Bytes21, opt_or_default, [{tag,128,19,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes21, 0 }
end,

   {Bytes23,Rb22} = ?RT_BER:restbytes2(RemBytes, Bytes22,ext),
   {{'AdjustmentDedicatedAccount', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9, Term10, Term11, Term12, Term13, Term14, Term15, Term16, Term17, Term18, Term19, Term20}, Bytes23, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11+Rb12+Rb13+Rb14+Rb15+Rb16+Rb17+Rb18+Rb19+Rb20+Rb21+Rb22}.


%%================================
%%  AdjustmentFaF
%%================================
'enc_AdjustmentFaF'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(2,Val,familyAndFriendsNumber), 22, [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type ENUMERATED
%%-------------------------------------------------
   {EncBytes2,EncLen2} = case (case ?RT_BER:cindex(3,Val,action) of {_,Enumval2}->Enumval2;_->?RT_BER:cindex(3,Val,action) end) of
set -> ?RT_BER:encode_enumerated(0,[{tag,128,1,'IMPLICIT',32}]);
add -> ?RT_BER:encode_enumerated(1,[{tag,128,1,'IMPLICIT',32}]);
subtract -> ?RT_BER:encode_enumerated(2,[{tag,128,1,'IMPLICIT',32}]);
reset -> ?RT_BER:encode_enumerated(3,[{tag,128,1,'IMPLICIT',32}]);
remove -> ?RT_BER:encode_enumerated(4,[{tag,128,1,'IMPLICIT',32}]);
create -> ?RT_BER:encode_enumerated(5,[{tag,128,1,'IMPLICIT',32}]);
Enumval3 -> exit({error,{asn1, {enumerated_not_in_range,Enumval3}}})
end,

%%-------------------------------------------------
%% attribute number 3 with type INTEGER
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_integer([], ?RT_BER:cindex(4,Val,familyAndFriendsIndicator), [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes4,EncLen4} =  case ?RT_BER:cindex(5,Val,fafExpiryDateBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,fafExpiryDateBefore), 22, [{tag,128,3,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes5,EncLen5} =  case ?RT_BER:cindex(6,Val,fafExpiryDateAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,fafExpiryDateAfter), 22, [{tag,128,4,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes6,EncLen6} =  case ?RT_BER:cindex(7,Val,fafStartDateBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(7,Val,fafStartDateBefore), 22, [{tag,128,5,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 7 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes7,EncLen7} =  case ?RT_BER:cindex(8,Val,fafStartDateAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(8,Val,fafStartDateAfter), 22, [{tag,128,6,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 8 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes8,EncLen8} =  case ?RT_BER:cindex(9,Val,offerID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(9,Val,offerID), [{tag,128,7,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 9 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes9,EncLen9} =  case ?RT_BER:cindex(10,Val,reason) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(10,Val,reason) of {_,Enumval10}->Enumval10;_->?RT_BER:cindex(10,Val,reason) end) of
serviceClassChange -> ?RT_BER:encode_enumerated(1,[{tag,128,8,'IMPLICIT',32}]);
subscriberDeleted -> ?RT_BER:encode_enumerated(2,[{tag,128,8,'IMPLICIT',32}]);
creditClearancePeriodExpired -> ?RT_BER:encode_enumerated(3,[{tag,128,8,'IMPLICIT',32}]);
dedicatedAccountExpired -> ?RT_BER:encode_enumerated(4,[{tag,128,8,'IMPLICIT',32}]);
other -> ?RT_BER:encode_enumerated(5,[{tag,128,8,'IMPLICIT',32}]);
subDedicatedAccountExpired -> ?RT_BER:encode_enumerated(6,[{tag,128,8,'IMPLICIT',32}]);
offerExpired -> ?RT_BER:encode_enumerated(7,[{tag,128,8,'IMPLICIT',32}]);
fafExpired -> ?RT_BER:encode_enumerated(8,[{tag,128,8,'IMPLICIT',32}]);
Enumval11 -> exit({error,{asn1, {enumerated_not_in_range,Enumval11}}})
end
       end,

%%-------------------------------------------------
%% attribute number 10 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes10,EncLen10} =  case ?RT_BER:cindex(11,Val,owner) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(11,Val,owner) of {_,Enumval12}->Enumval12;_->?RT_BER:cindex(11,Val,owner) end) of
subscriber -> ?RT_BER:encode_enumerated(1,[{tag,128,9,'IMPLICIT',32}]);
account -> ?RT_BER:encode_enumerated(2,[{tag,128,9,'IMPLICIT',32}]);
Enumval13 -> exit({error,{asn1, {enumerated_not_in_range,Enumval13}}})
end
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9, EncBytes10],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9 + EncLen10,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_AdjustmentFaF'(Bytes, OptOrMand) ->
   'dec_AdjustmentFaF'(Bytes, OptOrMand, []).

'dec_AdjustmentFaF'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_restricted_string(Bytes2,{1,30},22,[{tag,128,0,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 2 with type ENUMERATED
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_enumerated(Bytes3,[],[{set,0},{add,1},{subtract,2},{reset,3},{remove,4},{create,5}],[{tag,128,1,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 3 with type INTEGER
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_integer(Bytes4,{1,65535},[{tag,128,2,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 4 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = case Bytes5 of
<<2:2,_:1,3:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes5,8,22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes5, 0 }
end,

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = case Bytes6 of
<<2:2,_:1,4:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes6,8,22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes6, 0 }
end,

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = case Bytes7 of
<<2:2,_:1,5:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes7,8,22,[{tag,128,5,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes7, 0 }
end,

%%-------------------------------------------------
%% attribute number 7 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = case Bytes8 of
<<2:2,_:1,6:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes8,8,22,[{tag,128,6,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes8, 0 }
end,

%%-------------------------------------------------
%% attribute number 8 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = case Bytes9 of
<<2:2,_:1,7:5,_/binary>> ->
?RT_BER:decode_integer(Bytes9,{1,2147483647},[{tag,128,7,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes9, 0 }
end,

%%-------------------------------------------------
%% attribute number 9 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = case Bytes10 of
<<2:2,_:1,8:5,_/binary>> ->
?RT_BER:decode_enumerated(Bytes10,[],{[{serviceClassChange,1},{subscriberDeleted,2},{creditClearancePeriodExpired,3},{dedicatedAccountExpired,4},{other,5},{subDedicatedAccountExpired,6},{offerExpired,7},{fafExpired,8}],[]},[{tag,128,8,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes10, 0 }
end,

%%-------------------------------------------------
%% attribute number 10 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term10,Bytes12,Rb11} = case Bytes11 of
<<2:2,_:1,9:5,_/binary>> ->
?RT_BER:decode_enumerated(Bytes11,[],[{subscriber,1},{account,2}],[{tag,128,9,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes11, 0 }
end,

   {Bytes13,Rb12} = ?RT_BER:restbytes2(RemBytes, Bytes12,ext),
   {{'AdjustmentFaF', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9, Term10}, Bytes13, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11+Rb12}.


%%================================
%%  AdjustmentOffer
%%================================
'enc_AdjustmentOffer'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,offerID), [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type ENUMERATED
%%-------------------------------------------------
   {EncBytes2,EncLen2} = case (case ?RT_BER:cindex(3,Val,action) of {_,Enumval2}->Enumval2;_->?RT_BER:cindex(3,Val,action) end) of
set -> ?RT_BER:encode_enumerated(0,[{tag,128,1,'IMPLICIT',32}]);
add -> ?RT_BER:encode_enumerated(1,[{tag,128,1,'IMPLICIT',32}]);
subtract -> ?RT_BER:encode_enumerated(2,[{tag,128,1,'IMPLICIT',32}]);
reset -> ?RT_BER:encode_enumerated(3,[{tag,128,1,'IMPLICIT',32}]);
remove -> ?RT_BER:encode_enumerated(4,[{tag,128,1,'IMPLICIT',32}]);
create -> ?RT_BER:encode_enumerated(5,[{tag,128,1,'IMPLICIT',32}]);
Enumval3 -> exit({error,{asn1, {enumerated_not_in_range,Enumval3}}})
end,

%%-------------------------------------------------
%% attribute number 3 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes3,EncLen3} =  case ?RT_BER:cindex(4,Val,offerExpiryDateBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,offerExpiryDateBefore), 22, [{tag,128,2,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 4 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes4,EncLen4} =  case ?RT_BER:cindex(5,Val,offerExpiryDateAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,offerExpiryDateAfter), 22, [{tag,128,3,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes5,EncLen5} =  case ?RT_BER:cindex(6,Val,offerExpiryDateInitial) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,offerExpiryDateInitial), 22, [{tag,128,4,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes6,EncLen6} =  case ?RT_BER:cindex(7,Val,offerStartDateBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(7,Val,offerStartDateBefore), 22, [{tag,128,5,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 7 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes7,EncLen7} =  case ?RT_BER:cindex(8,Val,offerStartDateAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(8,Val,offerStartDateAfter), 22, [{tag,128,6,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes8,EncLen8} =  case ?RT_BER:cindex(9,Val,offerStartDateInitial) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(9,Val,offerStartDateInitial), 22, [{tag,128,7,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 9 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes9,EncLen9} =  case ?RT_BER:cindex(10,Val,reason) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(10,Val,reason) of {_,Enumval10}->Enumval10;_->?RT_BER:cindex(10,Val,reason) end) of
serviceClassChange -> ?RT_BER:encode_enumerated(1,[{tag,128,8,'IMPLICIT',32}]);
subscriberDeleted -> ?RT_BER:encode_enumerated(2,[{tag,128,8,'IMPLICIT',32}]);
creditClearancePeriodExpired -> ?RT_BER:encode_enumerated(3,[{tag,128,8,'IMPLICIT',32}]);
dedicatedAccountExpired -> ?RT_BER:encode_enumerated(4,[{tag,128,8,'IMPLICIT',32}]);
other -> ?RT_BER:encode_enumerated(5,[{tag,128,8,'IMPLICIT',32}]);
subDedicatedAccountExpired -> ?RT_BER:encode_enumerated(6,[{tag,128,8,'IMPLICIT',32}]);
offerExpired -> ?RT_BER:encode_enumerated(7,[{tag,128,8,'IMPLICIT',32}]);
fafExpired -> ?RT_BER:encode_enumerated(8,[{tag,128,8,'IMPLICIT',32}]);
Enumval11 -> exit({error,{asn1, {enumerated_not_in_range,Enumval11}}})
end
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_AdjustmentOffer'(Bytes, OptOrMand) ->
   'dec_AdjustmentOffer'(Bytes, OptOrMand, []).

'dec_AdjustmentOffer'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_integer(Bytes2,{1,2147483647},[{tag,128,0,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 2 with type ENUMERATED
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_enumerated(Bytes3,[],[{set,0},{add,1},{subtract,2},{reset,3},{remove,4},{create,5}],[{tag,128,1,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 3 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = case Bytes4 of
<<2:2,_:1,2:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes4,8,22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes4, 0 }
end,

%%-------------------------------------------------
%% attribute number 4 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = case Bytes5 of
<<2:2,_:1,3:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes5,8,22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes5, 0 }
end,

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = case Bytes6 of
<<2:2,_:1,4:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes6,8,22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes6, 0 }
end,

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = case Bytes7 of
<<2:2,_:1,5:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes7,8,22,[{tag,128,5,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes7, 0 }
end,

%%-------------------------------------------------
%% attribute number 7 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = case Bytes8 of
<<2:2,_:1,6:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes8,8,22,[{tag,128,6,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes8, 0 }
end,

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = case Bytes9 of
<<2:2,_:1,7:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes9,8,22,[{tag,128,7,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes9, 0 }
end,

%%-------------------------------------------------
%% attribute number 9 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = case Bytes10 of
<<2:2,_:1,8:5,_/binary>> ->
?RT_BER:decode_enumerated(Bytes10,[],{[{serviceClassChange,1},{subscriberDeleted,2},{creditClearancePeriodExpired,3},{dedicatedAccountExpired,4},{other,5},{subDedicatedAccountExpired,6},{offerExpired,7},{fafExpired,8}],[]},[{tag,128,8,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes10, 0 }
end,

   {Bytes12,Rb11} = ?RT_BER:restbytes2(RemBytes, Bytes11,ext),
   {{'AdjustmentOffer', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9}, Bytes12, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11}.


%%================================
%%  AdjustmentRecordType
%%================================

'enc_AdjustmentRecordType'({'AdjustmentRecordType',Val}, TagIn) ->
   'enc_AdjustmentRecordType'(Val, TagIn);

'enc_AdjustmentRecordType'(Val, TagIn) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
refillCDR -> ?RT_BER:encode_enumerated(1,TagIn ++ []);
notDefined -> ?RT_BER:encode_enumerated(2,TagIn ++ []);
linkageOfSubordinateSubscriber -> ?RT_BER:encode_enumerated(3,TagIn ++ []);
removalOfSubordinateSubscriber -> ?RT_BER:encode_enumerated(4,TagIn ++ []);
chargedEnquiry -> ?RT_BER:encode_enumerated(5,TagIn ++ []);
chargedServiceClassChange -> ?RT_BER:encode_enumerated(6,TagIn ++ []);
notUsed -> ?RT_BER:encode_enumerated(7,TagIn ++ []);
changedFamilyAndFriendsList -> ?RT_BER:encode_enumerated(8,TagIn ++ []);
clearedDedicatedAccount -> ?RT_BER:encode_enumerated(9,TagIn ++ []);
premiumRefill -> ?RT_BER:encode_enumerated(10,TagIn ++ []);
provisioningUaDa -> ?RT_BER:encode_enumerated(11,TagIn ++ []);
Enumval2 -> exit({error,{asn1, {enumerated_not_in_range,Enumval2}}})
end.


'dec_AdjustmentRecordType'(Bytes, OptOrMand) ->
   'dec_AdjustmentRecordType'(Bytes, OptOrMand, []).

'dec_AdjustmentRecordType'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_enumerated(Bytes,[],{[{refillCDR,1},{notDefined,2},{linkageOfSubordinateSubscriber,3},{removalOfSubordinateSubscriber,4},{chargedEnquiry,5},{chargedServiceClassChange,6},{notUsed,7},{changedFamilyAndFriendsList,8},{clearedDedicatedAccount,9},{premiumRefill,10},{provisioningUaDa,11}],[]},TagIn++[], OptOrMand).



%%================================
%%  AdjustmentSubDedicatedAccount
%%================================
'enc_AdjustmentSubDedicatedAccount'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,dedicatedAccountID), [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes2,EncLen2} =  case ?RT_BER:cindex(3,Val,accountValueBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(3,Val,accountValueBefore), 22, [{tag,128,1,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 3 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes3,EncLen3} =  case ?RT_BER:cindex(4,Val,accountValueAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,accountValueAfter), 22, [{tag,128,2,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 4 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes4,EncLen4} =  case ?RT_BER:cindex(5,Val,adjustmentAmount) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,adjustmentAmount), 22, [{tag,128,3,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes5,EncLen5} =  case ?RT_BER:cindex(6,Val,accountExpiryDateBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,accountExpiryDateBefore), 22, [{tag,128,4,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes6,EncLen6} =  case ?RT_BER:cindex(7,Val,accountExpiryDateAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(7,Val,accountExpiryDateAfter), 22, [{tag,128,5,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 7 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes7,EncLen7} =  case ?RT_BER:cindex(8,Val,originalAdjustmentAmount) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(8,Val,originalAdjustmentAmount), 22, [{tag,128,6,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes8,EncLen8} =  case ?RT_BER:cindex(9,Val,clearedAccountValue) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(9,Val,clearedAccountValue), 22, [{tag,128,7,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes9,EncLen9} =  case ?RT_BER:cindex(10,Val,accountValueInitial) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(10,Val,accountValueInitial), 22, [{tag,128,8,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes10,EncLen10} =  case ?RT_BER:cindex(11,Val,accountExpiryDateInitial) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(11,Val,accountExpiryDateInitial), 22, [{tag,128,9,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 11 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes11,EncLen11} =  case ?RT_BER:cindex(12,Val,accountStartDateBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(12,Val,accountStartDateBefore), 22, [{tag,128,10,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 12 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes12,EncLen12} =  case ?RT_BER:cindex(13,Val,accountStartDateAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(13,Val,accountStartDateAfter), 22, [{tag,128,11,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 13 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes13,EncLen13} =  case ?RT_BER:cindex(14,Val,accountStartDateInitial) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(14,Val,accountStartDateInitial), 22, [{tag,128,12,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 14 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes14,EncLen14} =  case ?RT_BER:cindex(15,Val,mergedIntoDedicatedAccountID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(15,Val,mergedIntoDedicatedAccountID), [{tag,128,13,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9, EncBytes10, EncBytes11, EncBytes12, EncBytes13, EncBytes14],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9 + EncLen10 + EncLen11 + EncLen12 + EncLen13 + EncLen14,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_AdjustmentSubDedicatedAccount'(Bytes, OptOrMand) ->
   'dec_AdjustmentSubDedicatedAccount'(Bytes, OptOrMand, []).

'dec_AdjustmentSubDedicatedAccount'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_integer(Bytes2,{1,2147483647},[{tag,128,0,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 2 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = case Bytes3 of
<<2:2,_:1,1:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes3,{1,17},22,[{tag,128,1,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes3, 0 }
end,

%%-------------------------------------------------
%% attribute number 3 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = case Bytes4 of
<<2:2,_:1,2:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes4,{1,17},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes4, 0 }
end,

%%-------------------------------------------------
%% attribute number 4 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = case Bytes5 of
<<2:2,_:1,3:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes5,{1,17},22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes5, 0 }
end,

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = case Bytes6 of
<<2:2,_:1,4:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes6,8,22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes6, 0 }
end,

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = case Bytes7 of
<<2:2,_:1,5:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes7,8,22,[{tag,128,5,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes7, 0 }
end,

%%-------------------------------------------------
%% attribute number 7 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = case Bytes8 of
<<2:2,_:1,6:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes8,{1,17},22,[{tag,128,6,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes8, 0 }
end,

%%-------------------------------------------------
%% attribute number 8 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = case Bytes9 of
<<2:2,_:1,7:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes9,{1,17},22,[{tag,128,7,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes9, 0 }
end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = case Bytes10 of
<<2:2,_:1,8:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes10,{1,17},22,[{tag,128,8,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes10, 0 }
end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term10,Bytes12,Rb11} = case Bytes11 of
<<2:2,_:1,9:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes11,8,22,[{tag,128,9,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes11, 0 }
end,

%%-------------------------------------------------
%% attribute number 11 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term11,Bytes13,Rb12} = case Bytes12 of
<<2:2,_:1,10:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes12,8,22,[{tag,128,10,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes12, 0 }
end,

%%-------------------------------------------------
%% attribute number 12 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term12,Bytes14,Rb13} = case Bytes13 of
<<2:2,_:1,11:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes13,8,22,[{tag,128,11,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes13, 0 }
end,

%%-------------------------------------------------
%% attribute number 13 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term13,Bytes15,Rb14} = case Bytes14 of
<<2:2,_:1,12:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes14,8,22,[{tag,128,12,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes14, 0 }
end,

%%-------------------------------------------------
%% attribute number 14 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term14,Bytes16,Rb15} = case Bytes15 of
<<2:2,_:1,13:5,_/binary>> ->
?RT_BER:decode_integer(Bytes15,{1,2147483647},[{tag,128,13,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes15, 0 }
end,

   {Bytes17,Rb16} = ?RT_BER:restbytes2(RemBytes, Bytes16,ext),
   {{'AdjustmentSubDedicatedAccount', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9, Term10, Term11, Term12, Term13, Term14}, Bytes17, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11+Rb12+Rb13+Rb14+Rb15+Rb16}.


%%================================
%%  AggregatedBalanceDedicatedAccount
%%================================
'enc_AggregatedBalanceDedicatedAccount'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,dedicatedAccountID), [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes2,EncLen2} =  case ?RT_BER:cindex(3,Val,campaignIdentifier) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(3,Val,campaignIdentifier), [{tag,128,1,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,accountValueBefore), 22, [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {EncBytes4,EncLen4} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,accountValueAfter), 22, [{tag,128,3,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes5,EncLen5} =  case ?RT_BER:cindex(6,Val,accountDeductedAmount) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,accountDeductedAmount), 22, [{tag,128,4,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 6 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes6,EncLen6} =  case ?RT_BER:cindex(7,Val,offerID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(7,Val,offerID), [{tag,128,5,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 7 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes7,EncLen7} =  case ?RT_BER:cindex(8,Val,aggregatedBalanceSubDedicatedAccounts) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_AggregatedBalanceDedicatedAccount_aggregatedBalanceSubDedicatedAccounts'(?RT_BER:cindex(8,Val,aggregatedBalanceSubDedicatedAccounts), [{tag,128,6,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).



%%================================
%%  AggregatedBalanceDedicatedAccount_aggregatedBalanceSubDedicatedAccounts
%%================================

'enc_AggregatedBalanceDedicatedAccount_aggregatedBalanceSubDedicatedAccounts'({'AggregatedBalanceDedicatedAccount_aggregatedBalanceSubDedicatedAccounts',Val}, TagIn) ->
   'enc_AggregatedBalanceDedicatedAccount_aggregatedBalanceSubDedicatedAccounts'(Val, TagIn);

'enc_AggregatedBalanceDedicatedAccount_aggregatedBalanceSubDedicatedAccounts'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_AggregatedBalanceDedicatedAccount_aggregatedBalanceSubDedicatedAccounts_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_AggregatedBalanceDedicatedAccount_aggregatedBalanceSubDedicatedAccounts_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_AggregatedBalanceDedicatedAccount_aggregatedBalanceSubDedicatedAccounts_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_AggregatedBalanceSubDedicatedAccount'(H, []),
   'enc_AggregatedBalanceDedicatedAccount_aggregatedBalanceSubDedicatedAccounts_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_AggregatedBalanceDedicatedAccount_aggregatedBalanceSubDedicatedAccounts'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_AggregatedBalanceSubDedicatedAccount'/3, [], []).




'dec_AggregatedBalanceDedicatedAccount'(Bytes, OptOrMand) ->
   'dec_AggregatedBalanceDedicatedAccount'(Bytes, OptOrMand, []).

'dec_AggregatedBalanceDedicatedAccount'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_integer(Bytes2,{1,2147483647},[{tag,128,0,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = case Bytes3 of
<<2:2,_:1,1:5,_/binary>> ->
?RT_BER:decode_integer(Bytes3,{1,99999999},[{tag,128,1,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes3, 0 }
end,

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_restricted_string(Bytes4,{1,17},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = ?RT_BER:decode_restricted_string(Bytes5,{1,17},22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = case Bytes6 of
<<2:2,_:1,4:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes6,{1,17},22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes6, 0 }
end,

%%-------------------------------------------------
%% attribute number 6 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = case Bytes7 of
<<2:2,_:1,5:5,_/binary>> ->
?RT_BER:decode_integer(Bytes7,{1,2147483647},[{tag,128,5,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes7, 0 }
end,

%%-------------------------------------------------
%% attribute number 7 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = case Bytes8 of
<<2:2,_:1,6:5,_/binary>> ->
'dec_AggregatedBalanceDedicatedAccount_aggregatedBalanceSubDedicatedAccounts'(Bytes8, opt_or_default, [{tag,128,6,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes8, 0 }
end,

   {Bytes10,Rb9} = ?RT_BER:restbytes2(RemBytes, Bytes9,ext),
   {{'AggregatedBalanceDedicatedAccount', Term1, Term2, Term3, Term4, Term5, Term6, Term7}, Bytes10, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9}.


%%================================
%%  AggregatedBalanceSubDedicatedAccount
%%================================
'enc_AggregatedBalanceSubDedicatedAccount'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,dedicatedAccountID), [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {EncBytes2,EncLen2} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(3,Val,accountValueBefore), 22, [{tag,128,1,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,accountValueAfter), 22, [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes4,EncLen4} =  case ?RT_BER:cindex(5,Val,accountDeductedAmount) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,accountDeductedAmount), 22, [{tag,128,3,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_AggregatedBalanceSubDedicatedAccount'(Bytes, OptOrMand) ->
   'dec_AggregatedBalanceSubDedicatedAccount'(Bytes, OptOrMand, []).

'dec_AggregatedBalanceSubDedicatedAccount'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_integer(Bytes2,{1,2147483647},[{tag,128,0,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_restricted_string(Bytes3,{1,17},22,[{tag,128,1,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_restricted_string(Bytes4,{1,17},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 4 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = case Bytes5 of
<<2:2,_:1,3:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes5,{1,17},22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes5, 0 }
end,

   {Bytes7,Rb6} = ?RT_BER:restbytes2(RemBytes, Bytes6,ext),
   {{'AggregatedBalanceSubDedicatedAccount', Term1, Term2, Term3, Term4}, Bytes7, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6}.


%%================================
%%  BonusAccumulator
%%================================
'enc_BonusAccumulator'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,accumulatorID), [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER
%%-------------------------------------------------
   {EncBytes2,EncLen2} = ?RT_BER:encode_integer([], ?RT_BER:cindex(3,Val,accumulatorValueBefore), [{tag,128,1,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 3 with type INTEGER
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_integer([], ?RT_BER:cindex(4,Val,accumulatorValueAfter), [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type INTEGER
%%-------------------------------------------------
   {EncBytes4,EncLen4} = ?RT_BER:encode_integer([], ?RT_BER:cindex(5,Val,accumulatorDelta), [{tag,128,3,'IMPLICIT',32}]),

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_BonusAccumulator'(Bytes, OptOrMand) ->
   'dec_BonusAccumulator'(Bytes, OptOrMand, []).

'dec_BonusAccumulator'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_integer(Bytes2,{1,2147483647},[{tag,128,0,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_integer(Bytes3,{-2147483648,2147483647},[{tag,128,1,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 3 with type INTEGER
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_integer(Bytes4,{-2147483648,2147483647},[{tag,128,2,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 4 with type INTEGER
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = ?RT_BER:decode_integer(Bytes5,{-2147483648,2147483647},[{tag,128,3,'IMPLICIT',32}], mandatory),

   {Bytes7,Rb6} = ?RT_BER:restbytes2(RemBytes, Bytes6,ext),
   {{'BonusAccumulator', Term1, Term2, Term3, Term4}, Bytes7, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6}.


%%================================
%%  BonusDedicatedAccount
%%================================
'enc_BonusDedicatedAccount'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,dedicatedAccountID), [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes2,EncLen2} =  case ?RT_BER:cindex(3,Val,campaignIdentifier) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(3,Val,campaignIdentifier), [{tag,128,1,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,accountValueBefore), 22, [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {EncBytes4,EncLen4} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,accountValueAfter), 22, [{tag,128,3,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 5 with type IA5String
%%-------------------------------------------------
   {EncBytes5,EncLen5} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,bonusAmount), 22, [{tag,128,4,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes6,EncLen6} =  case ?RT_BER:cindex(7,Val,accountExpiryDateBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(7,Val,accountExpiryDateBefore), 22, [{tag,128,5,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 7 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes7,EncLen7} =  case ?RT_BER:cindex(8,Val,accountExpiryDateAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(8,Val,accountExpiryDateAfter), 22, [{tag,128,6,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_BonusDedicatedAccount'(Bytes, OptOrMand) ->
   'dec_BonusDedicatedAccount'(Bytes, OptOrMand, []).

'dec_BonusDedicatedAccount'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_integer(Bytes2,{1,2147483647},[{tag,128,0,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = case Bytes3 of
<<2:2,_:1,1:5,_/binary>> ->
?RT_BER:decode_integer(Bytes3,{1,99999999},[{tag,128,1,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes3, 0 }
end,

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_restricted_string(Bytes4,{1,17},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = ?RT_BER:decode_restricted_string(Bytes5,{1,17},22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 5 with type IA5String
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = ?RT_BER:decode_restricted_string(Bytes6,{1,17},22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = case Bytes7 of
<<2:2,_:1,5:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes7,8,22,[{tag,128,5,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes7, 0 }
end,

%%-------------------------------------------------
%% attribute number 7 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = case Bytes8 of
<<2:2,_:1,6:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes8,8,22,[{tag,128,6,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes8, 0 }
end,

   {Bytes10,Rb9} = ?RT_BER:restbytes2(RemBytes, Bytes9,ext),
   {{'BonusDedicatedAccount', Term1, Term2, Term3, Term4, Term5, Term6, Term7}, Bytes10, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9}.


%%================================
%%  CampaignIdentifier
%%================================

'enc_CampaignIdentifier'({'CampaignIdentifier',Val}, TagIn) ->
   'enc_CampaignIdentifier'(Val, TagIn);

'enc_CampaignIdentifier'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_CampaignIdentifier'(Bytes, OptOrMand) ->
   'dec_CampaignIdentifier'(Bytes, OptOrMand, []).

'dec_CampaignIdentifier'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{1,99999999},TagIn++[], OptOrMand).



%%================================
%%  CategoryValue
%%================================

'enc_CategoryValue'({'CategoryValue',Val}, TagIn) ->
   'enc_CategoryValue'(Val, TagIn);

'enc_CategoryValue'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_CategoryValue'(Bytes, OptOrMand) ->
   'dec_CategoryValue'(Bytes, OptOrMand, []).

'dec_CategoryValue'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{0,999},TagIn++[], OptOrMand).



%%================================
%%  CategorizationInformation
%%================================
'enc_CategorizationInformation'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes1,EncLen1} =  case ?RT_BER:cindex(2,Val,categoryType1) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,categoryType1), [{tag,128,1,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes2,EncLen2} =  case ?RT_BER:cindex(3,Val,categoryType2) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(3,Val,categoryType2), [{tag,128,2,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 3 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes3,EncLen3} =  case ?RT_BER:cindex(4,Val,categoryType3) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(4,Val,categoryType3), [{tag,128,3,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 4 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes4,EncLen4} =  case ?RT_BER:cindex(5,Val,categoryType4) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(5,Val,categoryType4), [{tag,128,4,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_CategorizationInformation'(Bytes, OptOrMand) ->
   'dec_CategorizationInformation'(Bytes, OptOrMand, []).

'dec_CategorizationInformation'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = case Bytes2 of
<<2:2,_:1,1:5,_/binary>> ->
?RT_BER:decode_integer(Bytes2,{0,999},[{tag,128,1,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes2, 0 }
end,

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = case Bytes3 of
<<2:2,_:1,2:5,_/binary>> ->
?RT_BER:decode_integer(Bytes3,{0,999},[{tag,128,2,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes3, 0 }
end,

%%-------------------------------------------------
%% attribute number 3 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = case Bytes4 of
<<2:2,_:1,3:5,_/binary>> ->
?RT_BER:decode_integer(Bytes4,{0,999},[{tag,128,3,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes4, 0 }
end,

%%-------------------------------------------------
%% attribute number 4 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = case Bytes5 of
<<2:2,_:1,4:5,_/binary>> ->
?RT_BER:decode_integer(Bytes5,{0,999},[{tag,128,4,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes5, 0 }
end,

   {Bytes7,Rb6} = ?RT_BER:restbytes2(RemBytes, Bytes6,ext),
   {{'CategorizationInformation', Term1, Term2, Term3, Term4}, Bytes7, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6}.


%%================================
%%  CDRProcAccumulator
%%================================
'enc_CDRProcAccumulator'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,accumulatorID), [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes2,EncLen2} =  case ?RT_BER:cindex(3,Val,accumulatorValueBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(3,Val,accumulatorValueBefore), [{tag,128,1,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 3 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes3,EncLen3} =  case ?RT_BER:cindex(4,Val,accumulatorValueAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(4,Val,accumulatorValueAfter), [{tag,128,2,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 4 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes4,EncLen4} =  case ?RT_BER:cindex(5,Val,accumulatorDelta) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(5,Val,accumulatorDelta), [{tag,128,3,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_CDRProcAccumulator'(Bytes, OptOrMand) ->
   'dec_CDRProcAccumulator'(Bytes, OptOrMand, []).

'dec_CDRProcAccumulator'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_integer(Bytes2,{1,2147483647},[{tag,128,0,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = case Bytes3 of
<<2:2,_:1,1:5,_/binary>> ->
?RT_BER:decode_integer(Bytes3,{-2147483648,2147483647},[{tag,128,1,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes3, 0 }
end,

%%-------------------------------------------------
%% attribute number 3 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = case Bytes4 of
<<2:2,_:1,2:5,_/binary>> ->
?RT_BER:decode_integer(Bytes4,{-2147483648,2147483647},[{tag,128,2,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes4, 0 }
end,

%%-------------------------------------------------
%% attribute number 4 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = case Bytes5 of
<<2:2,_:1,3:5,_/binary>> ->
?RT_BER:decode_integer(Bytes5,{-2147483648,2147483647},[{tag,128,3,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes5, 0 }
end,

   {Bytes7,Rb6} = ?RT_BER:restbytes2(RemBytes, Bytes6,ext),
   {{'CDRProcAccumulator', Term1, Term2, Term3, Term4}, Bytes7, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6}.


%%================================
%%  CDRProcDedicatedAccount
%%================================
'enc_CDRProcDedicatedAccount'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,dedicatedAccountID), [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes2,EncLen2} =  case ?RT_BER:cindex(3,Val,campaignIdentifier) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(3,Val,campaignIdentifier), [{tag,128,1,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,accountValueBefore), 22, [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {EncBytes4,EncLen4} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,accountValueAfter), 22, [{tag,128,3,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 5 with type IA5String
%%-------------------------------------------------
   {EncBytes5,EncLen5} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,chargedAmount), 22, [{tag,128,4,'IMPLICIT',32}]),

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_CDRProcDedicatedAccount'(Bytes, OptOrMand) ->
   'dec_CDRProcDedicatedAccount'(Bytes, OptOrMand, []).

'dec_CDRProcDedicatedAccount'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_integer(Bytes2,{1,2147483647},[{tag,128,0,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = case Bytes3 of
<<2:2,_:1,1:5,_/binary>> ->
?RT_BER:decode_integer(Bytes3,{1,99999999},[{tag,128,1,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes3, 0 }
end,

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_restricted_string(Bytes4,{1,17},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 4 with type IA5String
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = ?RT_BER:decode_restricted_string(Bytes5,{1,17},22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 5 with type IA5String
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = ?RT_BER:decode_restricted_string(Bytes6,{1,17},22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory),

   {Bytes8,Rb7} = ?RT_BER:restbytes2(RemBytes, Bytes7,ext),
   {{'CDRProcDedicatedAccount', Term1, Term2, Term3, Term4, Term5}, Bytes8, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7}.


%%================================
%%  ChargingSuccessCode
%%================================

'enc_ChargingSuccessCode'({'ChargingSuccessCode',Val}, TagIn) ->
   'enc_ChargingSuccessCode'(Val, TagIn);

'enc_ChargingSuccessCode'(Val, TagIn) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
chargingSucceeded -> ?RT_BER:encode_enumerated(0,TagIn ++ []);
chargingPerformedAtDifferentCost -> ?RT_BER:encode_enumerated(1,TagIn ++ []);
chargingPerformedPresentedCostLost -> ?RT_BER:encode_enumerated(2,TagIn ++ []);
chargingPerformedPartialDeduction -> ?RT_BER:encode_enumerated(3,TagIn ++ []);
chargingFailed -> ?RT_BER:encode_enumerated(4,TagIn ++ []);
Enumval2 -> exit({error,{asn1, {enumerated_not_in_range,Enumval2}}})
end.


'dec_ChargingSuccessCode'(Bytes, OptOrMand) ->
   'dec_ChargingSuccessCode'(Bytes, OptOrMand, []).

'dec_ChargingSuccessCode'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_enumerated(Bytes,[],[{chargingSucceeded,0},{chargingPerformedAtDifferentCost,1},{chargingPerformedPresentedCostLost,2},{chargingPerformedPartialDeduction,3},{chargingFailed,4}],TagIn++[], OptOrMand).



%%================================
%%  ClearedAccumulator
%%================================
'enc_ClearedAccumulator'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,accumulatorID), [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER
%%-------------------------------------------------
   {EncBytes2,EncLen2} = ?RT_BER:encode_integer([], ?RT_BER:cindex(3,Val,clearedAccumulatorValue), [{tag,128,1,'IMPLICIT',32}]),

   BytesSoFar = [EncBytes1, EncBytes2],
  LenSoFar = EncLen1 + EncLen2,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_ClearedAccumulator'(Bytes, OptOrMand) ->
   'dec_ClearedAccumulator'(Bytes, OptOrMand, []).

'dec_ClearedAccumulator'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_integer(Bytes2,{1,2147483647},[{tag,128,0,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_integer(Bytes3,{-2147483648,2147483647},[{tag,128,1,'IMPLICIT',32}], mandatory),

   {Bytes5,Rb4} = ?RT_BER:restbytes2(RemBytes, Bytes4,ext),
   {{'ClearedAccumulator', Term1, Term2}, Bytes5, Rb1+Rb2+Rb3+Rb4}.


%%================================
%%  ClearedDedicatedAccount
%%================================
'enc_ClearedDedicatedAccount'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,dedicatedAccountID), [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes2,EncLen2} =  case ?RT_BER:cindex(3,Val,campaignIdentifier) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(3,Val,campaignIdentifier), [{tag,128,1,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,clearedAccountValue), 22, [{tag,128,2,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 4 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes4,EncLen4} =  case ?RT_BER:cindex(5,Val,accountCreditClearedReason) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(5,Val,accountCreditClearedReason) of {_,Enumval4}->Enumval4;_->?RT_BER:cindex(5,Val,accountCreditClearedReason) end) of
serviceClassChange -> ?RT_BER:encode_enumerated(1,[{tag,128,3,'IMPLICIT',32}]);
subscriberDeleted -> ?RT_BER:encode_enumerated(2,[{tag,128,3,'IMPLICIT',32}]);
creditClearancePeriodExpired -> ?RT_BER:encode_enumerated(3,[{tag,128,3,'IMPLICIT',32}]);
dedicatedAccountExpired -> ?RT_BER:encode_enumerated(4,[{tag,128,3,'IMPLICIT',32}]);
other -> ?RT_BER:encode_enumerated(5,[{tag,128,3,'IMPLICIT',32}]);
subDedicatedAccountExpired -> ?RT_BER:encode_enumerated(6,[{tag,128,3,'IMPLICIT',32}]);
offerExpired -> ?RT_BER:encode_enumerated(7,[{tag,128,3,'IMPLICIT',32}]);
fafExpired -> ?RT_BER:encode_enumerated(8,[{tag,128,3,'IMPLICIT',32}]);
Enumval5 -> exit({error,{asn1, {enumerated_not_in_range,Enumval5}}})
end
       end,

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes5,EncLen5} =  case ?RT_BER:cindex(6,Val,accountExpiryDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,accountExpiryDate), 22, [{tag,128,4,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes6,EncLen6} =  case ?RT_BER:cindex(7,Val,accountStartDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(7,Val,accountStartDate), 22, [{tag,128,5,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 7 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {EncBytes7,EncLen7} =  case ?RT_BER:cindex(8,Val,realMoney) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_boolean(?RT_BER:cindex(8,Val,realMoney), [{tag,128,6,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 8 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes8,EncLen8} =  case ?RT_BER:cindex(9,Val,offerID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(9,Val,offerID), [{tag,128,7,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 9 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes9,EncLen9} =  case ?RT_BER:cindex(10,Val,accountUnitType) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(10,Val,accountUnitType) of {_,Enumval10}->Enumval10;_->?RT_BER:cindex(10,Val,accountUnitType) end) of
time -> ?RT_BER:encode_enumerated(0,[{tag,128,8,'IMPLICIT',32}]);
money -> ?RT_BER:encode_enumerated(1,[{tag,128,8,'IMPLICIT',32}]);
totalOctets -> ?RT_BER:encode_enumerated(2,[{tag,128,8,'IMPLICIT',32}]);
inputOctets -> ?RT_BER:encode_enumerated(3,[{tag,128,8,'IMPLICIT',32}]);
outputOctets -> ?RT_BER:encode_enumerated(4,[{tag,128,8,'IMPLICIT',32}]);
serviceSpecificUnits -> ?RT_BER:encode_enumerated(5,[{tag,128,8,'IMPLICIT',32}]);
volume -> ?RT_BER:encode_enumerated(6,[{tag,128,8,'IMPLICIT',32}]);
Enumval11 -> exit({error,{asn1, {enumerated_not_in_range,Enumval11}}})
end
       end,

%%-------------------------------------------------
%% attribute number 10 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {EncBytes10,EncLen10} =  case ?RT_BER:cindex(11,Val,clearedSubDedicatedAccounts) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_ClearedDedicatedAccount_clearedSubDedicatedAccounts'(?RT_BER:cindex(11,Val,clearedSubDedicatedAccounts), [{tag,128,9,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9, EncBytes10],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9 + EncLen10,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).



%%================================
%%  ClearedDedicatedAccount_clearedSubDedicatedAccounts
%%================================

'enc_ClearedDedicatedAccount_clearedSubDedicatedAccounts'({'ClearedDedicatedAccount_clearedSubDedicatedAccounts',Val}, TagIn) ->
   'enc_ClearedDedicatedAccount_clearedSubDedicatedAccounts'(Val, TagIn);

'enc_ClearedDedicatedAccount_clearedSubDedicatedAccounts'(Val, TagIn) ->
      {EncBytes,EncLen} = 'enc_ClearedDedicatedAccount_clearedSubDedicatedAccounts_components'(Val,[],0),
   ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], EncBytes, EncLen).

'enc_ClearedDedicatedAccount_clearedSubDedicatedAccounts_components'([], AccBytes, AccLen) -> 
   {lists:reverse(AccBytes),AccLen};

'enc_ClearedDedicatedAccount_clearedSubDedicatedAccounts_components'([H|T],AccBytes, AccLen) ->
   {EncBytes,EncLen} = 'enc_ClearedSubDedicatedAccount'(H, []),
   'enc_ClearedDedicatedAccount_clearedSubDedicatedAccounts_components'(T,[EncBytes|AccBytes], AccLen + EncLen).

'dec_ClearedDedicatedAccount_clearedSubDedicatedAccounts'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
   ?RT_BER:decode_components(Rb1, Len, Bytes1, fun 'dec_ClearedSubDedicatedAccount'/3, [], []).




'dec_ClearedDedicatedAccount'(Bytes, OptOrMand) ->
   'dec_ClearedDedicatedAccount'(Bytes, OptOrMand, []).

'dec_ClearedDedicatedAccount'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_integer(Bytes2,{1,2147483647},[{tag,128,0,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = case Bytes3 of
<<2:2,_:1,1:5,_/binary>> ->
?RT_BER:decode_integer(Bytes3,{1,99999999},[{tag,128,1,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes3, 0 }
end,

%%-------------------------------------------------
%% attribute number 3 with type IA5String
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_restricted_string(Bytes4,{1,17},22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 4 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = case Bytes5 of
<<2:2,_:1,3:5,_/binary>> ->
?RT_BER:decode_enumerated(Bytes5,[],{[{serviceClassChange,1},{subscriberDeleted,2},{creditClearancePeriodExpired,3},{dedicatedAccountExpired,4},{other,5},{subDedicatedAccountExpired,6},{offerExpired,7},{fafExpired,8}],[]},[{tag,128,3,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes5, 0 }
end,

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = case Bytes6 of
<<2:2,_:1,4:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes6,8,22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes6, 0 }
end,

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = case Bytes7 of
<<2:2,_:1,5:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes7,8,22,[{tag,128,5,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes7, 0 }
end,

%%-------------------------------------------------
%% attribute number 7 with type BOOLEAN OPTIONAL
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = case Bytes8 of
<<2:2,_:1,6:5,_/binary>> ->
?RT_BER:decode_boolean(Bytes8,[{tag,128,6,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes8, 0 }
end,

%%-------------------------------------------------
%% attribute number 8 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = case Bytes9 of
<<2:2,_:1,7:5,_/binary>> ->
?RT_BER:decode_integer(Bytes9,{1,2147483647},[{tag,128,7,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes9, 0 }
end,

%%-------------------------------------------------
%% attribute number 9 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = case Bytes10 of
<<2:2,_:1,8:5,_/binary>> ->
?RT_BER:decode_enumerated(Bytes10,[],[{time,0},{money,1},{totalOctets,2},{inputOctets,3},{outputOctets,4},{serviceSpecificUnits,5},{volume,6}],[{tag,128,8,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes10, 0 }
end,

%%-------------------------------------------------
%% attribute number 10 with type SEQUENCE OF OPTIONAL
%%-------------------------------------------------
   {Term10,Bytes12,Rb11} = case Bytes11 of
<<2:2,_:1,9:5,_/binary>> ->
'dec_ClearedDedicatedAccount_clearedSubDedicatedAccounts'(Bytes11, opt_or_default, [{tag,128,9,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes11, 0 }
end,

   {Bytes13,Rb12} = ?RT_BER:restbytes2(RemBytes, Bytes12,ext),
   {{'ClearedDedicatedAccount', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9, Term10}, Bytes13, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11+Rb12}.


%%================================
%%  ClearedSubDedicatedAccount
%%================================
'enc_ClearedSubDedicatedAccount'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,dedicatedAccountID), [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {EncBytes2,EncLen2} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(3,Val,clearedAccountValue), 22, [{tag,128,1,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 3 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes3,EncLen3} =  case ?RT_BER:cindex(4,Val,accountCreditClearedReason) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(4,Val,accountCreditClearedReason) of {_,Enumval3}->Enumval3;_->?RT_BER:cindex(4,Val,accountCreditClearedReason) end) of
serviceClassChange -> ?RT_BER:encode_enumerated(1,[{tag,128,2,'IMPLICIT',32}]);
subscriberDeleted -> ?RT_BER:encode_enumerated(2,[{tag,128,2,'IMPLICIT',32}]);
creditClearancePeriodExpired -> ?RT_BER:encode_enumerated(3,[{tag,128,2,'IMPLICIT',32}]);
dedicatedAccountExpired -> ?RT_BER:encode_enumerated(4,[{tag,128,2,'IMPLICIT',32}]);
other -> ?RT_BER:encode_enumerated(5,[{tag,128,2,'IMPLICIT',32}]);
subDedicatedAccountExpired -> ?RT_BER:encode_enumerated(6,[{tag,128,2,'IMPLICIT',32}]);
offerExpired -> ?RT_BER:encode_enumerated(7,[{tag,128,2,'IMPLICIT',32}]);
fafExpired -> ?RT_BER:encode_enumerated(8,[{tag,128,2,'IMPLICIT',32}]);
Enumval4 -> exit({error,{asn1, {enumerated_not_in_range,Enumval4}}})
end
       end,

%%-------------------------------------------------
%% attribute number 4 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes4,EncLen4} =  case ?RT_BER:cindex(5,Val,accountExpiryDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,accountExpiryDate), 22, [{tag,128,3,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes5,EncLen5} =  case ?RT_BER:cindex(6,Val,accountStartDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,accountStartDate), 22, [{tag,128,4,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_ClearedSubDedicatedAccount'(Bytes, OptOrMand) ->
   'dec_ClearedSubDedicatedAccount'(Bytes, OptOrMand, []).

'dec_ClearedSubDedicatedAccount'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_integer(Bytes2,{1,2147483647},[{tag,128,0,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 2 with type IA5String
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_restricted_string(Bytes3,{1,17},22,[{tag,128,1,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 3 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = case Bytes4 of
<<2:2,_:1,2:5,_/binary>> ->
?RT_BER:decode_enumerated(Bytes4,[],{[{serviceClassChange,1},{subscriberDeleted,2},{creditClearancePeriodExpired,3},{dedicatedAccountExpired,4},{other,5},{subDedicatedAccountExpired,6},{offerExpired,7},{fafExpired,8}],[]},[{tag,128,2,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes4, 0 }
end,

%%-------------------------------------------------
%% attribute number 4 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = case Bytes5 of
<<2:2,_:1,3:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes5,8,22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes5, 0 }
end,

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = case Bytes6 of
<<2:2,_:1,4:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes6,8,22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes6, 0 }
end,

   {Bytes8,Rb7} = ?RT_BER:restbytes2(RemBytes, Bytes7,ext),
   {{'ClearedSubDedicatedAccount', Term1, Term2, Term3, Term4, Term5}, Bytes8, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7}.


%%================================
%%  CommunityID
%%================================

'enc_CommunityID'({'CommunityID',Val}, TagIn) ->
   'enc_CommunityID'(Val, TagIn);

'enc_CommunityID'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_CommunityID'(Bytes, OptOrMand) ->
   'dec_CommunityID'(Bytes, OptOrMand, []).

'dec_CommunityID'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{0,9999999},TagIn++[], OptOrMand).



%%================================
%%  CounterDelta
%%================================

'enc_CounterDelta'({'CounterDelta',Val}, TagIn) ->
   'enc_CounterDelta'(Val, TagIn);

'enc_CounterDelta'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_CounterDelta'(Bytes, OptOrMand) ->
   'dec_CounterDelta'(Bytes, OptOrMand, []).

'dec_CounterDelta'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{-127,127},TagIn++[], OptOrMand).



%%================================
%%  CounterValue
%%================================

'enc_CounterValue'({'CounterValue',Val}, TagIn) ->
   'enc_CounterValue'(Val, TagIn);

'enc_CounterValue'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_CounterValue'(Bytes, OptOrMand) ->
   'dec_CounterValue'(Bytes, OptOrMand, []).

'dec_CounterValue'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{0,127},TagIn++[], OptOrMand).



%%================================
%%  CurrencyType
%%================================

'enc_CurrencyType'({'CurrencyType',Val}, TagIn) ->
   'enc_CurrencyType'(Val, TagIn);

'enc_CurrencyType'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, [{local,0},{euro,1}], TagIn ++ []).


'dec_CurrencyType'(Bytes, OptOrMand) ->
   'dec_CurrencyType'(Bytes, OptOrMand, []).

'dec_CurrencyType'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,[],[{local,0},{euro,1}],TagIn++[], OptOrMand).



%%================================
%%  Date
%%================================

'enc_Date'({'Date',Val}, TagIn) ->
   'enc_Date'(Val, TagIn);

'enc_Date'(Val, TagIn) ->
?RT_BER:encode_restricted_string([], Val, 22, TagIn ++ []).


'dec_Date'(Bytes, OptOrMand) ->
   'dec_Date'(Bytes, OptOrMand, []).

'dec_Date'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_restricted_string(Bytes,8,22,TagIn++[], no_length, OptOrMand).



%%================================
%%  DedicatedAccountID
%%================================

'enc_DedicatedAccountID'({'DedicatedAccountID',Val}, TagIn) ->
   'enc_DedicatedAccountID'(Val, TagIn);

'enc_DedicatedAccountID'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_DedicatedAccountID'(Bytes, OptOrMand) ->
   'dec_DedicatedAccountID'(Bytes, OptOrMand, []).

'dec_DedicatedAccountID'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{1,2147483647},TagIn++[], OptOrMand).



%%================================
%%  DisconnectionCode
%%================================

'enc_DisconnectionCode'({'DisconnectionCode',Val}, TagIn) ->
   'enc_DisconnectionCode'(Val, TagIn);

'enc_DisconnectionCode'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_DisconnectionCode'(Bytes, OptOrMand) ->
   'dec_DisconnectionCode'(Bytes, OptOrMand, []).

'dec_DisconnectionCode'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{0,255},TagIn++[], OptOrMand).



%%================================
%%  Duration
%%================================

'enc_Duration'({'Duration',Val}, TagIn) ->
   'enc_Duration'(Val, TagIn);

'enc_Duration'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_Duration'(Bytes, OptOrMand) ->
   'dec_Duration'(Bytes, OptOrMand, []).

'dec_Duration'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{0,99999},TagIn++[], OptOrMand).



%%================================
%%  FamilyAndFriendsAction
%%================================

'enc_FamilyAndFriendsAction'({'FamilyAndFriendsAction',Val}, TagIn) ->
   'enc_FamilyAndFriendsAction'(Val, TagIn);

'enc_FamilyAndFriendsAction'(Val, TagIn) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
set -> ?RT_BER:encode_enumerated(0,TagIn ++ []);
add -> ?RT_BER:encode_enumerated(1,TagIn ++ []);
delete -> ?RT_BER:encode_enumerated(2,TagIn ++ []);
Enumval2 -> exit({error,{asn1, {enumerated_not_in_range,Enumval2}}})
end.


'dec_FamilyAndFriendsAction'(Bytes, OptOrMand) ->
   'dec_FamilyAndFriendsAction'(Bytes, OptOrMand, []).

'dec_FamilyAndFriendsAction'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_enumerated(Bytes,[],[{set,0},{add,1},{delete,2}],TagIn++[], OptOrMand).



%%================================
%%  FamilyAndFriendsIndicator
%%================================

'enc_FamilyAndFriendsIndicator'({'FamilyAndFriendsIndicator',Val}, TagIn) ->
   'enc_FamilyAndFriendsIndicator'(Val, TagIn);

'enc_FamilyAndFriendsIndicator'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_FamilyAndFriendsIndicator'(Bytes, OptOrMand) ->
   'dec_FamilyAndFriendsIndicator'(Bytes, OptOrMand, []).

'dec_FamilyAndFriendsIndicator'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{1,65535},TagIn++[], OptOrMand).



%%================================
%%  IDString
%%================================

'enc_IDString'({'IDString',Val}, TagIn) ->
   'enc_IDString'(Val, TagIn);

'enc_IDString'(Val, TagIn) ->
?RT_BER:encode_restricted_string([], Val, 22, TagIn ++ []).


'dec_IDString'(Bytes, OptOrMand) ->
   'dec_IDString'(Bytes, OptOrMand, []).

'dec_IDString'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_restricted_string(Bytes,{1,255},22,TagIn++[], no_length, OptOrMand).



%%================================
%%  IndividualPriceFactorHistory
%%================================
'enc_IndividualPriceFactorHistory'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(2,Val,individualPriceFactor), 22, [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2   External SDPOUTPUTCDR:ServiceUnits
%%-------------------------------------------------
   {EncBytes2,EncLen2} = 'enc_ServiceUnits'(?RT_BER:cindex(3,Val,units), [{tag,128,1,'IMPLICIT',32}]),

   BytesSoFar = [EncBytes1, EncBytes2],
  LenSoFar = EncLen1 + EncLen2,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_IndividualPriceFactorHistory'(Bytes, OptOrMand) ->
   'dec_IndividualPriceFactorHistory'(Bytes, OptOrMand, []).

'dec_IndividualPriceFactorHistory'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_restricted_string(Bytes2,{1,10},22,[{tag,128,0,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 2   External SDPOUTPUTCDR:ServiceUnits
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = 'dec_ServiceUnits'(Bytes3, mandatory, [{tag,128,1,'IMPLICIT',32}]),

   {Bytes5,Rb4} = ?RT_BER:restbytes2(RemBytes, Bytes4,ext),
   {{'IndividualPriceFactorHistory', Term1, Term2}, Bytes5, Rb1+Rb2+Rb3+Rb4}.


%%================================
%%  Integer32
%%================================

'enc_Integer32'({'Integer32',Val}, TagIn) ->
   'enc_Integer32'(Val, TagIn);

'enc_Integer32'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_Integer32'(Bytes, OptOrMand) ->
   'dec_Integer32'(Bytes, OptOrMand, []).

'dec_Integer32'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{-2147483648,2147483647},TagIn++[], OptOrMand).



%%================================
%%  Integer64
%%================================

'enc_Integer64'({'Integer64',Val}, TagIn) ->
   'enc_Integer64'(Val, TagIn);

'enc_Integer64'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_Integer64'(Bytes, OptOrMand) ->
   'dec_Integer64'(Bytes, OptOrMand, []).

'dec_Integer64'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{-9223372036854775808,9223372036854775807},TagIn++[], OptOrMand).



%%================================
%%  Language
%%================================

'enc_Language'({'Language',Val}, TagIn) ->
   'enc_Language'(Val, TagIn);

'enc_Language'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_Language'(Bytes, OptOrMand) ->
   'dec_Language'(Bytes, OptOrMand, []).

'dec_Language'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{1,4},TagIn++[], OptOrMand).



%%================================
%%  LifeCycleInformation
%%================================
'enc_LifeCycleInformation'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes1,EncLen1} =  case ?RT_BER:cindex(2,Val,supervisionExpDateBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(2,Val,supervisionExpDateBefore), 22, [{tag,128,0,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 2 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes2,EncLen2} =  case ?RT_BER:cindex(3,Val,supervisionExpDateAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(3,Val,supervisionExpDateAfter), 22, [{tag,128,1,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 3 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes3,EncLen3} =  case ?RT_BER:cindex(4,Val,creditClearancePeriodBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(4,Val,creditClearancePeriodBefore), [{tag,128,2,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 4 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes4,EncLen4} =  case ?RT_BER:cindex(5,Val,creditClearancePeriodAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(5,Val,creditClearancePeriodAfter), [{tag,128,3,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes5,EncLen5} =  case ?RT_BER:cindex(6,Val,servFeeExpDateBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(6,Val,servFeeExpDateBefore), 22, [{tag,128,4,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes6,EncLen6} =  case ?RT_BER:cindex(7,Val,servFeeExpDateAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(7,Val,servFeeExpDateAfter), 22, [{tag,128,5,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 7 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes7,EncLen7} =  case ?RT_BER:cindex(8,Val,serviceRemovalPeriodBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(8,Val,serviceRemovalPeriodBefore), [{tag,128,6,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 8 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes8,EncLen8} =  case ?RT_BER:cindex(9,Val,serviceRemovalPeriodAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(9,Val,serviceRemovalPeriodAfter), [{tag,128,7,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes9,EncLen9} =  case ?RT_BER:cindex(10,Val,accountFlagsBefore) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(10,Val,accountFlagsBefore), 22, [{tag,128,8,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes10,EncLen10} =  case ?RT_BER:cindex(11,Val,accountFlagsAfter) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(11,Val,accountFlagsAfter), 22, [{tag,128,9,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7, EncBytes8, EncBytes9, EncBytes10],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7 + EncLen8 + EncLen9 + EncLen10,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_LifeCycleInformation'(Bytes, OptOrMand) ->
   'dec_LifeCycleInformation'(Bytes, OptOrMand, []).

'dec_LifeCycleInformation'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = case Bytes2 of
<<2:2,_:1,0:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes2,8,22,[{tag,128,0,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes2, 0 }
end,

%%-------------------------------------------------
%% attribute number 2 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = case Bytes3 of
<<2:2,_:1,1:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes3,8,22,[{tag,128,1,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes3, 0 }
end,

%%-------------------------------------------------
%% attribute number 3 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = case Bytes4 of
<<2:2,_:1,2:5,_/binary>> ->
?RT_BER:decode_integer(Bytes4,{0,1023},[{tag,128,2,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes4, 0 }
end,

%%-------------------------------------------------
%% attribute number 4 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = case Bytes5 of
<<2:2,_:1,3:5,_/binary>> ->
?RT_BER:decode_integer(Bytes5,{0,1023},[{tag,128,3,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes5, 0 }
end,

%%-------------------------------------------------
%% attribute number 5 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = case Bytes6 of
<<2:2,_:1,4:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes6,8,22,[{tag,128,4,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes6, 0 }
end,

%%-------------------------------------------------
%% attribute number 6 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = case Bytes7 of
<<2:2,_:1,5:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes7,8,22,[{tag,128,5,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes7, 0 }
end,

%%-------------------------------------------------
%% attribute number 7 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = case Bytes8 of
<<2:2,_:1,6:5,_/binary>> ->
?RT_BER:decode_integer(Bytes8,{0,1023},[{tag,128,6,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes8, 0 }
end,

%%-------------------------------------------------
%% attribute number 8 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term8,Bytes10,Rb9} = case Bytes9 of
<<2:2,_:1,7:5,_/binary>> ->
?RT_BER:decode_integer(Bytes9,{0,1023},[{tag,128,7,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes9, 0 }
end,

%%-------------------------------------------------
%% attribute number 9 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term9,Bytes11,Rb10} = case Bytes10 of
<<2:2,_:1,8:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes10,8,22,[{tag,128,8,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes10, 0 }
end,

%%-------------------------------------------------
%% attribute number 10 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term10,Bytes12,Rb11} = case Bytes11 of
<<2:2,_:1,9:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes11,8,22,[{tag,128,9,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes11, 0 }
end,

   {Bytes13,Rb12} = ?RT_BER:restbytes2(RemBytes, Bytes12,ext),
   {{'LifeCycleInformation', Term1, Term2, Term3, Term4, Term5, Term6, Term7, Term8, Term9, Term10}, Bytes13, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9+Rb10+Rb11+Rb12}.


%%================================
%%  MonetaryUnits
%%================================
'enc_MonetaryUnits'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,amount), [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER
%%-------------------------------------------------
   {EncBytes2,EncLen2} = ?RT_BER:encode_integer([], ?RT_BER:cindex(3,Val,decimals), [{tag,128,1,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 3 with type INTEGER
%%-------------------------------------------------
   {EncBytes3,EncLen3} = ?RT_BER:encode_integer([], ?RT_BER:cindex(4,Val,currency), [{tag,128,2,'IMPLICIT',32}]),

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3],
  LenSoFar = EncLen1 + EncLen2 + EncLen3,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_MonetaryUnits'(Bytes, OptOrMand) ->
   'dec_MonetaryUnits'(Bytes, OptOrMand, []).

'dec_MonetaryUnits'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_integer(Bytes2,{-9223372036854775808,9223372036854775807},[{tag,128,0,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_integer(Bytes3,{-2147483648,2147483647},[{tag,128,1,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 3 with type INTEGER
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = ?RT_BER:decode_integer(Bytes4,{0,4294967295},[{tag,128,2,'IMPLICIT',32}], mandatory),

   {Bytes6,Rb5} = ?RT_BER:restbytes2(RemBytes, Bytes5,noext),
   {{'MonetaryUnits', Term1, Term2, Term3}, Bytes6, Rb1+Rb2+Rb3+Rb4+Rb5}.


%%================================
%%  MoneyAmount
%%================================

'enc_MoneyAmount'({'MoneyAmount',Val}, TagIn) ->
   'enc_MoneyAmount'(Val, TagIn);

'enc_MoneyAmount'(Val, TagIn) ->
?RT_BER:encode_restricted_string([], Val, 22, TagIn ++ []).


'dec_MoneyAmount'(Bytes, OptOrMand) ->
   'dec_MoneyAmount'(Bytes, OptOrMand, []).

'dec_MoneyAmount'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_restricted_string(Bytes,{1,17},22,TagIn++[], no_length, OptOrMand).



%%================================
%%  NodeID
%%================================

'enc_NodeID'({'NodeID',Val}, TagIn) ->
   'enc_NodeID'(Val, TagIn);

'enc_NodeID'(Val, TagIn) ->
?RT_BER:encode_restricted_string([], Val, 22, TagIn ++ []).


'dec_NodeID'(Bytes, OptOrMand) ->
   'dec_NodeID'(Bytes, OptOrMand, []).

'dec_NodeID'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_restricted_string(Bytes,{1,20},22,TagIn++[], no_length, OptOrMand).



%%================================
%%  NodeType
%%================================

'enc_NodeType'({'NodeType',Val}, TagIn) ->
   'enc_NodeType'(Val, TagIn);

'enc_NodeType'(Val, TagIn) ->
?RT_BER:encode_restricted_string([], Val, 22, TagIn ++ []).


'dec_NodeType'(Bytes, OptOrMand) ->
   'dec_NodeType'(Bytes, OptOrMand, []).

'dec_NodeType'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_restricted_string(Bytes,{1,8},22,TagIn++[], no_length, OptOrMand).



%%================================
%%  NumberString
%%================================

'enc_NumberString'({'NumberString',Val}, TagIn) ->
   'enc_NumberString'(Val, TagIn);

'enc_NumberString'(Val, TagIn) ->
?RT_BER:encode_restricted_string([], Val, 22, TagIn ++ []).


'dec_NumberString'(Bytes, OptOrMand) ->
   'dec_NumberString'(Bytes, OptOrMand, []).

'dec_NumberString'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_restricted_string(Bytes,{1,30},22,TagIn++[], no_length, OptOrMand).



%%================================
%%  OfferID
%%================================

'enc_OfferID'({'OfferID',Val}, TagIn) ->
   'enc_OfferID'(Val, TagIn);

'enc_OfferID'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_OfferID'(Bytes, OptOrMand) ->
   'dec_OfferID'(Bytes, OptOrMand, []).

'dec_OfferID'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{1,2147483647},TagIn++[], OptOrMand).



%%================================
%%  Owner
%%================================

'enc_Owner'({'Owner',Val}, TagIn) ->
   'enc_Owner'(Val, TagIn);

'enc_Owner'(Val, TagIn) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
subscriber -> ?RT_BER:encode_enumerated(1,TagIn ++ []);
account -> ?RT_BER:encode_enumerated(2,TagIn ++ []);
Enumval2 -> exit({error,{asn1, {enumerated_not_in_range,Enumval2}}})
end.


'dec_Owner'(Bytes, OptOrMand) ->
   'dec_Owner'(Bytes, OptOrMand, []).

'dec_Owner'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_enumerated(Bytes,[],[{subscriber,1},{account,2}],TagIn++[], OptOrMand).



%%================================
%%  Percent
%%================================

'enc_Percent'({'Percent',Val}, TagIn) ->
   'enc_Percent'(Val, TagIn);

'enc_Percent'(Val, TagIn) ->
?RT_BER:encode_restricted_string([], Val, 22, TagIn ++ []).


'dec_Percent'(Bytes, OptOrMand) ->
   'dec_Percent'(Bytes, OptOrMand, []).

'dec_Percent'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_restricted_string(Bytes,{1,10},22,TagIn++[], no_length, OptOrMand).



%%================================
%%  Period
%%================================

'enc_Period'({'Period',Val}, TagIn) ->
   'enc_Period'(Val, TagIn);

'enc_Period'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_Period'(Bytes, OptOrMand) ->
   'dec_Period'(Bytes, OptOrMand, []).

'dec_Period'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{0,1023},TagIn++[], OptOrMand).



%%================================
%%  PeriodicResetID
%%================================

'enc_PeriodicResetID'({'PeriodicResetID',Val}, TagIn) ->
   'enc_PeriodicResetID'(Val, TagIn);

'enc_PeriodicResetID'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_PeriodicResetID'(Bytes, OptOrMand) ->
   'dec_PeriodicResetID'(Bytes, OptOrMand, []).

'dec_PeriodicResetID'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{0,255},TagIn++[], OptOrMand).



%%================================
%%  PeriodType
%%================================

'enc_PeriodType'({'PeriodType',Val}, TagIn) ->
   'enc_PeriodType'(Val, TagIn);

'enc_PeriodType'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, [{day,0},{month,1}], TagIn ++ []).


'dec_PeriodType'(Bytes, OptOrMand) ->
   'dec_PeriodType'(Bytes, OptOrMand, []).

'dec_PeriodType'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,[],[{day,0},{month,1}],TagIn++[], OptOrMand).



%%================================
%%  PreActReasonCode
%%================================

'enc_PreActReasonCode'({'PreActReasonCode',Val}, TagIn) ->
   'enc_PreActReasonCode'(Val, TagIn);

'enc_PreActReasonCode'(Val, TagIn) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
origInsideHPLMN -> ?RT_BER:encode_enumerated(0,TagIn ++ []);
origOutsideHPLMNwithCAPv1 -> ?RT_BER:encode_enumerated(1,TagIn ++ []);
origOutsideHPLMNwithCAPv2 -> ?RT_BER:encode_enumerated(2,TagIn ++ []);
uSSDCallBack -> ?RT_BER:encode_enumerated(3,TagIn ++ []);
origOutsideHPLMNwithCAPv3 -> ?RT_BER:encode_enumerated(4,TagIn ++ []);
firstIVRcall -> ?RT_BER:encode_enumerated(5,TagIn ++ []);
firstUSSDaccess -> ?RT_BER:encode_enumerated(6,TagIn ++ []);
firstExpiryDateSet -> ?RT_BER:encode_enumerated(7,TagIn ++ []);
Enumval2 -> exit({error,{asn1, {enumerated_not_in_range,Enumval2}}})
end.


'dec_PreActReasonCode'(Bytes, OptOrMand) ->
   'dec_PreActReasonCode'(Bytes, OptOrMand, []).

'dec_PreActReasonCode'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_enumerated(Bytes,[],[{origInsideHPLMN,0},{origOutsideHPLMNwithCAPv1,1},{origOutsideHPLMNwithCAPv2,2},{uSSDCallBack,3},{origOutsideHPLMNwithCAPv3,4},{firstIVRcall,5},{firstUSSDaccess,6},{firstExpiryDateSet,7}],TagIn++[], OptOrMand).



%%================================
%%  PromotionPlan
%%================================

'enc_PromotionPlan'({'PromotionPlan',Val}, TagIn) ->
   'enc_PromotionPlan'(Val, TagIn);

'enc_PromotionPlan'(Val, TagIn) ->
?RT_BER:encode_restricted_string([], Val, 22, TagIn ++ []).


'dec_PromotionPlan'(Bytes, OptOrMand) ->
   'dec_PromotionPlan'(Bytes, OptOrMand, []).

'dec_PromotionPlan'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_restricted_string(Bytes,{1,4},22,TagIn++[], no_length, OptOrMand).



%%================================
%%  RatedDurations
%%================================
'enc_RatedDurations'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes1,EncLen1} =  case ?RT_BER:cindex(2,Val,debitDuration) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,debitDuration), [{tag,128,0,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes2,EncLen2} =  case ?RT_BER:cindex(3,Val,creditDuration) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(3,Val,creditDuration), [{tag,128,1,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 3 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes3,EncLen3} =  case ?RT_BER:cindex(4,Val,freeDuration) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(4,Val,freeDuration), [{tag,128,2,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3],
  LenSoFar = EncLen1 + EncLen2 + EncLen3,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_RatedDurations'(Bytes, OptOrMand) ->
   'dec_RatedDurations'(Bytes, OptOrMand, []).

'dec_RatedDurations'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = case Bytes2 of
<<2:2,_:1,0:5,_/binary>> ->
?RT_BER:decode_integer(Bytes2,{0,99999},[{tag,128,0,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes2, 0 }
end,

%%-------------------------------------------------
%% attribute number 2 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = case Bytes3 of
<<2:2,_:1,1:5,_/binary>> ->
?RT_BER:decode_integer(Bytes3,{0,99999},[{tag,128,1,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes3, 0 }
end,

%%-------------------------------------------------
%% attribute number 3 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = case Bytes4 of
<<2:2,_:1,2:5,_/binary>> ->
?RT_BER:decode_integer(Bytes4,{0,99999},[{tag,128,2,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes4, 0 }
end,

   {Bytes6,Rb5} = ?RT_BER:restbytes2(RemBytes, Bytes5,ext),
   {{'RatedDurations', Term1, Term2, Term3}, Bytes6, Rb1+Rb2+Rb3+Rb4+Rb5}.


%%================================
%%  Reason
%%================================

'enc_Reason'({'Reason',Val}, TagIn) ->
   'enc_Reason'(Val, TagIn);

'enc_Reason'(Val, TagIn) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
serviceClassChange -> ?RT_BER:encode_enumerated(1,TagIn ++ []);
subscriberDeleted -> ?RT_BER:encode_enumerated(2,TagIn ++ []);
creditClearancePeriodExpired -> ?RT_BER:encode_enumerated(3,TagIn ++ []);
dedicatedAccountExpired -> ?RT_BER:encode_enumerated(4,TagIn ++ []);
other -> ?RT_BER:encode_enumerated(5,TagIn ++ []);
subDedicatedAccountExpired -> ?RT_BER:encode_enumerated(6,TagIn ++ []);
offerExpired -> ?RT_BER:encode_enumerated(7,TagIn ++ []);
fafExpired -> ?RT_BER:encode_enumerated(8,TagIn ++ []);
Enumval2 -> exit({error,{asn1, {enumerated_not_in_range,Enumval2}}})
end.


'dec_Reason'(Bytes, OptOrMand) ->
   'dec_Reason'(Bytes, OptOrMand, []).

'dec_Reason'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_enumerated(Bytes,[],{[{serviceClassChange,1},{subscriberDeleted,2},{creditClearancePeriodExpired,3},{dedicatedAccountExpired,4},{other,5},{subDedicatedAccountExpired,6},{offerExpired,7},{fafExpired,8}],[]},TagIn++[], OptOrMand).



%%================================
%%  RecordSequenceNumberString
%%================================

'enc_RecordSequenceNumberString'({'RecordSequenceNumberString',Val}, TagIn) ->
   'enc_RecordSequenceNumberString'(Val, TagIn);

'enc_RecordSequenceNumberString'(Val, TagIn) ->
?RT_BER:encode_restricted_string([], Val, 22, TagIn ++ []).


'dec_RecordSequenceNumberString'(Bytes, OptOrMand) ->
   'dec_RecordSequenceNumberString'(Bytes, OptOrMand, []).

'dec_RecordSequenceNumberString'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_restricted_string(Bytes,{1,20},22,TagIn++[], no_length, OptOrMand).



%%================================
%%  RecordType
%%================================

'enc_RecordType'({'RecordType',Val}, TagIn) ->
   'enc_RecordType'(Val, TagIn);

'enc_RecordType'(Val, TagIn) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
mobileOriginating -> ?RT_BER:encode_enumerated(1,TagIn ++ []);
mobileTerminating -> ?RT_BER:encode_enumerated(2,TagIn ++ []);
callForwarding -> ?RT_BER:encode_enumerated(3,TagIn ++ []);
mobileOriginatingSMSinSMSC -> ?RT_BER:encode_enumerated(4,TagIn ++ []);
mobileTerminatingSMSinSMSC -> ?RT_BER:encode_enumerated(5,TagIn ++ []);
gprsCDR -> ?RT_BER:encode_enumerated(6,TagIn ++ []);
mobileOriginatingSMSinGPRS -> ?RT_BER:encode_enumerated(7,TagIn ++ []);
mobileTerminatingSMSinGPRS -> ?RT_BER:encode_enumerated(8,TagIn ++ []);
chargeEventCDR -> ?RT_BER:encode_enumerated(10,TagIn ++ []);
Enumval2 -> exit({error,{asn1, {enumerated_not_in_range,Enumval2}}})
end.


'dec_RecordType'(Bytes, OptOrMand) ->
   'dec_RecordType'(Bytes, OptOrMand, []).

'dec_RecordType'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_enumerated(Bytes,[],[{mobileOriginating,1},{mobileTerminating,2},{callForwarding,3},{mobileOriginatingSMSinSMSC,4},{mobileTerminatingSMSinSMSC,5},{gprsCDR,6},{mobileOriginatingSMSinGPRS,7},{mobileTerminatingSMSinGPRS,8},{chargeEventCDR,10}],TagIn++[], OptOrMand).



%%================================
%%  RelatedNumberString
%%================================

'enc_RelatedNumberString'({'RelatedNumberString',Val}, TagIn) ->
   'enc_RelatedNumberString'(Val, TagIn);

'enc_RelatedNumberString'(Val, TagIn) ->
?RT_BER:encode_restricted_string([], Val, 22, TagIn ++ []).


'dec_RelatedNumberString'(Bytes, OptOrMand) ->
   'dec_RelatedNumberString'(Bytes, OptOrMand, []).

'dec_RelatedNumberString'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_restricted_string(Bytes,{0,63},22,TagIn++[], no_length, OptOrMand).



%%================================
%%  RemovedFaF
%%================================
'enc_RemovedFaF'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(2,Val,familyAndFriendsNumber), 22, [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER
%%-------------------------------------------------
   {EncBytes2,EncLen2} = ?RT_BER:encode_integer([], ?RT_BER:cindex(3,Val,familyAndFriendsIndicator), [{tag,128,1,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 3 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes3,EncLen3} =  case ?RT_BER:cindex(4,Val,fafExpiryDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,fafExpiryDate), 22, [{tag,128,2,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 4 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes4,EncLen4} =  case ?RT_BER:cindex(5,Val,fafStartDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(5,Val,fafStartDate), 22, [{tag,128,3,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 5 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes5,EncLen5} =  case ?RT_BER:cindex(6,Val,offerID) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(6,Val,offerID), [{tag,128,4,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 6 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes6,EncLen6} =  case ?RT_BER:cindex(7,Val,reason) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(7,Val,reason) of {_,Enumval6}->Enumval6;_->?RT_BER:cindex(7,Val,reason) end) of
serviceClassChange -> ?RT_BER:encode_enumerated(1,[{tag,128,5,'IMPLICIT',32}]);
subscriberDeleted -> ?RT_BER:encode_enumerated(2,[{tag,128,5,'IMPLICIT',32}]);
creditClearancePeriodExpired -> ?RT_BER:encode_enumerated(3,[{tag,128,5,'IMPLICIT',32}]);
dedicatedAccountExpired -> ?RT_BER:encode_enumerated(4,[{tag,128,5,'IMPLICIT',32}]);
other -> ?RT_BER:encode_enumerated(5,[{tag,128,5,'IMPLICIT',32}]);
subDedicatedAccountExpired -> ?RT_BER:encode_enumerated(6,[{tag,128,5,'IMPLICIT',32}]);
offerExpired -> ?RT_BER:encode_enumerated(7,[{tag,128,5,'IMPLICIT',32}]);
fafExpired -> ?RT_BER:encode_enumerated(8,[{tag,128,5,'IMPLICIT',32}]);
Enumval7 -> exit({error,{asn1, {enumerated_not_in_range,Enumval7}}})
end
       end,

%%-------------------------------------------------
%% attribute number 7 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes7,EncLen7} =  case ?RT_BER:cindex(8,Val,owner) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(8,Val,owner) of {_,Enumval8}->Enumval8;_->?RT_BER:cindex(8,Val,owner) end) of
subscriber -> ?RT_BER:encode_enumerated(1,[{tag,128,6,'IMPLICIT',32}]);
account -> ?RT_BER:encode_enumerated(2,[{tag,128,6,'IMPLICIT',32}]);
Enumval9 -> exit({error,{asn1, {enumerated_not_in_range,Enumval9}}})
end
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6, EncBytes7],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6 + EncLen7,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_RemovedFaF'(Bytes, OptOrMand) ->
   'dec_RemovedFaF'(Bytes, OptOrMand, []).

'dec_RemovedFaF'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type IA5String
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_restricted_string(Bytes2,{1,30},22,[{tag,128,0,'IMPLICIT',32}], no_length, mandatory),

%%-------------------------------------------------
%% attribute number 2 with type INTEGER
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = ?RT_BER:decode_integer(Bytes3,{1,65535},[{tag,128,1,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 3 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = case Bytes4 of
<<2:2,_:1,2:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes4,8,22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes4, 0 }
end,

%%-------------------------------------------------
%% attribute number 4 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = case Bytes5 of
<<2:2,_:1,3:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes5,8,22,[{tag,128,3,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes5, 0 }
end,

%%-------------------------------------------------
%% attribute number 5 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = case Bytes6 of
<<2:2,_:1,4:5,_/binary>> ->
?RT_BER:decode_integer(Bytes6,{1,2147483647},[{tag,128,4,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes6, 0 }
end,

%%-------------------------------------------------
%% attribute number 6 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = case Bytes7 of
<<2:2,_:1,5:5,_/binary>> ->
?RT_BER:decode_enumerated(Bytes7,[],{[{serviceClassChange,1},{subscriberDeleted,2},{creditClearancePeriodExpired,3},{dedicatedAccountExpired,4},{other,5},{subDedicatedAccountExpired,6},{offerExpired,7},{fafExpired,8}],[]},[{tag,128,5,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes7, 0 }
end,

%%-------------------------------------------------
%% attribute number 7 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term7,Bytes9,Rb8} = case Bytes8 of
<<2:2,_:1,6:5,_/binary>> ->
?RT_BER:decode_enumerated(Bytes8,[],[{subscriber,1},{account,2}],[{tag,128,6,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes8, 0 }
end,

   {Bytes10,Rb9} = ?RT_BER:restbytes2(RemBytes, Bytes9,ext),
   {{'RemovedFaF', Term1, Term2, Term3, Term4, Term5, Term6, Term7}, Bytes10, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8+Rb9}.


%%================================
%%  RemovedOffer
%%================================
'enc_RemovedOffer'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {EncBytes1,EncLen1} = ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,offerID), [{tag,128,0,'IMPLICIT',32}]),

%%-------------------------------------------------
%% attribute number 2 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes2,EncLen2} =  case ?RT_BER:cindex(3,Val,offerExpiryDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(3,Val,offerExpiryDate), 22, [{tag,128,1,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 3 with type IA5String OPTIONAL
%%-------------------------------------------------
   {EncBytes3,EncLen3} =  case ?RT_BER:cindex(4,Val,offerStartDate) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_restricted_string([], ?RT_BER:cindex(4,Val,offerStartDate), 22, [{tag,128,2,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 4 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {EncBytes4,EncLen4} =  case ?RT_BER:cindex(5,Val,reason) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            case (case ?RT_BER:cindex(5,Val,reason) of {_,Enumval4}->Enumval4;_->?RT_BER:cindex(5,Val,reason) end) of
serviceClassChange -> ?RT_BER:encode_enumerated(1,[{tag,128,3,'IMPLICIT',32}]);
subscriberDeleted -> ?RT_BER:encode_enumerated(2,[{tag,128,3,'IMPLICIT',32}]);
creditClearancePeriodExpired -> ?RT_BER:encode_enumerated(3,[{tag,128,3,'IMPLICIT',32}]);
dedicatedAccountExpired -> ?RT_BER:encode_enumerated(4,[{tag,128,3,'IMPLICIT',32}]);
other -> ?RT_BER:encode_enumerated(5,[{tag,128,3,'IMPLICIT',32}]);
subDedicatedAccountExpired -> ?RT_BER:encode_enumerated(6,[{tag,128,3,'IMPLICIT',32}]);
offerExpired -> ?RT_BER:encode_enumerated(7,[{tag,128,3,'IMPLICIT',32}]);
fafExpired -> ?RT_BER:encode_enumerated(8,[{tag,128,3,'IMPLICIT',32}]);
Enumval5 -> exit({error,{asn1, {enumerated_not_in_range,Enumval5}}})
end
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_RemovedOffer'(Bytes, OptOrMand) ->
   'dec_RemovedOffer'(Bytes, OptOrMand, []).

'dec_RemovedOffer'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = ?RT_BER:decode_integer(Bytes2,{1,2147483647},[{tag,128,0,'IMPLICIT',32}], mandatory),

%%-------------------------------------------------
%% attribute number 2 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = case Bytes3 of
<<2:2,_:1,1:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes3,8,22,[{tag,128,1,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes3, 0 }
end,

%%-------------------------------------------------
%% attribute number 3 with type IA5String OPTIONAL
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = case Bytes4 of
<<2:2,_:1,2:5,_/binary>> ->
?RT_BER:decode_restricted_string(Bytes4,8,22,[{tag,128,2,'IMPLICIT',32}], no_length, mandatory);
_ ->
{ asn1_NOVALUE, Bytes4, 0 }
end,

%%-------------------------------------------------
%% attribute number 4 with type ENUMERATED OPTIONAL
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = case Bytes5 of
<<2:2,_:1,3:5,_/binary>> ->
?RT_BER:decode_enumerated(Bytes5,[],{[{serviceClassChange,1},{subscriberDeleted,2},{creditClearancePeriodExpired,3},{dedicatedAccountExpired,4},{other,5},{subDedicatedAccountExpired,6},{offerExpired,7},{fafExpired,8}],[]},[{tag,128,3,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes5, 0 }
end,

   {Bytes7,Rb6} = ?RT_BER:restbytes2(RemBytes, Bytes6,ext),
   {{'RemovedOffer', Term1, Term2, Term3, Term4}, Bytes7, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6}.


%%================================
%%  ReplenishmentID
%%================================

'enc_ReplenishmentID'({'ReplenishmentID',Val}, TagIn) ->
   'enc_ReplenishmentID'(Val, TagIn);

'enc_ReplenishmentID'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_ReplenishmentID'(Bytes, OptOrMand) ->
   'dec_ReplenishmentID'(Bytes, OptOrMand, []).

'dec_ReplenishmentID'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{0,255},TagIn++[], OptOrMand).



%%================================
%%  SelectedCommunityIndicator
%%================================

'enc_SelectedCommunityIndicator'({'SelectedCommunityIndicator',Val}, TagIn) ->
   'enc_SelectedCommunityIndicator'(Val, TagIn);

'enc_SelectedCommunityIndicator'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_SelectedCommunityIndicator'(Bytes, OptOrMand) ->
   'dec_SelectedCommunityIndicator'(Bytes, OptOrMand, []).

'dec_SelectedCommunityIndicator'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{0,9999999},TagIn++[], OptOrMand).



%%================================
%%  ServFeeDeductSuccessCode
%%================================

'enc_ServFeeDeductSuccessCode'({'ServFeeDeductSuccessCode',Val}, TagIn) ->
   'enc_ServFeeDeductSuccessCode'(Val, TagIn);

'enc_ServFeeDeductSuccessCode'(Val, TagIn) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
ok -> ?RT_BER:encode_enumerated(1,TagIn ++ []);
okServiceExpired -> ?RT_BER:encode_enumerated(2,TagIn ++ []);
okServiceClassChange -> ?RT_BER:encode_enumerated(3,TagIn ++ []);
okNoAction -> ?RT_BER:encode_enumerated(4,TagIn ++ []);
nokServiceClassChange -> ?RT_BER:encode_enumerated(5,TagIn ++ []);
okFirstDeductionSuppressed -> ?RT_BER:encode_enumerated(6,TagIn ++ []);
okServiceDeactivated -> ?RT_BER:encode_enumerated(7,TagIn ++ []);
serviceFeeTypeDisconnectedDebtCleared -> ?RT_BER:encode_enumerated(8,TagIn ++ []);
partialDeductionWhenAccumulatedDeduction -> ?RT_BER:encode_enumerated(9,TagIn ++ []);
Enumval2 -> exit({error,{asn1, {enumerated_not_in_range,Enumval2}}})
end.


'dec_ServFeeDeductSuccessCode'(Bytes, OptOrMand) ->
   'dec_ServFeeDeductSuccessCode'(Bytes, OptOrMand, []).

'dec_ServFeeDeductSuccessCode'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_enumerated(Bytes,[],[{ok,1},{okServiceExpired,2},{okServiceClassChange,3},{okNoAction,4},{nokServiceClassChange,5},{okFirstDeductionSuppressed,6},{okServiceDeactivated,7},{serviceFeeTypeDisconnectedDebtCleared,8},{partialDeductionWhenAccumulatedDeduction,9}],TagIn++[], OptOrMand).



%%================================
%%  ServiceClass
%%================================

'enc_ServiceClass'({'ServiceClass',Val}, TagIn) ->
   'enc_ServiceClass'(Val, TagIn);

'enc_ServiceClass'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_ServiceClass'(Bytes, OptOrMand) ->
   'dec_ServiceClass'(Bytes, OptOrMand, []).

'dec_ServiceClass'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{0,9999},TagIn++[], OptOrMand).



%%================================
%%  ServiceFeeType
%%================================

'enc_ServiceFeeType'({'ServiceFeeType',Val}, TagIn) ->
   'enc_ServiceFeeType'(Val, TagIn);

'enc_ServiceFeeType'(Val, TagIn) ->
?RT_BER:encode_restricted_string([], Val, 22, TagIn ++ []).


'dec_ServiceFeeType'(Bytes, OptOrMand) ->
   'dec_ServiceFeeType'(Bytes, OptOrMand, []).

'dec_ServiceFeeType'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_restricted_string(Bytes,{1,10},22,TagIn++[], no_length, OptOrMand).



%%================================
%%  ServiceOfferings
%%================================

'enc_ServiceOfferings'({'ServiceOfferings',Val}, TagIn) ->
   'enc_ServiceOfferings'(Val, TagIn);

'enc_ServiceOfferings'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_ServiceOfferings'(Bytes, OptOrMand) ->
   'dec_ServiceOfferings'(Bytes, OptOrMand, []).

'dec_ServiceOfferings'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{0,2147483647},TagIn++[], OptOrMand).



%%================================
%%  ServiceUnits
%%================================
'enc_ServiceUnits'(Val, TagIn) ->

%%-------------------------------------------------
%% attribute number 1 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes1,EncLen1} =  case ?RT_BER:cindex(2,Val,timeUnit) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(2,Val,timeUnit), [{tag,128,1,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 2   External SDPOUTPUTCDR:MonetaryUnits OPTIONAL
%%-------------------------------------------------
   {EncBytes2,EncLen2} =  case ?RT_BER:cindex(3,Val,moneyUnit) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            'enc_MonetaryUnits'(?RT_BER:cindex(3,Val,moneyUnit), [{tag,128,2,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 3 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes3,EncLen3} =  case ?RT_BER:cindex(4,Val,totalOctetsUnit) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(4,Val,totalOctetsUnit), [{tag,128,3,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 4 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes4,EncLen4} =  case ?RT_BER:cindex(5,Val,uplinkOctetsUnit) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(5,Val,uplinkOctetsUnit), [{tag,128,4,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 5 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes5,EncLen5} =  case ?RT_BER:cindex(6,Val,downlinkOctetsUnit) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(6,Val,downlinkOctetsUnit), [{tag,128,5,'IMPLICIT',32}])
       end,

%%-------------------------------------------------
%% attribute number 6 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {EncBytes6,EncLen6} =  case ?RT_BER:cindex(7,Val,serviceSpecificUnit) of
         asn1_NOVALUE -> {<<>>,0};
         _ ->
            ?RT_BER:encode_integer([], ?RT_BER:cindex(7,Val,serviceSpecificUnit), [{tag,128,6,'IMPLICIT',32}])
       end,

   BytesSoFar = [EncBytes1, EncBytes2, EncBytes3, EncBytes4, EncBytes5, EncBytes6],
  LenSoFar = EncLen1 + EncLen2 + EncLen3 + EncLen4 + EncLen5 + EncLen6,
  ?RT_BER:encode_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], BytesSoFar, LenSoFar).


'dec_ServiceUnits'(Bytes, OptOrMand) ->
   'dec_ServiceUnits'(Bytes, OptOrMand, []).

'dec_ServiceUnits'(Bytes, OptOrMand, TagIn) ->
   %%-------------------------------------------------
   %% decode tag and length 
   %%-------------------------------------------------
   {{_,Len},Bytes1,Rb1} = ?RT_BER:check_tags(TagIn ++ [{tag,0,16,'IMPLICIT',32}], Bytes, OptOrMand), 
{Bytes2,RemBytes} = ?RT_BER:split_list(Bytes1,Len),

%%-------------------------------------------------
%% attribute number 1 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term1,Bytes3,Rb2} = case Bytes2 of
<<2:2,_:1,1:5,_/binary>> ->
?RT_BER:decode_integer(Bytes2,{0,4294967295},[{tag,128,1,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes2, 0 }
end,

%%-------------------------------------------------
%% attribute number 2   External SDPOUTPUTCDR:MonetaryUnits OPTIONAL
%%-------------------------------------------------
   {Term2,Bytes4,Rb3} = case Bytes3 of
<<2:2,_:1,2:5,_/binary>> ->
'dec_MonetaryUnits'(Bytes3, opt_or_default, [{tag,128,2,'IMPLICIT',32}]);
_ ->
{ asn1_NOVALUE, Bytes3, 0 }
end,

%%-------------------------------------------------
%% attribute number 3 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term3,Bytes5,Rb4} = case Bytes4 of
<<2:2,_:1,3:5,_/binary>> ->
?RT_BER:decode_integer(Bytes4,{0,18446744073709551615},[{tag,128,3,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes4, 0 }
end,

%%-------------------------------------------------
%% attribute number 4 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term4,Bytes6,Rb5} = case Bytes5 of
<<2:2,_:1,4:5,_/binary>> ->
?RT_BER:decode_integer(Bytes5,{0,18446744073709551615},[{tag,128,4,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes5, 0 }
end,

%%-------------------------------------------------
%% attribute number 5 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term5,Bytes7,Rb6} = case Bytes6 of
<<2:2,_:1,5:5,_/binary>> ->
?RT_BER:decode_integer(Bytes6,{0,18446744073709551615},[{tag,128,5,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes6, 0 }
end,

%%-------------------------------------------------
%% attribute number 6 with type INTEGER OPTIONAL
%%-------------------------------------------------
   {Term6,Bytes8,Rb7} = case Bytes7 of
<<2:2,_:1,6:5,_/binary>> ->
?RT_BER:decode_integer(Bytes7,{0,18446744073709551615},[{tag,128,6,'IMPLICIT',32}], mandatory);
_ ->
{ asn1_NOVALUE, Bytes7, 0 }
end,

   {Bytes9,Rb8} = ?RT_BER:restbytes2(RemBytes, Bytes8,ext),
   {{'ServiceUnits', Term1, Term2, Term3, Term4, Term5, Term6}, Bytes9, Rb1+Rb2+Rb3+Rb4+Rb5+Rb6+Rb7+Rb8}.


%%================================
%%  SubscriberNumberString
%%================================

'enc_SubscriberNumberString'({'SubscriberNumberString',Val}, TagIn) ->
   'enc_SubscriberNumberString'(Val, TagIn);

'enc_SubscriberNumberString'(Val, TagIn) ->
?RT_BER:encode_restricted_string([], Val, 22, TagIn ++ []).


'dec_SubscriberNumberString'(Bytes, OptOrMand) ->
   'dec_SubscriberNumberString'(Bytes, OptOrMand, []).

'dec_SubscriberNumberString'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_restricted_string(Bytes,{0,30},22,TagIn++[], no_length, OptOrMand).



%%================================
%%  TimeStamp
%%================================

'enc_TimeStamp'({'TimeStamp',Val}, TagIn) ->
   'enc_TimeStamp'(Val, TagIn);

'enc_TimeStamp'(Val, TagIn) ->
?RT_BER:encode_restricted_string([], Val, 22, TagIn ++ []).


'dec_TimeStamp'(Bytes, OptOrMand) ->
   'dec_TimeStamp'(Bytes, OptOrMand, []).

'dec_TimeStamp'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_restricted_string(Bytes,19,22,TagIn++[], no_length, OptOrMand).



%%================================
%%  TransactionCode
%%================================

'enc_TransactionCode'({'TransactionCode',Val}, TagIn) ->
   'enc_TransactionCode'(Val, TagIn);

'enc_TransactionCode'(Val, TagIn) ->
?RT_BER:encode_restricted_string([], Val, 22, TagIn ++ []).


'dec_TransactionCode'(Bytes, OptOrMand) ->
   'dec_TransactionCode'(Bytes, OptOrMand, []).

'dec_TransactionCode'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_restricted_string(Bytes,{1,30},22,TagIn++[], no_length, OptOrMand).



%%================================
%%  TransactionID
%%================================

'enc_TransactionID'({'TransactionID',Val}, TagIn) ->
   'enc_TransactionID'(Val, TagIn);

'enc_TransactionID'(Val, TagIn) ->
?RT_BER:encode_restricted_string([], Val, 22, TagIn ++ []).


'dec_TransactionID'(Bytes, OptOrMand) ->
   'dec_TransactionID'(Bytes, OptOrMand, []).

'dec_TransactionID'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_restricted_string(Bytes,{1,20},22,TagIn++[], no_length, OptOrMand).



%%================================
%%  TransactionType
%%================================

'enc_TransactionType'({'TransactionType',Val}, TagIn) ->
   'enc_TransactionType'(Val, TagIn);

'enc_TransactionType'(Val, TagIn) ->
?RT_BER:encode_restricted_string([], Val, 22, TagIn ++ []).


'dec_TransactionType'(Bytes, OptOrMand) ->
   'dec_TransactionType'(Bytes, OptOrMand, []).

'dec_TransactionType'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_restricted_string(Bytes,{1,30},22,TagIn++[], no_length, OptOrMand).



%%================================
%%  Unsigned32
%%================================

'enc_Unsigned32'({'Unsigned32',Val}, TagIn) ->
   'enc_Unsigned32'(Val, TagIn);

'enc_Unsigned32'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_Unsigned32'(Bytes, OptOrMand) ->
   'dec_Unsigned32'(Bytes, OptOrMand, []).

'dec_Unsigned32'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{0,4294967295},TagIn++[], OptOrMand).



%%================================
%%  Unsigned64
%%================================

'enc_Unsigned64'({'Unsigned64',Val}, TagIn) ->
   'enc_Unsigned64'(Val, TagIn);

'enc_Unsigned64'(Val, TagIn) ->
?RT_BER:encode_integer([], Val, TagIn ++ []).


'dec_Unsigned64'(Bytes, OptOrMand) ->
   'dec_Unsigned64'(Bytes, OptOrMand, []).

'dec_Unsigned64'(Bytes, OptOrMand, TagIn) ->
?RT_BER:decode_integer(Bytes,{0,18446744073709551615},TagIn++[], OptOrMand).

